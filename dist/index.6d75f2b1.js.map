{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-17f7e6129ea686bf.js","src/utils/onReady.js","src/utils/getElement.js","node_modules/@swc/helpers/src/_define_property.mjs","src/host/input.ts","src/host/worker.ts","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-a7dd5e3a60c32e38.js","src/render/vector/exceptions.ts","src/render/vector/vec2Math.ts","src/render/vector/math.ts","src/render/vector/vec2.ts","src/render/items/item.js","src/render/items/circle.js","src/render/vector/vec2Line.ts","src/render/objects/types.ts","src/render/objects/collisionModels.js","src/render/objects/object.ts","src/render/objects/ball.ts","src/render/constrains/constrain.js","src/render/constrains/viewport.js","src/render/constrains/circle.js","src/render/objectsGenerator.js","src/render/mappedObjectsGenerator.js","src/render/totalObjectsGenerator.js","src/render/grid.ts","src/render/solver.ts","src/render/items/rect.js","src/render/renderableObjects/object.js","src/render/objects/immovableBall.ts","src/render/renderableObjects/immovableLine.js","src/render/objects/immovableLine.ts","src/render/items/line.js","src/render/items/circleWithText.js","src/render/items/frame.js","src/render/index.js","src/host/direct.ts","src/host/main.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"GHvDZ\\\":\\\"index.6d75f2b1.js\\\",\\\"bG1Fz\\\":\\\"main.d4701455.js\\\"}\"));","const DOCUMENT_STATE_LOADING = \"loading\";\n\n/**\n * Calls function when webpage is ready\n * @param {function} callback\n */\nexport function onReady(callback) {\n    if (document.readyState !== DOCUMENT_STATE_LOADING) {\n        callback();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    }\n}\n","export class ElementNotFound extends Error {}\n\nexport function getElement(selector) {\n    const element = document.querySelector(selector);\n    if (!element) {\n        throw new ElementNotFound(selector);\n    }\n\n    return element;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export interface UIEvent {}\n\nexport interface UIMouseEvent {\n    screenX: number,\n    screenY: number,\n    dx: number,\n    dy: number,\n    leftButtonDown: boolean\n}\n\nexport type UserInputHandler = (event: UIEvent) => void;\n\nexport class UserInput {\n    _canvas: HTMLCanvasElement;\n    _handlers: Set<UserInputHandler>;\n\n    _oldX: number;\n    _oldY: number;\n\n    _leftButtonDown: boolean;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this._canvas = canvas;\n        this._handlers = new Set();\n\n        this._leftButtonDown = false;\n\n        this.addHandlers();\n    }\n\n    private addHandlers() {\n        this._canvas.addEventListener('mouseenter', this.mouseEnter);\n        this._canvas.addEventListener('mouseleave', this.mouseLeave);\n        this._canvas.addEventListener('mousemove', this.mouseMove);\n        this._canvas.addEventListener('mousedown', this.mouseDown);\n        this._canvas.addEventListener('mouseup', this.mouseUp);\n        this._canvas.addEventListener('click', this.click);\n    }\n\n    private removeHandlers() {\n\n    }\n\n    private processEvent(event) {\n        this._handlers.forEach((callback: UserInputHandler) => {\n            callback(event);\n        })\n    }\n\n    addHandler(callback: UserInputHandler) {\n        this._handlers.add(callback);\n    }\n\n    removeHandler(callback: UserInputHandler) {\n        if (this._handlers.has(callback)) {\n            this._handlers.delete(callback);\n        }\n    }\n\n    createMouseEvent(browserEvent: MouseEvent): UIMouseEvent {\n        return {\n            screenX: browserEvent.offsetX,\n            screenY: browserEvent.offsetY,\n            dx: -this._oldX + browserEvent.offsetX,\n            dy: -this._oldY + browserEvent.offsetY,\n            leftButtonDown: this._leftButtonDown\n        }\n    }\n\n    mouseEnter = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseLeave = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseMove = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseDown = (browserEvent: MouseEvent) => {\n        this._leftButtonDown = true;\n\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseUp = (browserEvent: MouseEvent) => {\n        this._leftButtonDown = false;\n\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    click = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n}","import {UserInput, UIEvent} from \"./input\";\n\nexport enum MessageType {\n    MessageNone = 0,\n    MessageInit = 1,\n    MessageUserInput = 2\n}\n\nexport class MessageEvent {\n    type = MessageType.MessageNone;\n}\n\nexport class MessageInit extends MessageEvent {\n    type = MessageType.MessageInit;\n    canvas;\n\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n    }\n}\n\nexport class MessageUserInput extends MessageEvent {\n    type = MessageType.MessageUserInput;\n    event;\n\n    constructor(event) {\n        super();\n        this.event = event;\n    }\n}\n\nexport class WorkerApplication {\n    worker;\n    userInput;\n\n    constructor(canvas) {\n        this.worker = new Worker(new URL('../worker/main.ts', import.meta.url), {type: 'module'});\n        const offscreen = canvas.transferControlToOffscreen();\n\n        this.worker.postMessage(\n            new MessageInit(offscreen),\n            [offscreen]\n        );\n\n        this.userInput = new UserInput(canvas);\n        this.userInput.addHandler(this.sendUserInputEvent);\n    }\n\n    sendUserInputEvent = (event: UIEvent) => {\n        this.worker.postMessage(\n            new MessageUserInput(event)\n        )\n    }\n\n    initUserInput() {\n\n    }\n}","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bG1Fz\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","export class Vec2Exception extends Error {}\n\nexport class Vec2ExceptionParallel extends Vec2Exception {}\nexport class Vec2ExceptionNoPerpendicularVectorToZeroVector extends Vec2Exception {}","import { Vec2 } from \"./vec2\";\nimport { Vec2ExceptionParallel } from \"./exceptions\";\nimport { Vec2Line } from \"./vec2Line\";\n\nexport class Vec2Math {\n    static diff(vec1: Vec2, vec2: Vec2): Vec2 {\n        return new Vec2(vec1.x - vec2.x, vec1.y - vec2.y);\n    }\n\n    static mul(vec1: Vec2, scalar: number): Vec2 {\n        return new Vec2(vec1.x * scalar, vec1.y * scalar);\n    }\n\n    /**\n     * Calculates distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length;\n    }\n\n    /**\n     * Calculates square of distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance2(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length2;\n    }\n\n    /**\n     * Finds intersection between 2 lines\n     * @param {Vec2Line} line1\n     * @param {Vec2Line} line2\n     * @returns {Vec2}\n     */\n    static intersect(line1, line2) {\n        if (line1.K === line2.K) {\n            throw new Vec2ExceptionParallel()\n        }\n\n        if (isNaN(line1.K) || isNaN(line2.K)) {\n            // One of two lines is vertical\n            if (isNaN(line1.K)) {\n                return line2.makeVec2FromX(line1._vec1.x);\n            } else {\n                return line1.makeVec2FromX(line2._vec1.x);\n            }\n        } else {\n            const x = (line1.B - line2.B) / (line2.K - line1.K);\n            return line1.makeVec2FromX(x);\n        }\n    }\n\n    /**\n     * Dot product of 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static dot(vec1: Vec2, vec2: Vec2): number {\n        return vec1.x * vec2.x + vec1.y * vec2.y;\n    }\n\n    /**\n     *\n     * @param {Vec2} vec\n     * @param {Vec2Line} line\n     * @returns {Vec2}\n     */\n    static mirror(vec: Vec2, line: Vec2Line) {\n        const normal = line.direction.perpendicular;\n        return vec.diff(\n            normal.mul(2 * Vec2Math.dot(vec, normal))\n        );\n    }\n\n    static scale(vec1: Vec2, vec2: Vec2) {\n        return new Vec2(\n            vec1.x / vec2.x,\n            vec1.y / vec2.y\n        )\n    }\n}\n","export const MATH_ERROR = 0.000001;\nexport const MATH_ERROR2 = MATH_ERROR * MATH_ERROR;\nexport const SQRT2 = Math.sqrt(2);\n\n/**\n * Checks if a equals b with given error\n * @param {number} a\n * @param {number} b\n * @param {number} error\n * @returns {boolean}\n */\nexport function isEqual(a, b, error) {\n    return Math.abs(a - b) < error;\n}\n\nexport type NullableNumber = number | null;\n","import { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR2, NullableNumber } from \"./math\";\nimport { Vec2ExceptionNoPerpendicularVectorToZeroVector } from \"./exceptions\";\n\nexport class Vec2 {\n    private _x: number = 0;\n    private _y: number = 0;\n    private _length: NullableNumber = null;\n    private _length2: NullableNumber = null;\n\n    static lengthCallsCount = 0;\n    static length2CallsCount = 0;\n\n    constructor(x: number, y: number, l?: number) {\n        this._x = x;\n        this._y = y;\n\n        if (l) {\n            this._length = l;\n            this._length2 = l * l;\n        }\n    }\n\n    get x(): number {\n        return this._x;\n    }\n\n    get y(): number {\n        return this._y;\n    }\n\n    set x(x: number) {\n        this._x = x;\n        this._length = null;\n    }\n\n    set y(y:number) {\n        this._y = y;\n        this._length = null;\n    }\n\n    get length(): number {\n        if (this._length === null) {\n            this._length = Math.sqrt(this.x*this.x + this.y*this.y);\n            Vec2.lengthCallsCount++;\n        }\n\n        return this._length;\n    }\n\n    /**\n     * Returns length^2\n     */\n    get length2(): number {\n        if (this._length2 === null) {\n            this._length2 = this._x*this._x + this._y*this._y;\n            Vec2.length2CallsCount++;\n        }\n\n        return this._length2;\n    }\n\n    /**\n     * Adds vec2 to current vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    addSelf(vec2: Vec2): Vec2 {\n        this._x += vec2.x;\n        this._y += vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Subtract from current vector given vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    subSelf(vec2: Vec2): Vec2 {\n        this._x -= vec2.x;\n        this._y -= vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Flips along X axis\n     * @returns {Vec2}\n     */\n    flipYSelf(): Vec2 {\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Flips along Y axis\n     * @returns {Vec2}\n     */\n    flipXSelf(): Vec2 {\n        this._x = -this._x;\n        return this;\n    }\n\n    flipSelf(): Vec2 {\n        this._x = -this._x;\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Checks if this vector equals given vector using global MATH_ERROR const\n     * @param vec2\n     */\n    equals(vec2) {\n        return Vec2Math.distance2(this, vec2) < MATH_ERROR2;\n    }\n\n    /**\n     * Sums current vector and given vector and returns new vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sum(vec2: Vec2): Vec2 {\n        return new Vec2(this.x + vec2.x, this.y + vec2.y);\n    }\n\n    /**\n     * Calculate difference between current vector and given vector and returns\n     * new vector\n     *\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    diff(vec2: Vec2) {\n        return new Vec2(this.x - vec2.x, this.y - vec2.y);\n    }\n\n    /**\n     * Multiplicates vector by number\n     * @param {number} value\n     * @returns {Vec2}\n     */\n    mul(value: number) {\n        return new Vec2(this.x * value, this.y * value);\n    }\n\n    copy() {\n        return new Vec2(this.x, this.y);\n    }\n\n    applySelf(callback): Vec2 {\n        this.x = callback(this.x);\n        this.y = callback(this.y);\n        return this;\n    }\n\n    /**\n     * Returns normalized vector\n     * @returns {Vec2}\n     */\n    get ort() {\n        const l = this.length;\n        return new Vec2(this.x / l, this.y / l, 1);\n    }\n\n    get perpendicular() {\n        if (this.x === 0) {\n            // Vertical\n            if (this.y > 0) {\n                return Vec2.Horizontal().ort\n            } else if (this.y < 0) {\n                return Vec2.Horizontal().ort.flipSelf();\n            } else {\n                throw new Vec2ExceptionNoPerpendicularVectorToZeroVector();\n            }\n        } else if (this.y === 0) {\n            // Horizontal\n            if (this.x > 0) {\n                return Vec2.Vertical().ort\n            } else if (this.x < 0) {\n                return Vec2.Vertical().ort.flipSelf();\n            }\n        }\n\n        return new Vec2(\n            -this.y / this.x,\n            1\n        ).ort;\n    }\n\n    static Zero() {\n        return new Vec2(0, 0);\n    }\n\n    static Horizontal() {\n        return new Vec2(1, 0);\n    }\n\n    static Vertical() {\n        return new Vec2(0, 1);\n    }\n\n    static Down(y) {\n        return new Vec2(0, y);\n    }\n\n    static Right(x) {\n        return new Vec2(x, 0);\n    }\n}\n\n\n\n\n\n\n\n\n","import {Vec2} from \"../vector/vec2\";\n\nexport class Item {\n    position = Vec2.Zero();\n\n    /**\n     *\n     * @param {CanvasRenderingContext2D} context\n     */\n    constructor(context, position) {\n        this.context = context;\n        this.position = position;\n    }\n\n    /**\n     * Method immediately renders object on context\n     */\n    render() {\n\n    }\n\n    /**\n     * Method tries to put object in render block\n     */\n    queue() {\n\n    }\n}","import {Item} from \"./item\";\n\nexport class Circle extends Item {\n    r = 0;\n    color = '#00ff00';\n\n    constructor(context, position, r, color) {\n        super(context, position);\n\n        if (r) {\n            this.r = r;\n        }\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.beginPath()\n        this.context.arc(\n            this.position.x,\n            this.position.y,\n            this.r,\n            0,\n            2 * Math.PI\n        )\n\n        this.context.fillStyle = this.color;\n        this.context.fill();\n    }\n}","import { Vec2 } from \"./vec2\";\nimport { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR, isEqual } from \"./math\";\n\nexport class Vec2Line {\n    private _vec1: Vec2 = Vec2.Zero();\n    private _vec2: Vec2 = Vec2.Zero();\n\n    private _direction: Vec2;\n    private _ort: Vec2;\n\n    private _length: number;\n    private _length2: number;\n\n    /**\n     * Y = K*X + B\n     * @type {number}\n     */\n    private _k: number = 0;\n    private _b: number = 0;\n\n    constructor(vec1, vec2) {\n        this._vec1 = vec1;\n        this._vec2 = vec2;\n\n        this._direction = Vec2Math.diff(this._vec1, this._vec2);\n        this._length = this._direction.length;\n        this._length2 = this._direction.length2;\n        this._ort = this._direction.ort;\n\n        this.calculateKB();\n    }\n\n    /**\n     * Determines if given point lays on the line\n     * @param vec\n     * @returns {boolean}\n     */\n    inBetween(vec) {\n        const l1 = Vec2Math.diff(vec, this._vec1).length;\n        const l2 = Vec2Math.diff(this._vec2, vec).length;\n        const sum = l1 + l2;\n\n\n\n\n        return isEqual(this._length, sum, MATH_ERROR);\n    }\n\n    calculateKB() {\n        if (this._vec1.y === this._vec2.y) {\n            // Horizontal line\n            this._b = this._vec1.y;\n            this._k = 0;\n        } else if (this._vec1.x === this._vec2.x) {\n            // Vertical line\n            this._b = NaN;\n            this._k = NaN;\n        } else {\n            this._b = (this._vec1.x * this._vec2.y - this._vec1.y * this._vec2.x) / (this._vec1.x - this._vec2.x)\n            this._k = (this._vec1.y - this._vec2.y) / (this._vec1.x - this._vec2.x);\n        }\n    }\n\n    makeVec2FromX(x) {\n        return new Vec2(x, this._k * x + this._b);\n    }\n\n    copy() {\n        return new Vec2Line(\n            this._vec1,\n            this._vec2\n        )\n    }\n\n    moveBy(vec) {\n        this._vec1.addSelf(vec);\n        this._vec2.addSelf(vec);\n        this.calculateKB();\n    }\n\n    getPointProjection(vec) {\n        const a = this.direction;\n        const b = Vec2Math.diff(vec, this._vec1);\n        const cosabD = Vec2Math.dot(a, b) / (this.length);\n\n        return this._vec1.sum(\n            this.ort.mul(cosabD)\n        );\n    }\n\n    get B() {\n        return this._b;\n    }\n\n    get K() {\n        return this._k;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    get direction() {\n        return this._direction;\n    }\n\n    get ort() {\n        return this._ort;\n    }\n\n    get vec1() {\n        return this._vec1;\n    }\n\n    get vec2() {\n        return this._vec2;\n    }\n\n    static Vertical(x) {\n        return new Vec2Line(\n            new Vec2(x, 0),\n            new Vec2(x, Number.MAX_SAFE_INTEGER)\n        )\n    }\n\n    static Horizontal(y) {\n        return new Vec2Line(\n            new Vec2(0, y),\n            new Vec2(Number.MAX_SAFE_INTEGER, y)\n        )\n    }\n}","export enum SolverObjectTypes {\n    TypeNull = 0,\n    TypeBall = 1,\n    TypeImmovableBall = 2,\n    TypeImmovableLine = 3\n}\n","import {Vec2Math} from \"../vector/vec2Math\";\nimport {BallsObject} from \"./ball\";\nimport {SolverObjectTypes, TYPE_BALL, TYPE_IMMOVABLE_BALL, TYPE_IMMOVABLE_LINE} from \"./types\";\n\n/**\n * Collision between 2 balls objects\n * @param {BallsObject} obj1\n * @param {BallsObject} obj2\n */\nexport function collideBallAndBall(obj1, obj2) {\n    const between = Vec2Math.diff(obj1.currentPosition, obj2.currentPosition);\n    const distance = between.length;\n    const requiredDistance = obj1.radius + obj2.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        obj1.currentPosition.addSelf(Vec2Math.mul(normalized, obj1.radius / requiredDistance * delta * obj1.bounceValue));\n        obj2.currentPosition.subSelf(Vec2Math.mul(normalized, obj2.radius / requiredDistance * delta * obj2.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable ball\n * @param {BallsObject} ball\n * @param {ImmovableBallsObject} immovable\n */\nexport function collideBallAndImmovableBall(ball, immovable) {\n    const between = Vec2Math.diff(\n        ball.currentPosition,\n        immovable.currentPosition\n    );\n\n    const distance = between.length;\n    const requiredDistance = ball.radius + immovable.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        ball.currentPosition.addSelf(Vec2Math.mul(normalized, ball.radius / requiredDistance * delta * ball.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovableLineObject} line\n */\nexport function collideBallAndImmovableLine(ball, line) {\n    try {\n        const projectionPoint = line._line.getPointProjection(ball.currentPosition);\n\n        if (line._line.inBetween(projectionPoint)) {\n            const between = Vec2Math.diff(\n                projectionPoint,\n                ball.currentPosition\n            )\n\n            if (between.length < ball.radius) {\n                const normalized = between.ort;\n\n                const delta = ball.radius - between.length;\n\n                ball.currentPosition.subSelf(\n                    Vec2Math.mul(normalized, delta * ball.bounceValue)\n                )\n            }\n        }\n    } catch (e) {\n    }\n}\n\nfunction flipObjects(obj1, obj2) {\n    return {\n        a: obj2,\n        b: obj1\n    }\n}\n\nexport function collide(a, b) {\n    let obj1 = a;\n    let obj2 = b;\n    if (obj1.type > obj2.type) {\n        const flipped = flipObjects(obj1, obj2);\n        obj1 = flipped.a;\n        obj2 = flipped.b\n    }\n\n    switch (true) {\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeBall:\n            return collideBallAndBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableBall:\n            return collideBallAndImmovableBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableLine:\n            return collideBallAndImmovableLine(obj1, obj2);\n        default:\n            return;\n    }\n}","import {SolverObjectTypes} from \"./types\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport abstract class BaseSolverObject {\n    readonly type: SolverObjectTypes = SolverObjectTypes.TypeNull;\n    readonly index: number;\n    readonly immovable: boolean;\n\n    previousPosition = Vec2.Zero();\n    currentPosition = Vec2.Zero();\n\n    constructor() {\n        this.index = BaseSolverObject.index++;\n    }\n\n    update(step) {\n\n    }\n\n    accelerate(acc) {\n\n    }\n\n    collide(obj) {\n\n    }\n\n    addToGrid(collisionGrid) {\n\n    }\n\n    abstract moveBy(delta: Vec2);\n\n    abstract isPointInsideObject(point: Vec2): boolean;\n\n    static index = 0;\n}\n","import { Vec2 } from \"../vector/vec2\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport { Vec2Math } from \"../vector/vec2Math\";\nimport {SolverObjectTypes} from \"./types\";\nimport { collide } from \"./collisionModels\";\nimport {BaseSolverObject} from \"./object\";\nimport {CollisionGrid} from \"../grid\";\n\nexport class BallsObject extends BaseSolverObject {\n    acc = Vec2.Zero();\n\n    radius = 10;\n    bounceValue = 1.1;\n\n    type = SolverObjectTypes.TypeBall;\n    immovable = false;\n\n    /**\n     * Creates balls object\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super();\n        this.previousPosition = position.copy();\n        this.currentPosition = position.copy();\n        if (radius !== undefined) {\n            this.radius = radius\n        }\n    }\n\n    /**\n     * Updates state of object\n     * @param {number} step\n     */\n    update(step) {\n        const velocity = this.velocity;\n        this.previousPosition = this.currentPosition.copy();\n        this.currentPosition.addSelf(\n            velocity.addSelf(\n                this.acc.mul(step * step)\n            )\n        )\n        this.acc = Vec2.Zero();\n    }\n\n    accelerate(acc) {\n        this.acc.addSelf(acc);\n        return this;\n    }\n\n    setVelocity(vel) {\n        this.velocity = vel;\n        return this;\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    collide(obj) {\n        collide(this, obj)\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        collisionGrid.addObject(\n            Math.floor(this.currentPosition.x),\n            Math.floor(this.currentPosition.y),\n            this\n        )\n    }\n\n    moveBy(delta: Vec2) {\n        this.currentPosition.addSelf(delta);\n    }\n\n    isPointInsideObject(point: Vec2): boolean {\n        return Vec2Math.distance(this.currentPosition, point) < this.radius;\n    }\n\n    get velocity() {\n        return Vec2Math.diff(\n            this.currentPosition,\n            this.previousPosition\n        );\n    }\n\n    set velocity(v) {\n        this.previousPosition = Vec2Math.diff(this.currentPosition,v);\n    }\n\n    /**\n     *\n     * @returns {Vec2Line}\n     */\n    get movementVector() {\n        return new Vec2Line(this.previousPosition, this.currentPosition);\n    }\n}","export class Constrain {\n    constructor() {\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    applyConstrain(obj) {\n\n    }\n}","import { Constrain } from \"./constrain\";\n\nexport class ViewportConstrain extends Constrain {\n    _width = 0;\n    _height = 0;\n\n    constructor(width, height) {\n        super()\n        this.width = width;\n        this.height = height;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    set width(width) {\n        this._width = width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    set height(height) {\n        this._height = height;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        if (obj.currentPosition.x - obj.radius < 0) {\n            obj.currentPosition.x = obj.radius;\n        }\n\n        if (obj.currentPosition.x + obj.radius > this._width) {\n            obj.currentPosition.x = this._width - obj.radius;\n        }\n\n        if (obj.currentPosition.y - obj.radius < 0) {\n            obj.currentPosition.y = obj.radius;\n        }\n\n        if (obj.currentPosition.y + obj.radius > this._height) {\n            obj.currentPosition.y = this._height - obj.radius;\n        }\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class CircleConstrain extends Constrain {\n    /**\n     *\n     * @type {Vec2}\n     */\n    center = Vec2.Zero();\n\n    radius = 0;\n\n    constructor(center, radius) {\n        super();\n\n        this.center = center;\n        this.radius = radius;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        const toCenter = obj.currentPosition.diff(this.center);\n        const distance = toCenter.length;\n        const r = obj.radius;\n\n        if (distance > (this.radius - r)) {\n            const n = toCenter.ort;\n            obj.currentPosition = this.center.sum(\n                n.mul(this.radius - r)\n            );\n        }\n    }\n\n}","export class ObjectsGenerator {\n    solver = null;\n    constructor(solver) {\n        this.solver = solver;\n    }\n\n    // TODO Make me iterator\n    getNextObject(step) {\n        return [];\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\n\nexport class MappedObjectGeneratorItem {\n    /**\n     * Delay before object appear\n     * @type {number}\n     */\n    timeout;\n\n    /**\n     * Object configuration\n     * @type {BallsObject}\n     */\n    object;\n\n    constructor(timeout, object) {\n        this.timeout = timeout;\n        this.object = object;\n    }\n\n}\n\nexport class MappedObjectsGenerator extends ObjectsGenerator {\n    /**\n     * @param {MappedObjectGeneratorItem[]} map\n     */\n    constructor(solver, map) {\n        super(solver);\n\n        this.items = map;\n        this.currentTime = 0;\n    }\n\n    getNextObject(step) {\n        this.currentTime += step;\n\n        console.log(this.currentTime)\n\n        const index = this.items.findIndex((item) => item.timeout < this.currentTime);\n        if (index > -1) {\n            return [this.items.splice(index, 1)[0].object];\n        }\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\nexport class TotalObjectsGenerator extends ObjectsGenerator {\n    constructor(solver, count, delay, createCallback) {\n        super(solver);\n        this.limit = count;\n        this.total = 0;\n\n        this.delay = delay;\n        this.create = createCallback;\n        this.lastCreateTime = 0;\n    }\n\n    getNextObject(step) {\n        if (this.total > this.limit) {\n            return [];\n        }\n\n        this.lastCreateTime += 1;\n        if (this.lastCreateTime > this.delay) {\n            const newItems = this.create(this.total);\n            this.lastCreateTime = 0;\n            this.total+= newItems.length;\n\n            return newItems;\n        }\n    }\n}","import { Vec2 } from \"./vector/vec2\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {Vec2Math} from \"./vector/vec2Math\";\n\nexport class CollisionCell {\n    objects: BaseSolverObject[] = [];\n    highlight: boolean = false;\n\n    addObject(obj) {\n        this.objects.push(obj);\n    }\n\n    clear() {\n        this.objects = [];\n        this.highlight = false;\n    }\n\n    remove(index) {\n        const objectIndex = this.objects.findIndex(obj => obj.index === index);\n        if (objectIndex !== -1) {\n            this.objects.splice(objectIndex, 1);\n        }\n    }\n\n    get count() {\n        return this.objects.length;\n    }\n}\n\ntype CollisionGridForEachCallback = (x: number, y: number, cell: CollisionCell, index?: number) => void;\n\nexport class CollisionGrid {\n    cells: CollisionCell[] = [];\n    _width: number;\n    _height: number;\n    _size: number;\n    cellSize: Vec2;\n\n    constructor(width, height, cellSize: Vec2) {\n        this._width = width;\n        this._height = height;\n\n        this.cellSize = cellSize;\n\n        this.resize();\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    set width(w: number) {\n        this._width = w;\n        this.resize();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    set height(h: number) {\n        this._height = h;\n        this.resize();\n    }\n\n    resize() {\n        this.cells = [];\n        this._size = this._width * this._height;\n        for (let i = 0; i < this._size; i++) {\n            this.cells.push(new CollisionCell());\n        }\n    }\n\n    addObject(worldX, worldY, obj) {\n        const x = Math.floor(worldX / this.cellSize.x);\n        const y = Math.floor(worldY / this.cellSize.y);\n\n        const index = x * this.width + y;\n        this.addObjectByIndex(index, obj);\n    }\n\n    addObjectByIndex(index, obj) {\n        if (!isNaN(index) && index>=0 && index<this.size) {\n            this.cells[index].addObject(obj);\n        }\n    }\n\n    makeIndexFromVec(vec) {\n        return vec.x * this.width + vec.y;\n    }\n\n    makeIndexFromCoord(x, y) {\n        return x * this.width + y;\n    }\n\n    /**\n     * Adds object to all cells between given coords\n     * @param worldLeftTop\n     * @param worldRightBottom\n     * @param obj\n     */\n    addObjectToCells(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject) {\n        const point1 = Vec2Math.scale(worldLeftTop, this.cellSize).applySelf(Math.floor);\n        const point2 = Vec2Math.scale(worldRightBottom, this.cellSize).applySelf(Math.floor);\n\n        const index1 = this.makeIndexFromVec(point1);\n        const index2 = this.makeIndexFromVec(point2);\n\n        if (point1.x === point2.x) {\n            // Vertical\n            for (let cellIndex = index1; cellIndex < index2; cellIndex++) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else if (point1.y === point2.y) {\n            // Horizontal\n            for (let cellIndex = index1; cellIndex < index2; cellIndex+=this.height) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else {\n            let left = Math.min(point1.x, point2.x);\n            let top = Math.min(point1.y, point2.y);\n            let right = Math.max(point1.x, point2.x);\n            let bottom = Math.max(point1.y, point2.y);\n            let height = bottom - top;\n            let startFrom = this.makeIndexFromCoord(left, top);\n\n            for (let x = 0; x <= right-left; x++) {\n                for (let y = 0; y <= height; y++) {\n                    const cellIndex= startFrom + x * this.height + y;\n                    this.addObjectByIndex(cellIndex, obj);\n                }\n            }\n        }\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            this.cells[i].clear();\n        }\n    }\n\n    forEach(callback: CollisionGridForEachCallback) {\n        this.cells.forEach((cell, index) => {\n            const x = Math.floor(index / this.width);\n            const y = index - x * this.width;\n            callback(x, y, cell, index);\n        })\n    }\n\n    hasCell(index, dt) {\n        if (index < 0 || index >= this.size) {\n            return false;\n        }\n\n        const x = Math.floor(index / this.width);\n        const y = index - x * this.width;\n\n        if (y <= 0 && dt < 0) {\n            // TOP CELL\n            return false;\n        }\n\n        if (y === this.height - 1 && dt > 0) {\n            // Bottom cell\n            return  false;\n        }\n\n        if (x === 0 && dt < 0) {\n            // left cell\n            return false;\n        }\n\n        if (x >= this.width - 1 && dt > 0) {\n            // right cell;\n            return false;\n        }\n\n        return true;\n    }\n}\n","import {Vec2} from \"./vector/vec2\";\nimport {BallsObject} from \"./objects/ball\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {Constrain} from \"./constrains/constrain\";\nimport {CollisionCell, CollisionGrid} from \"./grid\";\n\nexport class Solver {\n    objects: BaseSolverObject[] = []\n    constrains: Constrain = null;\n    gravity: Vec2 = Vec2.Zero();\n    subSteps: number = 4;\n    useFixedTime: boolean = true;\n    step: number;\n    collisionGrid: CollisionGrid;\n    worldSize: Vec2;\n\n    cellSize: Vec2;\n\n    constructor(worldSize) {\n        this.objects = [];\n        this.worldSize = worldSize.copy();\n\n        this.configure();\n    }\n\n    configure() {\n        this.gravity = new Vec2(0, 100);\n\n        this.useFixedTime = true;\n        this.step = 0.017 / this.subSteps;\n\n        const grids = 30;\n\n        this.cellSize = new Vec2(\n            this.worldSize.x / grids,\n            this.worldSize.y / grids\n        );\n\n        this.collisionGrid = new CollisionGrid(\n            grids, grids,\n            this.cellSize\n        )\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n    }\n\n    /**\n     * Update the simulation by given step.\n     * @param {number} time amount of seconds passed since last update.\n     */\n    update(time) {\n        const subTime = this.useFixedTime ? this.step : time / this.subSteps;\n        for (let i = 0; i < this.subSteps; i++) {\n            this.addObjectsToGrid();\n            this.processCollisions();\n            this.applyGravity();\n            this.updateObjects(subTime);\n            this.applyConstrains();\n        }\n    }\n\n    addObjectsToGrid() {\n        this.collisionGrid.clear();\n        this.objects.forEach((obj, index) => {\n            obj.addToGrid(this.collisionGrid);\n        });\n    }\n\n    /**\n     * Update objects state\n     * @param {number} time amount of seconds passed since last update\n     */\n    updateObjects(time) {\n        this.objects.forEach(obj => obj.update(time))\n    }\n\n    applyGravity() {\n        this.objects.forEach(obj => obj.accelerate(this.gravity))\n    }\n\n    applyConstrains() {\n        this.objects.forEach(obj => this.constrains.applyConstrain(obj))\n    }\n\n    processCollisionsInCell(objA: BaseSolverObject, cell: CollisionCell) {\n        cell.objects.forEach(objB => {\n            if (objA === objB) {\n                return;\n            }\n\n            if (objA.immovable && objB.immovable) {\n                return;\n            }\n\n            objA.collide(objB);\n        })\n    }\n\n    processCell(index: number) {\n        this.collisionGrid.cells[index].objects.forEach(objA => {\n            this.processCollisionsInCell(objA, this.collisionGrid.cells[index]); // SELF\n\n            if (this.collisionGrid.hasCell(index, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - 1]); // TOP\n            }\n\n            if (this.collisionGrid.hasCell(index, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + 1]); // BOTTOM\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height - 1]); // RIGHT TOP\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, 0)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height]); // RIGHT\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height + 1]); // RIGHT BOTTOM\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height - 1]); // LEFT TOP\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, 0)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height]); // LEFT\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height + 1]); // LEFT BOTTOM\n            }\n        })\n    }\n\n    processCollisions() {\n        for (let index = 0; index < this.collisionGrid.size; index++) {\n            this.processCell(index);\n        }\n    }\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Rect extends Item {\n    size = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, size, color) {\n        super(context, position);\n\n        this.size = size;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.fillStyle = this.color;\n        this.context.fillRect(\n            this.position.x,\n            this.position.y,\n            this.position.x + this.size.x,\n            this.position.y + this.size.y\n        )\n    }\n}","export class RenderableObject {\n    /**\n     * @type {BallsObject}\n     */\n    ballsObject = null;\n\n    /**\n     * @type {Item}\n     */\n    renderItem = null;\n\n    constructor(ballsObject, renderItem) {\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        this.renderItem.position = this.ballsObject.currentPosition;\n    }\n\n    render() {\n        this.update();\n        this.renderItem.render();\n    }\n}","import {BallsObject} from \"./ball\";\nimport {SolverObjectTypes} from \"./types\";\nimport {CollisionGrid} from \"../grid\";\nimport {SQRT2} from \"../vector/math\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class ImmovableBallsObject extends BallsObject {\n    type = SolverObjectTypes.TypeImmovableBall;\n    immovable = true;\n\n    /**\n     * @type {Vec2}\n     * @private\n     */\n    _fixedPosition = null;\n\n    /**\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super(position, radius);\n        this._fixedPosition = position.copy();\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        const vec = new Vec2(\n            this.radius * SQRT2,\n            this.radius * SQRT2\n        )\n\n        const leftTop = this.currentPosition.sum(vec);\n        const rightBottom = this.currentPosition.diff(vec);\n\n        collisionGrid.addObjectToCells(\n            leftTop,\n            rightBottom,\n            this\n        );\n    }\n}","import {RenderableObject} from \"./object\";\n\nexport class ImmovableLineRenderableObject extends RenderableObject {\n    /**\n     * @type {ImmovableLineObject}\n     */\n    ballsObject = null;\n\n    constructor(ballsObject, renderItem) {\n        super(ballsObject);\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        super.update();\n        this.renderItem.direction = this.ballsObject._direction;\n    }\n}","import { BallsObject } from \"./ball\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport {SolverObjectTypes} from \"./types\";\nimport {CollisionGrid} from \"../grid\";\n\nexport class ImmovableLineObject extends BallsObject {\n    _direction;\n    _line;\n\n    type = SolverObjectTypes.TypeImmovableLine;\n    immovable = true;\n\n    constructor(position, direction) {\n        super(position, 0);\n        this._direction = direction;\n\n        this._line = new Vec2Line(\n            this.currentPosition.copy(),\n            this.currentPosition.copy().sum(this._direction)\n        )\n    }\n\n    update(step) {\n        this.currentPosition = this._line._vec1;\n        this.previousPosition = this._line._vec2;\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        collisionGrid.addObjectToCells(\n            this._line._vec1,\n            this._line._vec2,\n            this\n        );\n    }\n\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Line extends Item {\n    direction = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, direction, color) {\n        super(context, position);\n\n        this.direction = direction;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.beginPath(); // Start a new path\n        this.context.moveTo(this.position.x, this.position.y);\n        this.context.lineTo(\n            this.position.x + this.direction.x,\n            this.position.y + this.direction.y\n        );\n        this.context.stroke(); // Render the path\n    }\n}","import {Circle} from \"./circle\";\n\nexport class CircleWithText extends Circle {\n    text = '';\n    textColor = '#ffffff';\n\n    constructor(context, position,r, color, text, textColor) {\n        super(context, position, r, color);\n        this.text = text;\n        if (textColor) {\n            this.textColor = textColor;\n        }\n    }\n\n    render() {\n        super.render();\n        this.context.fillStyle = this.textColor;\n        this.context.textBaseline = \"middle\";\n        this.context.textAlign = \"center\";\n        this.context.fillText(this.text, this.position.x, this.position.y);\n    }\n}","import {Rect} from \"./rect\";\n\nexport class Frame extends Rect {\n    constructor(context, position, size, color) {\n        super(context, position, size, color);\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.strokeRect(\n            this.position.x,\n            this.position.y,\n            this.size.x,\n            this.size.y\n        )\n    }\n\n    queue() {\n\n    }\n}","import {Circle} from \"./items/circle\";\nimport {Vec2} from \"./vector/vec2\";\nimport {Vec2Math} from \"./vector/vec2Math\";\nimport {BallsObject} from \"./objects/ball\";\nimport {ViewportConstrain} from \"./constrains/viewport\";\nimport {CircleConstrain} from \"./constrains/circle\";\nimport {MappedObjectGeneratorItem, MappedObjectsGenerator} from \"./mappedObjectsGenerator\";\nimport {TotalObjectsGenerator} from \"./totalObjectsGenerator\";\nimport {Solver} from \"./solver\";\nimport {Rect} from \"./items/rect\";\nimport {RenderableObject} from \"./renderableObjects/object\";\nimport {ImmovableBallsObject} from \"./objects/immovableBall\";\nimport {ImmovableLineRenderableObject} from \"./renderableObjects/immovableLine\";\nimport {ImmovableLineObject} from \"./objects/immovableLine\";\nimport {Line} from \"./items/line\";\nimport {CircleWithText} from \"./items/circleWithText\";\nimport {Frame} from \"./items/frame\";\n\nconst balls = [\n    new MappedObjectGeneratorItem(\n        1,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        2,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        3,\n        new BallsObject(new Vec2(10, 10))\n    ),\n]\n\nconst milkShakePoints = [\n    new Vec2(60, 110),\n    new Vec2(130, 490),\n    new Vec2(330, 490),\n    new Vec2(400, 110)\n]\n\nconst milkShakeLines = [\n    [milkShakePoints[0], Vec2Math.diff(milkShakePoints[0], milkShakePoints[1]).flipSelf()],\n    [milkShakePoints[1], Vec2Math.diff(milkShakePoints[1], milkShakePoints[2]).flipSelf()],\n    [milkShakePoints[2], Vec2Math.diff(milkShakePoints[2], milkShakePoints[3]).flipSelf()]\n]\n\nconst ballsColors = {\n    57: '#ffffff',\n    78: '#ffffff',\n    71: '#ffffff',\n    86: '#ffffff',\n    200: '#ffffff',\n    202: '#ffffff',\n    218: '#ffffff',\n}\n\nfunction index2color(index) {\n    const frequency=5/1000;\n    const r = Math.floor(Math.sin(frequency*index + 0) * (127) + 128);\n    const g = Math.floor(Math.sin(frequency*index + 2) * (127) + 128);\n    const b = Math.floor(Math.sin(frequency*index + 4) * (127) + 128);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n}\n\nexport class Render {\n    /**\n     * List of balls\n     * @type {RenderableObject[]}\n     */\n    objects = []\n\n    /**\n     * @type {Constrain}\n     */\n    constrains = null;\n\n    /**\n     * Solver for physics\n     * @type {Solver}\n     */\n    solver = null;\n\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.timeRenderStart = performance.now();\n        this.timeRenderEnd = performance.now();\n        this.step = 0;\n\n        /**\n         * @type {RenderableObject[]}\n         */\n        this.objects = [];\n\n        this.items = [];\n\n        this.generator = null;\n        this.solver = null\n\n        this.redBall = null;\n\n        this.configure();\n    }\n\n    configure() {\n        this.solver = new Solver(\n            new Vec2(\n                this.canvas.width,\n                this.canvas.height\n            )\n        );\n\n        this.context.font = '10px serif';\n\n        //this.switchToCircleConstrain();\n        this.switchToViewportConstrain();\n        this.solver.constrains = this.constrains;\n\n        const canvasCenter = new Vec2(\n            this.canvas.width / 2,\n            this.canvas.height / 2\n        );\n\n        const ballGeneratorPoint = new Vec2(\n            10, 100\n        );\n        const ballVelocity = new Vec2(\n            2, -2\n        ).mul(1/this.solver.subSteps);\n\n        this.generator = new TotalObjectsGenerator(\n            this.solver,\n            1000,\n            7,\n            (index) => {\n                const obj = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint,\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index+200),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj2 = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index+100),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj3 = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(-20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                return [obj,obj2, obj3];\n            }\n        );\n\n        this.redBall = new RenderableObject(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.context, Vec2.Zero(), 30, '#ff0000')\n        );\n\n        this.addObject(this.redBall);\n\n        milkShakeLines.forEach(line => {\n            this.addObject(new ImmovableLineRenderableObject(\n                new ImmovableLineObject(\n                    line[0],\n                    line[1]\n                ),\n                new Line(\n                    this.context,\n                    Vec2.Zero(),\n                    Vec2.Zero(),\n                    '#ffffff'\n                )\n            ));\n        });\n    }\n\n    processUserInput(event) {\n        if (event.leftButtonDown) {\n            if (this.redBall.ballsObject.isPointInsideObject(\n                new Vec2(\n                    event.screenX,\n                    event.screenY\n                )\n            )) {\n                this.canMoveRedObject = true;\n            }\n\n            if (this.canMoveRedObject) {\n                this.redBall.ballsObject.moveBy(\n                    new Vec2(\n                        event.dx,\n                        event.dy\n                    )\n                )\n            }\n        } else {\n            this.canMoveRedObject = false;\n        }\n    }\n\n    /**\n     * @param {RenderableObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n        this.solver.addObject(obj.ballsObject);\n    }\n\n    update(time) {\n        this.solver.update(time);\n    }\n\n    generatorsTick(time) {\n        const newBalls = this.generator.getNextObject(time);\n        if (newBalls) {\n            newBalls.forEach(ball => this.addObject(ball));\n        }\n    }\n\n    tick() {\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.generatorsTick(this.step / 1000);\n        this.update(this.step / 1000);\n\n        this.clear();\n        this.renderItems();\n       // this.renderGrid();\n\n        this.printFPS();\n\n        Vec2.lengthCallsCount = 0;\n    }\n\n    nextFrame = (time) => {\n        this.step = time - this.timeRenderEnd;\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = time;\n        self.requestAnimationFrame(this.nextFrame);\n    }\n\n    nextInterval = () => {\n        this.timeRenderStart = performance.now()\n        this.step = this.timeRenderStart - this.timeRenderEnd;\n\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = performance.now();\n    }\n\n    renderItems() {\n        this.items.forEach(item => item.render());\n        this.objects.forEach(obj => obj.render());\n    }\n\n    printText(text, x, y) {\n        this.context.fillStyle = \"#ffffff\";\n        this.context.textAlign = \"start\";\n        this.context.fillText(text, x, y);\n    }\n\n    printFPS() {\n        this.context.fillStyle = 'rgba(0,0,0,0.1)';\n        this.context.fillRect(0, 0, 100, 60);\n        this.printText(`${Math.round(this.step)} ms / ${Math.round(1000/this.step)} FPS`, 0, 10);\n        this.printText(`Length calls: ${Vec2.lengthCallsCount}`, 0 , 20);\n        this.printText(`Lenght2 calls: ${Vec2.length2CallsCount}`, 0 , 30);\n        this.printText(`Objects: ${this.objects.length}`, 0, 40);\n        this.printText(`Compares per object: ${Math.round(Vec2.lengthCallsCount / this.objects.length)}`, 0, 50);\n    }\n\n    clear() {\n        this.context.fillStyle = \"rgba(0, 0, 0, 0.9)\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    }\n\n    start() {\n        if (self.requestAnimationFrame) {\n            self.requestAnimationFrame(this.nextFrame);\n        } else {\n            setInterval(this.nextInterval, 16)\n        }\n    }\n\n    renderGrid() {\n        this.solver.collisionGrid.forEach((x, y, cell, index) => {\n            const cellPosition = new Vec2(\n                x * this.solver.cellSize.x,\n                y * this.solver.cellSize.y,\n            );\n            const rect = new Frame(\n                this.context,\n                cellPosition,\n                this.solver.cellSize.diff(new Vec2(5, 5)),\n                cell.count > 0 ? '#ff0000' : '#00ff00'\n            )\n\n            if (cell.highlight) {\n                this.context.lineWidth = 10;\n            }\n\n            rect.render();\n\n            this.context.lineWidth = 1;\n            this.printText(\n                cell.count,\n                cellPosition.x + this.solver.cellSize.x / 2,\n                cellPosition.y + this.solver.cellSize.y / 2\n            )\n        })\n    }\n\n    switchToCircleConstrain() {\n        this.constrains = new CircleConstrain(\n            new Vec2(this.canvas.width / 2, this.canvas.height / 2),\n            this.canvas.height / 2\n        )\n\n        this.items.push(\n            new Circle(\n                this.context,\n                this.canvas.width / 2,\n                this.canvas.height / 2,\n                this.canvas.height / 2,\n                '#000000'\n            )\n        );\n    }\n\n    switchToViewportConstrain() {\n        this.constrains = new ViewportConstrain(this.canvas.width, this.canvas.height)\n        // this.items.push(\n        //     new Rect(\n        //         this.context,\n        //         Vec2.Zero(),\n        //         new Vec2(\n        //             this.canvas.width,\n        //             this.canvas.height\n        //         ),\n        //         '#000000'\n        //     )\n        // );\n    }\n}","import {Render} from \"../render\";\nimport {UIEvent, UserInput} from \"./input\";\n\nexport class DirectApplication {\n    render;\n    userInput;\n\n    constructor(canvas) {\n        this.render = new Render(canvas);\n        this.render.start();\n\n        this.userInput = new UserInput(canvas);\n        this.userInput.addHandler(this.sendUserInputEvent);\n    }\n\n    sendUserInputEvent = (event) => {\n        this.render.processUserInput(event)\n    }\n}","import { onReady }  from \"../utils/onReady\";\nimport { getElement } from \"../utils/getElement\";\n\nimport {WorkerApplication} from \"./worker\";\nimport {DirectApplication} from \"./direct\";\n\nfunction initApplication() {\n    console.log('Init application');\n    /**\n     * @var {HTMLCanvasElement}\n     */\n    const canvas = getElement(\"#image_canvas\");\n\n    if (canvas.transferControlToOffscreen) {\n        console.log('Render in worker');\n        const application = new WorkerApplication(canvas);\n    } else {\n        // There is no support for offscreen render\n        console.log('Render in main thread');\n        const application = new DirectApplication(canvas);\n    }\n}\n\nonReady(initApplication);"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$8a42e5d5abfdc424$var$DOCUMENT_STATE_LOADING","$1fdac2036baae513$export$9a8db54f22040fa8","$bb9a5d09fff8458d$export$2e2bcd8739ae039","obj","key","value","defineProperty","enumerable","configurable","writable","$4c3c3def41bff24a$export$3ac5e585cf392ee0","addHandlers","this","_canvas","addEventListener","mouseEnter","mouseLeave","mouseMove","mouseDown","mouseUp","click","removeHandlers","processEvent","event","_handlers","forEach","callback","addHandler","add","removeHandler","has","delete","createMouseEvent","browserEvent","screenX","offsetX","screenY","offsetY","dx","_oldX","dy","_oldY","leftButtonDown","_leftButtonDown","constructor","canvas","Set","$3b9d1290c4a59f83$export$80edbf15fa61a4db","MessageType","$3b9d1290c4a59f83$export$fbae1a0d0e7e2437","MessageNone","$3b9d1290c4a59f83$export$fd1648b71482b662","super","MessageInit","$3b9d1290c4a59f83$export$45b98a991719aa36","MessageUserInput","$cfc619e94ff51e3f$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$db8638db384bfa05$var$url","resolve","url","$db8638db384bfa05$exports","toString","$3b9d1290c4a59f83$export$6bb4378561ad428b","initUserInput","worker","postMessage","Worker","offscreen","transferControlToOffscreen","userInput","sendUserInputEvent","$459fb0a8ec8bcd7c$export$79992de41895b472","$459fb0a8ec8bcd7c$export$98e05f023e6bbbeb","$459fb0a8ec8bcd7c$export$cc5bbfba1d12de75","$b4286c963bff21ce$export$92b0492af2e4b152","static","vec1","vec2","$00c8a36acdca46b7$export$ac4bca90992eed1","x","y","scalar","diff","length2","line1","line2","K","isNaN","makeVec2FromX","_vec1","B","vec","line","normal","direction","perpendicular","mul","dot","$26f978d279431b93$export$9201df218db36553","$26f978d279431b93$export$3681641e15b6e2c3","Math","sqrt","_x","_y","_length","lengthCallsCount","_length2","length2CallsCount","addSelf","subSelf","flipYSelf","flipXSelf","flipSelf","equals","distance2","sum","copy","applySelf","ort","l","Horizontal","Vertical","$ac411b27688e0230$export$6d08773d2e66f8f2","render","queue","context","position","Zero","$862240837b78d20e$export$c89a927ffc67e6fa","beginPath","arc","r","PI","fillStyle","color","fill","$a9e45ba1d69ffacf$export$769818a274da100a","inBetween","_vec2","a","b","error","abs","calculateKB","_b","_k","NaN","moveBy","getPointProjection","cosabD","_direction","_ort","Number","MAX_SAFE_INTEGER","$9185eb299320cede$export$a59432db1b5f15cd","SolverObjectTypes","$0755b85fc87973c5$export$98e6d07575f46913","obj1","obj2","flipped","$0755b85fc87973c5$var$flipObjects","TypeBall","between","currentPosition","distance","requiredDistance","radius","normalized","delta","bounceValue","$0755b85fc87973c5$export$23e74c69ee7b6dae","TypeImmovableBall","ball","immovable","$0755b85fc87973c5$export$6d6f4258faab0992","TypeImmovableLine","projectionPoint","_line","e","$0755b85fc87973c5$export$4d790f09e0e06cd9","$d6317ada4f40318e$export$8387ea1f2c3d2dbf","update","step","accelerate","acc","collide","addToGrid","collisionGrid","TypeNull","index","$f725ec4af34641ef$export$e4134913c977dac4","velocity","previousPosition","setVelocity","vel","addObject","floor","isPointInsideObject","point","v","movementVector","undefined","$4b97689a079fa103$export$504c072c1a75a697","applyConstrain","$00201ec98320169b$export$29fb847bec292dd0","width","_width","height","_height","$55d69f42c54bcd4a$export$4384cf344d141b50","toCenter","center","n","$20512bacb769fb3e$export$780b62e628ec518f","getNextObject","solver","$de78521780c1d605$export$cf86583e2e1a386b","timeout","object","$626d113ba09163cc$export$a16316d22a718d27","total","limit","lastCreateTime","delay","newItems","create","count","createCallback","$46a76f963c7cc5db$export$e172ac46f8971d96","objects","push","clear","highlight","remove","objectIndex","findIndex","splice","$46a76f963c7cc5db$export$82d945040ef2d6e1","size","_size","w","resize","h","cells","worldX","worldY","cellSize","addObjectByIndex","makeIndexFromVec","makeIndexFromCoord","addObjectToCells","worldLeftTop","worldRightBottom","point1","scale","point2","index1","index2","cellIndex","left","min","top","right","max","startFrom","cell","hasCell","dt","$5e07931470908905$export$cca492cadf45c096","configure","gravity","useFixedTime","subSteps","worldSize","time","subTime","addObjectsToGrid","processCollisions","applyGravity","updateObjects","applyConstrains","constrains","processCollisionsInCell","objA","objB","processCell","$13f1a36200857cbe$export$c79fc6492f3af13d","fillRect","$da117db74631a5a9$export$c682e94218fd2425","renderItem","ballsObject","$aba146bcfc627cd8$export$231acc6c5e36d927","_fixedPosition","leftTop","rightBottom","$e49b4ba0f9c8089a$export$d17c9f1e24f0afb0","$15d0ee54ab94ab04$export$35284351ee95db01","$00d306546736e72e$export$17d680238e50603e","strokeStyle","moveTo","lineTo","stroke","$3fdf4f031363924a$export$d56a2681f508d897","textColor","textBaseline","textAlign","fillText","text","$b54965c0904d6775$export$b89a827e9254211a","strokeRect","$b782825b1529bae2$var$milkShakePoints","$b782825b1529bae2$var$milkShakeLines","$b782825b1529bae2$var$index2color","frequency","sin","$b782825b1529bae2$export$160ae30d75f98247","font","switchToViewportConstrain","ballGeneratorPoint","ballVelocity","generator","Down","redBall","processUserInput","canMoveRedObject","generatorsTick","newBalls","tick","renderItems","printFPS","items","item","printText","round","start","requestAnimationFrame","nextFrame","setInterval","nextInterval","renderGrid","cellPosition","rect","lineWidth","switchToCircleConstrain","timeRenderEnd","timeRenderStart","performance","now","getContext","$45c78095b8c39fc4$export$a712f6800434119d","console","log","selector","element","document","querySelector","readyState"],"version":3,"file":"index.6d75f2b1.js.map"}