{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e7b254456f726793.js","src/utils/onReady.js","src/utils/getElement.js","node_modules/@swc/helpers/src/_define_property.mjs","src/host/input.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-cc22e6566845f08f.js","src/host/worker.ts","src/host/workerWorkaround.js","src/render/vector/exceptions.ts","src/render/vector/vec2Math.ts","src/render/vector/math.ts","src/render/vector/vec2.ts","src/render/items/item.js","src/render/items/circle.js","src/render/vector/vec2Line.ts","src/render/objects/types.ts","src/render/objects/collisionModels.js","src/render/objects/object.ts","src/render/objects/ball.ts","src/render/constrains/constrain.js","src/render/constrains/viewport.js","src/render/constrains/circle.js","src/render/objectsGenerator.js","src/render/mappedObjectsGenerator.js","src/render/totalObjectsGenerator.js","src/render/grid.ts","src/render/solver.ts","src/render/items/rect.js","src/render/renderableObjects/object.js","src/render/objects/immovableBall.ts","src/render/renderableObjects/immovableLine.js","src/render/objects/immovableLine.ts","src/render/items/line.js","src/render/items/circleWithText.js","src/render/items/frame.js","src/render/index.js","src/host/direct.ts","src/host/main.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5d7Nu\\\":\\\"index.b2369a22.js\\\",\\\"bG1Fz\\\":\\\"main.e695ff63.js\\\"}\"));","const DOCUMENT_STATE_LOADING = \"loading\";\n\n/**\n * Calls function when webpage is ready\n * @param {function} callback\n */\nexport function onReady(callback) {\n    if (document.readyState !== DOCUMENT_STATE_LOADING) {\n        callback();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    }\n}\n","export class ElementNotFound extends Error {}\n\nexport function getElement(selector) {\n    const element = document.querySelector(selector);\n    if (!element) {\n        throw new ElementNotFound(selector);\n    }\n\n    return element;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export interface UIEvent {}\n\nexport interface UIMouseEvent {\n    screenX: number,\n    screenY: number,\n    dx: number,\n    dy: number,\n    leftButtonDown: boolean\n}\n\nexport type UserInputHandler = (event: UIEvent) => void;\n\nexport class UserInput {\n    _canvas: HTMLCanvasElement;\n    _handlers: Set<UserInputHandler>;\n\n    _oldX: number;\n    _oldY: number;\n\n    _leftButtonDown: boolean;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this._canvas = canvas;\n        this._handlers = new Set();\n\n        this._leftButtonDown = false;\n\n        this.addHandlers();\n    }\n\n    private addHandlers() {\n        this._canvas.addEventListener('mouseenter', this.mouseEnter);\n        this._canvas.addEventListener('mouseleave', this.mouseLeave);\n        this._canvas.addEventListener('mousemove', this.mouseMove);\n        this._canvas.addEventListener('mousedown', this.mouseDown);\n        this._canvas.addEventListener('mouseup', this.mouseUp);\n        this._canvas.addEventListener('click', this.click);\n    }\n\n    private removeHandlers() {\n\n    }\n\n    private processEvent(event) {\n        this._handlers.forEach((callback: UserInputHandler) => {\n            callback(event);\n        })\n    }\n\n    addHandler(callback: UserInputHandler) {\n        this._handlers.add(callback);\n    }\n\n    removeHandler(callback: UserInputHandler) {\n        if (this._handlers.has(callback)) {\n            this._handlers.delete(callback);\n        }\n    }\n\n    createMouseEvent(browserEvent: MouseEvent): UIMouseEvent {\n        return {\n            screenX: browserEvent.offsetX,\n            screenY: browserEvent.offsetY,\n            dx: -this._oldX + browserEvent.offsetX,\n            dy: -this._oldY + browserEvent.offsetY,\n            leftButtonDown: this._leftButtonDown\n        }\n    }\n\n    mouseEnter = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseLeave = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseMove = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseDown = (browserEvent: MouseEvent) => {\n        this._leftButtonDown = true;\n\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseUp = (browserEvent: MouseEvent) => {\n        this._leftButtonDown = false;\n\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    click = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n}","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('5d7Nu') + require('./helpers/bundle-manifest').resolve(\"bG1Fz\");module.exports = workerURL(url, bundleURL.getOrigin(url), false);","import {UserInput, UIEvent} from \"./input\";\nimport {createWorker} from \"./workerWorkaround.js\";\n\nexport enum MessageType {\n    MessageNone = 0,\n    MessageInit = 1,\n    MessageUserInput = 2\n}\n\nexport class MessageEvent {\n    type = MessageType.MessageNone;\n}\n\nexport class MessageInit extends MessageEvent {\n    type = MessageType.MessageInit;\n    canvas;\n\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n    }\n}\n\nexport class MessageUserInput extends MessageEvent {\n    type = MessageType.MessageUserInput;\n    event;\n\n    constructor(event) {\n        super();\n        this.event = event;\n    }\n}\n\nexport class WorkerApplication {\n    worker;\n    userInput;\n\n    constructor(canvas) {\n        this.worker = createWorker();\n        const offscreen = canvas.transferControlToOffscreen();\n\n        this.worker.postMessage(\n            new MessageInit(offscreen),\n            [offscreen]\n        );\n\n        this.userInput = new UserInput(canvas);\n        this.userInput.addHandler(this.sendUserInputEvent);\n    }\n\n    sendUserInputEvent = (event: UIEvent) => {\n        this.worker.postMessage(\n            new MessageUserInput(event)\n        )\n    }\n\n    initUserInput() {\n\n    }\n}","export function createWorker() {\n    new Worker(new URL('../worker/main.ts', import.meta.url), {type: 'module'});\n}","export class Vec2Exception extends Error {}\n\nexport class Vec2ExceptionParallel extends Vec2Exception {}\nexport class Vec2ExceptionNoPerpendicularVectorToZeroVector extends Vec2Exception {}","import { Vec2 } from \"./vec2\";\nimport { Vec2ExceptionParallel } from \"./exceptions\";\nimport { Vec2Line } from \"./vec2Line\";\n\nexport class Vec2Math {\n    static diff(vec1: Vec2, vec2: Vec2): Vec2 {\n        return new Vec2(vec1.x - vec2.x, vec1.y - vec2.y);\n    }\n\n    static mul(vec1: Vec2, scalar: number): Vec2 {\n        return new Vec2(vec1.x * scalar, vec1.y * scalar);\n    }\n\n    /**\n     * Calculates distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length;\n    }\n\n    /**\n     * Calculates square of distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance2(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length2;\n    }\n\n    /**\n     * Finds intersection between 2 lines\n     * @param {Vec2Line} line1\n     * @param {Vec2Line} line2\n     * @returns {Vec2}\n     */\n    static intersect(line1, line2) {\n        if (line1.K === line2.K) {\n            throw new Vec2ExceptionParallel()\n        }\n\n        if (isNaN(line1.K) || isNaN(line2.K)) {\n            // One of two lines is vertical\n            if (isNaN(line1.K)) {\n                return line2.makeVec2FromX(line1._vec1.x);\n            } else {\n                return line1.makeVec2FromX(line2._vec1.x);\n            }\n        } else {\n            const x = (line1.B - line2.B) / (line2.K - line1.K);\n            return line1.makeVec2FromX(x);\n        }\n    }\n\n    /**\n     * Dot product of 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static dot(vec1: Vec2, vec2: Vec2): number {\n        return vec1.x * vec2.x + vec1.y * vec2.y;\n    }\n\n    /**\n     *\n     * @param {Vec2} vec\n     * @param {Vec2Line} line\n     * @returns {Vec2}\n     */\n    static mirror(vec: Vec2, line: Vec2Line) {\n        const normal = line.direction.perpendicular;\n        return vec.diff(\n            normal.mul(2 * Vec2Math.dot(vec, normal))\n        );\n    }\n\n    static scale(vec1: Vec2, vec2: Vec2) {\n        return new Vec2(\n            vec1.x / vec2.x,\n            vec1.y / vec2.y\n        )\n    }\n}\n","export const MATH_ERROR = 0.000001;\nexport const MATH_ERROR2 = MATH_ERROR * MATH_ERROR;\nexport const SQRT2 = Math.sqrt(2);\n\n/**\n * Checks if a equals b with given error\n * @param {number} a\n * @param {number} b\n * @param {number} error\n * @returns {boolean}\n */\nexport function isEqual(a, b, error) {\n    return Math.abs(a - b) < error;\n}\n\nexport type NullableNumber = number | null;\n","import { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR2, NullableNumber } from \"./math\";\nimport { Vec2ExceptionNoPerpendicularVectorToZeroVector } from \"./exceptions\";\n\nexport class Vec2 {\n    private _x: number = 0;\n    private _y: number = 0;\n    private _length: NullableNumber = null;\n    private _length2: NullableNumber = null;\n\n    static lengthCallsCount = 0;\n    static length2CallsCount = 0;\n\n    constructor(x: number, y: number, l?: number) {\n        this._x = x;\n        this._y = y;\n\n        if (l) {\n            this._length = l;\n            this._length2 = l * l;\n        }\n    }\n\n    get x(): number {\n        return this._x;\n    }\n\n    get y(): number {\n        return this._y;\n    }\n\n    set x(x: number) {\n        this._x = x;\n        this._length = null;\n    }\n\n    set y(y:number) {\n        this._y = y;\n        this._length = null;\n    }\n\n    get length(): number {\n        if (this._length === null) {\n            this._length = Math.sqrt(this.x*this.x + this.y*this.y);\n            Vec2.lengthCallsCount++;\n        }\n\n        return this._length;\n    }\n\n    /**\n     * Returns length^2\n     */\n    get length2(): number {\n        if (this._length2 === null) {\n            this._length2 = this._x*this._x + this._y*this._y;\n            Vec2.length2CallsCount++;\n        }\n\n        return this._length2;\n    }\n\n    /**\n     * Adds vec2 to current vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    addSelf(vec2: Vec2): Vec2 {\n        this._x += vec2.x;\n        this._y += vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Subtract from current vector given vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    subSelf(vec2: Vec2): Vec2 {\n        this._x -= vec2.x;\n        this._y -= vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Flips along X axis\n     * @returns {Vec2}\n     */\n    flipYSelf(): Vec2 {\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Flips along Y axis\n     * @returns {Vec2}\n     */\n    flipXSelf(): Vec2 {\n        this._x = -this._x;\n        return this;\n    }\n\n    flipSelf(): Vec2 {\n        this._x = -this._x;\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Checks if this vector equals given vector using global MATH_ERROR const\n     * @param vec2\n     */\n    equals(vec2) {\n        return Vec2Math.distance2(this, vec2) < MATH_ERROR2;\n    }\n\n    /**\n     * Sums current vector and given vector and returns new vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sum(vec2: Vec2): Vec2 {\n        return new Vec2(this.x + vec2.x, this.y + vec2.y);\n    }\n\n    /**\n     * Calculate difference between current vector and given vector and returns\n     * new vector\n     *\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    diff(vec2: Vec2) {\n        return new Vec2(this.x - vec2.x, this.y - vec2.y);\n    }\n\n    /**\n     * Multiplicates vector by number\n     * @param {number} value\n     * @returns {Vec2}\n     */\n    mul(value: number) {\n        return new Vec2(this.x * value, this.y * value);\n    }\n\n    copy() {\n        return new Vec2(this.x, this.y);\n    }\n\n    applySelf(callback): Vec2 {\n        this.x = callback(this.x);\n        this.y = callback(this.y);\n        return this;\n    }\n\n    /**\n     * Returns normalized vector\n     * @returns {Vec2}\n     */\n    get ort() {\n        const l = this.length;\n        return new Vec2(this.x / l, this.y / l, 1);\n    }\n\n    get perpendicular() {\n        if (this.x === 0) {\n            // Vertical\n            if (this.y > 0) {\n                return Vec2.Horizontal().ort\n            } else if (this.y < 0) {\n                return Vec2.Horizontal().ort.flipSelf();\n            } else {\n                throw new Vec2ExceptionNoPerpendicularVectorToZeroVector();\n            }\n        } else if (this.y === 0) {\n            // Horizontal\n            if (this.x > 0) {\n                return Vec2.Vertical().ort\n            } else if (this.x < 0) {\n                return Vec2.Vertical().ort.flipSelf();\n            }\n        }\n\n        return new Vec2(\n            -this.y / this.x,\n            1\n        ).ort;\n    }\n\n    static Zero() {\n        return new Vec2(0, 0);\n    }\n\n    static Horizontal() {\n        return new Vec2(1, 0);\n    }\n\n    static Vertical() {\n        return new Vec2(0, 1);\n    }\n\n    static Down(y) {\n        return new Vec2(0, y);\n    }\n\n    static Right(x) {\n        return new Vec2(x, 0);\n    }\n}\n\n\n\n\n\n\n\n\n","import {Vec2} from \"../vector/vec2\";\n\nexport class Item {\n    position = Vec2.Zero();\n\n    /**\n     *\n     * @param {CanvasRenderingContext2D} context\n     */\n    constructor(context, position) {\n        this.context = context;\n        this.position = position;\n    }\n\n    /**\n     * Method immediately renders object on context\n     */\n    render() {\n\n    }\n\n    /**\n     * Method tries to put object in render block\n     */\n    queue() {\n\n    }\n}","import {Item} from \"./item\";\n\nexport class Circle extends Item {\n    r = 0;\n    color = '#00ff00';\n\n    constructor(context, position, r, color) {\n        super(context, position);\n\n        if (r) {\n            this.r = r;\n        }\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.beginPath()\n        this.context.arc(\n            this.position.x,\n            this.position.y,\n            this.r,\n            0,\n            2 * Math.PI\n        )\n\n        this.context.fillStyle = this.color;\n        this.context.fill();\n    }\n}","import { Vec2 } from \"./vec2\";\nimport { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR, isEqual } from \"./math\";\n\nexport class Vec2Line {\n    private _vec1: Vec2 = Vec2.Zero();\n    private _vec2: Vec2 = Vec2.Zero();\n\n    private _direction: Vec2;\n    private _ort: Vec2;\n\n    private _length: number;\n    private _length2: number;\n\n    /**\n     * Y = K*X + B\n     * @type {number}\n     */\n    private _k: number = 0;\n    private _b: number = 0;\n\n    constructor(vec1, vec2) {\n        this._vec1 = vec1;\n        this._vec2 = vec2;\n\n        this._direction = Vec2Math.diff(this._vec1, this._vec2);\n        this._length = this._direction.length;\n        this._length2 = this._direction.length2;\n        this._ort = this._direction.ort;\n\n        this.calculateKB();\n    }\n\n    /**\n     * Determines if given point lays on the line\n     * @param vec\n     * @returns {boolean}\n     */\n    inBetween(vec) {\n        const l1 = Vec2Math.diff(vec, this._vec1).length;\n        const l2 = Vec2Math.diff(this._vec2, vec).length;\n        const sum = l1 + l2;\n\n\n\n\n        return isEqual(this._length, sum, MATH_ERROR);\n    }\n\n    calculateKB() {\n        if (this._vec1.y === this._vec2.y) {\n            // Horizontal line\n            this._b = this._vec1.y;\n            this._k = 0;\n        } else if (this._vec1.x === this._vec2.x) {\n            // Vertical line\n            this._b = NaN;\n            this._k = NaN;\n        } else {\n            this._b = (this._vec1.x * this._vec2.y - this._vec1.y * this._vec2.x) / (this._vec1.x - this._vec2.x)\n            this._k = (this._vec1.y - this._vec2.y) / (this._vec1.x - this._vec2.x);\n        }\n    }\n\n    makeVec2FromX(x) {\n        return new Vec2(x, this._k * x + this._b);\n    }\n\n    copy() {\n        return new Vec2Line(\n            this._vec1,\n            this._vec2\n        )\n    }\n\n    moveBy(vec) {\n        this._vec1.addSelf(vec);\n        this._vec2.addSelf(vec);\n        this.calculateKB();\n    }\n\n    getPointProjection(vec) {\n        const a = this.direction;\n        const b = Vec2Math.diff(vec, this._vec1);\n        const cosabD = Vec2Math.dot(a, b) / (this.length);\n\n        return this._vec1.sum(\n            this.ort.mul(cosabD)\n        );\n    }\n\n    get B() {\n        return this._b;\n    }\n\n    get K() {\n        return this._k;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    get direction() {\n        return this._direction;\n    }\n\n    get ort() {\n        return this._ort;\n    }\n\n    get vec1() {\n        return this._vec1;\n    }\n\n    get vec2() {\n        return this._vec2;\n    }\n\n    static Vertical(x) {\n        return new Vec2Line(\n            new Vec2(x, 0),\n            new Vec2(x, Number.MAX_SAFE_INTEGER)\n        )\n    }\n\n    static Horizontal(y) {\n        return new Vec2Line(\n            new Vec2(0, y),\n            new Vec2(Number.MAX_SAFE_INTEGER, y)\n        )\n    }\n}","export enum SolverObjectTypes {\n    TypeNull = 0,\n    TypeBall = 1,\n    TypeImmovableBall = 2,\n    TypeImmovableLine = 3\n}\n","import {Vec2Math} from \"../vector/vec2Math\";\nimport {BallsObject} from \"./ball\";\nimport {SolverObjectTypes, TYPE_BALL, TYPE_IMMOVABLE_BALL, TYPE_IMMOVABLE_LINE} from \"./types\";\n\n/**\n * Collision between 2 balls objects\n * @param {BallsObject} obj1\n * @param {BallsObject} obj2\n */\nexport function collideBallAndBall(obj1, obj2) {\n    const between = Vec2Math.diff(obj1.currentPosition, obj2.currentPosition);\n    const distance = between.length;\n    const requiredDistance = obj1.radius + obj2.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        obj1.currentPosition.addSelf(Vec2Math.mul(normalized, obj1.radius / requiredDistance * delta * obj1.bounceValue));\n        obj2.currentPosition.subSelf(Vec2Math.mul(normalized, obj2.radius / requiredDistance * delta * obj2.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable ball\n * @param {BallsObject} ball\n * @param {ImmovableBallsObject} immovable\n */\nexport function collideBallAndImmovableBall(ball, immovable) {\n    const between = Vec2Math.diff(\n        ball.currentPosition,\n        immovable.currentPosition\n    );\n\n    const distance = between.length;\n    const requiredDistance = ball.radius + immovable.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        ball.currentPosition.addSelf(Vec2Math.mul(normalized, ball.radius / requiredDistance * delta * ball.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovableLineObject} line\n */\nexport function collideBallAndImmovableLine(ball, line) {\n    try {\n        const projectionPoint = line._line.getPointProjection(ball.currentPosition);\n\n        if (line._line.inBetween(projectionPoint)) {\n            const between = Vec2Math.diff(\n                projectionPoint,\n                ball.currentPosition\n            )\n\n            if (between.length < ball.radius) {\n                const normalized = between.ort;\n\n                const delta = ball.radius - between.length;\n\n                ball.currentPosition.subSelf(\n                    Vec2Math.mul(normalized, delta * ball.bounceValue)\n                )\n            }\n        }\n    } catch (e) {\n    }\n}\n\nfunction flipObjects(obj1, obj2) {\n    return {\n        a: obj2,\n        b: obj1\n    }\n}\n\nexport function collide(a, b) {\n    let obj1 = a;\n    let obj2 = b;\n    if (obj1.type > obj2.type) {\n        const flipped = flipObjects(obj1, obj2);\n        obj1 = flipped.a;\n        obj2 = flipped.b\n    }\n\n    switch (true) {\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeBall:\n            return collideBallAndBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableBall:\n            return collideBallAndImmovableBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableLine:\n            return collideBallAndImmovableLine(obj1, obj2);\n        default:\n            return;\n    }\n}","import {SolverObjectTypes} from \"./types\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport abstract class BaseSolverObject {\n    readonly type: SolverObjectTypes = SolverObjectTypes.TypeNull;\n    readonly index: number;\n    readonly immovable: boolean;\n\n    previousPosition = Vec2.Zero();\n    currentPosition = Vec2.Zero();\n\n    constructor() {\n        this.index = BaseSolverObject.index++;\n    }\n\n    update(step) {\n\n    }\n\n    accelerate(acc) {\n\n    }\n\n    collide(obj) {\n\n    }\n\n    addToGrid(collisionGrid) {\n\n    }\n\n    abstract moveBy(delta: Vec2);\n\n    abstract isPointInsideObject(point: Vec2): boolean;\n\n    static index = 0;\n}\n","import { Vec2 } from \"../vector/vec2\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport { Vec2Math } from \"../vector/vec2Math\";\nimport {SolverObjectTypes} from \"./types\";\nimport { collide } from \"./collisionModels\";\nimport {BaseSolverObject} from \"./object\";\nimport {CollisionGrid} from \"../grid\";\n\nexport class BallsObject extends BaseSolverObject {\n    acc = Vec2.Zero();\n\n    radius = 10;\n    bounceValue = 1.1;\n\n    type = SolverObjectTypes.TypeBall;\n    immovable = false;\n\n    /**\n     * Creates balls object\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super();\n        this.previousPosition = position.copy();\n        this.currentPosition = position.copy();\n        if (radius !== undefined) {\n            this.radius = radius\n        }\n    }\n\n    /**\n     * Updates state of object\n     * @param {number} step\n     */\n    update(step) {\n        const velocity = this.velocity;\n        this.previousPosition = this.currentPosition.copy();\n        this.currentPosition.addSelf(\n            velocity.addSelf(\n                this.acc.mul(step * step)\n            )\n        )\n        this.acc = Vec2.Zero();\n    }\n\n    accelerate(acc) {\n        this.acc.addSelf(acc);\n        return this;\n    }\n\n    setVelocity(vel) {\n        this.velocity = vel;\n        return this;\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    collide(obj) {\n        collide(this, obj)\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        collisionGrid.addObject(\n            Math.floor(this.currentPosition.x),\n            Math.floor(this.currentPosition.y),\n            this\n        )\n    }\n\n    moveBy(delta: Vec2) {\n        this.currentPosition.addSelf(delta);\n    }\n\n    isPointInsideObject(point: Vec2): boolean {\n        return Vec2Math.distance(this.currentPosition, point) < this.radius;\n    }\n\n    get velocity() {\n        return Vec2Math.diff(\n            this.currentPosition,\n            this.previousPosition\n        );\n    }\n\n    set velocity(v) {\n        this.previousPosition = Vec2Math.diff(this.currentPosition,v);\n    }\n\n    /**\n     *\n     * @returns {Vec2Line}\n     */\n    get movementVector() {\n        return new Vec2Line(this.previousPosition, this.currentPosition);\n    }\n}","export class Constrain {\n    constructor() {\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    applyConstrain(obj) {\n\n    }\n}","import { Constrain } from \"./constrain\";\n\nexport class ViewportConstrain extends Constrain {\n    _width = 0;\n    _height = 0;\n\n    constructor(width, height) {\n        super()\n        this.width = width;\n        this.height = height;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    set width(width) {\n        this._width = width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    set height(height) {\n        this._height = height;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        if (obj.currentPosition.x - obj.radius < 0) {\n            obj.currentPosition.x = obj.radius;\n        }\n\n        if (obj.currentPosition.x + obj.radius > this._width) {\n            obj.currentPosition.x = this._width - obj.radius;\n        }\n\n        if (obj.currentPosition.y - obj.radius < 0) {\n            obj.currentPosition.y = obj.radius;\n        }\n\n        if (obj.currentPosition.y + obj.radius > this._height) {\n            obj.currentPosition.y = this._height - obj.radius;\n        }\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class CircleConstrain extends Constrain {\n    /**\n     *\n     * @type {Vec2}\n     */\n    center = Vec2.Zero();\n\n    radius = 0;\n\n    constructor(center, radius) {\n        super();\n\n        this.center = center;\n        this.radius = radius;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        const toCenter = obj.currentPosition.diff(this.center);\n        const distance = toCenter.length;\n        const r = obj.radius;\n\n        if (distance > (this.radius - r)) {\n            const n = toCenter.ort;\n            obj.currentPosition = this.center.sum(\n                n.mul(this.radius - r)\n            );\n        }\n    }\n\n}","export class ObjectsGenerator {\n    solver = null;\n    constructor(solver) {\n        this.solver = solver;\n    }\n\n    // TODO Make me iterator\n    getNextObject(step) {\n        return [];\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\n\nexport class MappedObjectGeneratorItem {\n    /**\n     * Delay before object appear\n     * @type {number}\n     */\n    timeout;\n\n    /**\n     * Object configuration\n     * @type {BallsObject}\n     */\n    object;\n\n    constructor(timeout, object) {\n        this.timeout = timeout;\n        this.object = object;\n    }\n\n}\n\nexport class MappedObjectsGenerator extends ObjectsGenerator {\n    /**\n     * @param {MappedObjectGeneratorItem[]} map\n     */\n    constructor(solver, map) {\n        super(solver);\n\n        this.items = map;\n        this.currentTime = 0;\n    }\n\n    getNextObject(step) {\n        this.currentTime += step;\n\n        console.log(this.currentTime)\n\n        const index = this.items.findIndex((item) => item.timeout < this.currentTime);\n        if (index > -1) {\n            return [this.items.splice(index, 1)[0].object];\n        }\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\nexport class TotalObjectsGenerator extends ObjectsGenerator {\n    constructor(solver, count, delay, createCallback) {\n        super(solver);\n        this.limit = count;\n        this.total = 0;\n\n        this.delay = delay;\n        this.create = createCallback;\n        this.lastCreateTime = 0;\n    }\n\n    getNextObject(step) {\n        if (this.total > this.limit) {\n            return [];\n        }\n\n        this.lastCreateTime += 1;\n        if (this.lastCreateTime > this.delay) {\n            const newItems = this.create(this.total);\n            this.lastCreateTime = 0;\n            this.total+= newItems.length;\n\n            return newItems;\n        }\n    }\n}","import { Vec2 } from \"./vector/vec2\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {Vec2Math} from \"./vector/vec2Math\";\n\nexport class CollisionCell {\n    objects: BaseSolverObject[] = [];\n    highlight: boolean = false;\n\n    static MAX_OBJECT_IN_CELL = 10;\n\n    addObject(obj) {\n        if (this.objects.length >= CollisionCell.MAX_OBJECT_IN_CELL) {\n            return\n        }\n\n        this.objects.push(obj);\n    }\n\n    clear() {\n        this.objects = [];\n        this.highlight = false;\n    }\n\n    remove(index) {\n        const objectIndex = this.objects.findIndex(obj => obj.index === index);\n        if (objectIndex !== -1) {\n            this.objects.splice(objectIndex, 1);\n        }\n    }\n\n    get count() {\n        return this.objects.length;\n    }\n}\n\ntype CollisionGridForEachCallback = (column: number, row: number, cell: CollisionCell, index?: number) => void;\n\nexport class CollisionGrid {\n    cells: CollisionCell[] = [];\n    _width: number;\n    _height: number;\n    _size: number;\n    cellSize: Vec2;\n\n    constructor(width, height, cellSize: Vec2) {\n        this._width = width;\n        this._height = height;\n\n        this.cellSize = cellSize;\n\n        this.resize();\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    set width(w: number) {\n        this._width = w;\n        this.resize();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    set height(h: number) {\n        this._height = h;\n        this.resize();\n    }\n\n    resize() {\n        this.cells = [];\n        this._size = this._width * this._height;\n        for (let i = 0; i < this._size; i++) {\n            this.cells.push(new CollisionCell());\n        }\n    }\n\n    addObject(worldX, worldY, obj) {\n        const x = Math.floor(worldX / this.cellSize.x);\n        const y = Math.floor(worldY / this.cellSize.y);\n\n        const index = x * this._height + y;\n        this.addObjectByIndex(index, obj);\n    }\n\n    addObjectByIndex(index, obj) {\n        if (!isNaN(index) && index>=0 && index<this.size) {\n            this.cells[index].addObject(obj);\n        }\n    }\n\n    makeIndexFromVec(vec) {\n        return vec.x * this._height + vec.y;\n    }\n\n    makeIndexFromCoord(x, y) {\n        return x * this._height + y;\n    }\n\n    makeVecFromIndex(index): Vec2 {\n        const x = Math.floor(index / this._height);\n        const y = index - x * this._height;\n        return new Vec2(x, y);\n    }\n\n    /**\n     * Adds object to all cells between given coords\n     * @param worldLeftTop\n     * @param worldRightBottom\n     * @param obj\n     */\n    addObjectToCells(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject) {\n        const point1 = Vec2Math.scale(worldLeftTop, this.cellSize).applySelf(Math.floor);\n        const point2 = Vec2Math.scale(worldRightBottom, this.cellSize).applySelf(Math.floor);\n\n        const index1 = this.makeIndexFromVec(point1);\n        const index2 = this.makeIndexFromVec(point2);\n\n        if (point1.x === point2.x) {\n            // Vertical\n            for (let cellIndex = index1; cellIndex < index2; cellIndex++) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else if (point1.y === point2.y) {\n            // Horizontal\n            for (let cellIndex = index1; cellIndex < index2; cellIndex+=this.height) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else {\n            let left = Math.min(point1.x, point2.x);\n            let top = Math.min(point1.y, point2.y);\n            let right = Math.max(point1.x, point2.x);\n            let bottom = Math.max(point1.y, point2.y);\n            let height = bottom - top;\n            let startFrom = this.makeIndexFromCoord(left, top);\n\n            for (let x = 0; x <= right-left; x++) {\n                for (let y = 0; y <= height; y++) {\n                    const cellIndex= startFrom + x * this.height + y;\n                    this.addObjectByIndex(cellIndex, obj);\n                }\n            }\n        }\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            this.cells[i].clear();\n        }\n    }\n\n    forEach(callback: CollisionGridForEachCallback) {\n        this.cells.forEach((cell, index) => {\n            const pos = this.makeVecFromIndex(index);\n            callback(pos.x, pos.y, cell, index);\n        })\n    }\n\n    hasCell(index, dt) {\n        if (index < 0 || index >= this.size) {\n            return false;\n        }\n\n        const pos = this.makeVecFromIndex(index);\n\n        const x = pos.x;\n        const y = pos.y;\n\n        if (y <= 0 && dt < 0) {\n            // TOP CELL\n            return false;\n        }\n\n        if (y === this.height - 1 && dt > 0) {\n            // Bottom cell\n            return  false;\n        }\n\n        if (x === 0 && dt < 0) {\n            // left cell\n            return false;\n        }\n\n        if (x >= this.width - 1 && dt > 0) {\n            // right cell;\n            return false;\n        }\n\n        return true;\n    }\n}\n","import {Vec2} from \"./vector/vec2\";\nimport {BallsObject} from \"./objects/ball\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {Constrain} from \"./constrains/constrain\";\nimport {CollisionCell, CollisionGrid} from \"./grid\";\n\nexport class Solver {\n    objects: BaseSolverObject[] = []\n    constrains: Constrain = null;\n    gravity: Vec2 = Vec2.Zero();\n    subSteps: number = 4;\n    useFixedTime: boolean = true;\n    step: number;\n    collisionGrid: CollisionGrid;\n    worldSize: Vec2;\n\n    cellSize: Vec2;\n\n    constructor(worldSize) {\n        this.objects = [];\n        this.worldSize = worldSize.copy();\n\n        this.configure();\n    }\n\n    configure() {\n        this.gravity = new Vec2(0, 100);\n\n        this.useFixedTime = true;\n        this.step = 0.017 / this.subSteps;\n\n        const cellSize = 16;\n\n        const gridX = Math.round(this.worldSize.x / cellSize);\n        const gridY = Math.round(this.worldSize.y / cellSize);\n\n        this.cellSize = new Vec2(\n            this.worldSize.x / gridX,\n            this.worldSize.y / gridY\n        );\n\n        this.collisionGrid = new CollisionGrid(\n            gridX, gridY,\n            this.cellSize\n        )\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n    }\n\n    /**\n     * Update the simulation by given step.\n     * @param {number} time amount of seconds passed since last update.\n     */\n    update(time) {\n        const subTime = this.useFixedTime ? this.step : time / this.subSteps;\n        for (let i = 0; i < this.subSteps; i++) {\n            this.addObjectsToGrid();\n            this.processCollisions();\n            this.applyGravity();\n            this.updateObjects(subTime);\n            this.applyConstrains();\n        }\n    }\n\n    addObjectsToGrid() {\n        this.collisionGrid.clear();\n        this.objects.forEach((obj, index) => {\n            obj.addToGrid(this.collisionGrid);\n        });\n    }\n\n    /**\n     * Update objects state\n     * @param {number} time amount of seconds passed since last update\n     */\n    updateObjects(time) {\n        this.objects.forEach(obj => obj.update(time))\n    }\n\n    applyGravity() {\n        this.objects.forEach(obj => obj.accelerate(this.gravity))\n    }\n\n    applyConstrains() {\n        this.objects.forEach(obj => this.constrains.applyConstrain(obj))\n    }\n\n    processCollisionsInCell(objA: BaseSolverObject, cell: CollisionCell) {\n        cell.objects.forEach(objB => {\n            if (objA === objB) {\n                return;\n            }\n\n            if (objA.immovable && objB.immovable) {\n                return;\n            }\n\n            objA.collide(objB);\n        })\n    }\n\n    processCell(index: number) {\n        this.collisionGrid.cells[index].objects.forEach(objA => {\n            this.processCollisionsInCell(objA, this.collisionGrid.cells[index]); // SELF\n\n            if (this.collisionGrid.hasCell(index, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - 1]); // TOP\n            }\n\n            if (this.collisionGrid.hasCell(index, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + 1]); // BOTTOM\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height - 1]); // RIGHT TOP\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, 0)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height]); // RIGHT\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height + 1]); // RIGHT BOTTOM\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height - 1]); // LEFT TOP\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, 0)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height]); // LEFT\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height + 1]); // LEFT BOTTOM\n            }\n        })\n    }\n\n    processCollisions() {\n        for (let index = 0; index < this.collisionGrid.size; index++) {\n            this.processCell(index);\n        }\n    }\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Rect extends Item {\n    size = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, size, color) {\n        super(context, position);\n\n        this.size = size;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.fillStyle = this.color;\n        this.context.fillRect(\n            this.position.x,\n            this.position.y,\n            this.position.x + this.size.x,\n            this.position.y + this.size.y\n        )\n    }\n}","export class RenderableObject {\n    /**\n     * @type {BallsObject}\n     */\n    ballsObject = null;\n\n    /**\n     * @type {Item}\n     */\n    renderItem = null;\n\n    constructor(ballsObject, renderItem) {\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        this.renderItem.position = this.ballsObject.currentPosition;\n    }\n\n    render() {\n        this.update();\n        this.renderItem.render();\n    }\n}","import {BallsObject} from \"./ball\";\nimport {SolverObjectTypes} from \"./types\";\nimport {CollisionGrid} from \"../grid\";\nimport {SQRT2} from \"../vector/math\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class ImmovableBallsObject extends BallsObject {\n    type = SolverObjectTypes.TypeImmovableBall;\n    immovable = true;\n    bounceValue = 0.5;\n\n    /**\n     * @type {Vec2}\n     * @private\n     */\n    _fixedPosition = null;\n\n    /**\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super(position, radius);\n        this._fixedPosition = position.copy();\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        const vec = new Vec2(\n            this.radius * SQRT2,\n            this.radius * SQRT2\n        )\n\n        const leftTop = this.currentPosition.sum(vec);\n        const rightBottom = this.currentPosition.diff(vec);\n\n        collisionGrid.addObjectToCells(\n            leftTop,\n            rightBottom,\n            this\n        );\n    }\n}","import {RenderableObject} from \"./object\";\n\nexport class ImmovableLineRenderableObject extends RenderableObject {\n    /**\n     * @type {ImmovableLineObject}\n     */\n    ballsObject = null;\n\n    constructor(ballsObject, renderItem) {\n        super(ballsObject);\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        super.update();\n        this.renderItem.direction = this.ballsObject._direction;\n    }\n}","import { BallsObject } from \"./ball\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport {SolverObjectTypes} from \"./types\";\nimport {CollisionGrid} from \"../grid\";\n\nexport class ImmovableLineObject extends BallsObject {\n    _direction;\n    _line;\n\n    type = SolverObjectTypes.TypeImmovableLine;\n    immovable = true;\n\n    constructor(position, direction) {\n        super(position, 0);\n        this._direction = direction;\n\n        this._line = new Vec2Line(\n            this.currentPosition.copy(),\n            this.currentPosition.copy().sum(this._direction)\n        )\n    }\n\n    update(step) {\n        this.currentPosition = this._line._vec1;\n        this.previousPosition = this._line._vec2;\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        collisionGrid.addObjectToCells(\n            this._line._vec1,\n            this._line._vec2,\n            this\n        );\n    }\n\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Line extends Item {\n    direction = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, direction, color) {\n        super(context, position);\n\n        this.direction = direction;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.beginPath(); // Start a new path\n        this.context.moveTo(this.position.x, this.position.y);\n        this.context.lineTo(\n            this.position.x + this.direction.x,\n            this.position.y + this.direction.y\n        );\n        this.context.stroke(); // Render the path\n    }\n}","import {Circle} from \"./circle\";\n\nexport class CircleWithText extends Circle {\n    text = '';\n    textColor = '#ffffff';\n\n    constructor(context, position,r, color, text, textColor) {\n        super(context, position, r, color);\n        this.text = text;\n        if (textColor) {\n            this.textColor = textColor;\n        }\n    }\n\n    render() {\n        super.render();\n        this.context.fillStyle = this.textColor;\n        this.context.textBaseline = \"middle\";\n        this.context.textAlign = \"center\";\n        this.context.fillText(this.text, this.position.x, this.position.y);\n    }\n}","import {Rect} from \"./rect\";\n\nexport class Frame extends Rect {\n    constructor(context, position, size, color) {\n        super(context, position, size, color);\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.strokeRect(\n            this.position.x,\n            this.position.y,\n            this.size.x,\n            this.size.y\n        )\n    }\n\n    queue() {\n\n    }\n}","import {Circle} from \"./items/circle\";\nimport {Vec2} from \"./vector/vec2\";\nimport {Vec2Math} from \"./vector/vec2Math\";\nimport {BallsObject} from \"./objects/ball\";\nimport {ViewportConstrain} from \"./constrains/viewport\";\nimport {CircleConstrain} from \"./constrains/circle\";\nimport {MappedObjectGeneratorItem, MappedObjectsGenerator} from \"./mappedObjectsGenerator\";\nimport {TotalObjectsGenerator} from \"./totalObjectsGenerator\";\nimport {Solver} from \"./solver\";\nimport {Rect} from \"./items/rect\";\nimport {RenderableObject} from \"./renderableObjects/object\";\nimport {ImmovableBallsObject} from \"./objects/immovableBall\";\nimport {ImmovableLineRenderableObject} from \"./renderableObjects/immovableLine\";\nimport {ImmovableLineObject} from \"./objects/immovableLine\";\nimport {Line} from \"./items/line\";\nimport {CircleWithText} from \"./items/circleWithText\";\nimport {Frame} from \"./items/frame\";\n\nconst balls = [\n    new MappedObjectGeneratorItem(\n        1,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        2,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        3,\n        new BallsObject(new Vec2(10, 10))\n    ),\n]\n\nconst milkShakePoints = [\n    new Vec2(0, 0),\n    new Vec2(70, 380),\n    new Vec2(270, 380),\n    new Vec2(340, 0)\n]\n\nconst milkShakeLines = [\n    [milkShakePoints[0], Vec2Math.diff(milkShakePoints[0], milkShakePoints[1]).flipSelf()],\n    [milkShakePoints[1], Vec2Math.diff(milkShakePoints[1], milkShakePoints[2]).flipSelf()],\n    [milkShakePoints[2], Vec2Math.diff(milkShakePoints[2], milkShakePoints[3]).flipSelf()]\n]\n\nconst ballsColors = {\n    57: '#ffffff',\n    78: '#ffffff',\n    71: '#ffffff',\n    86: '#ffffff',\n    200: '#ffffff',\n    202: '#ffffff',\n    218: '#ffffff',\n}\n\nfunction index2color(index) {\n    const frequency=5/1000;\n    const r = Math.floor(Math.sin(frequency*index + 0) * (127) + 128);\n    const g = Math.floor(Math.sin(frequency*index + 2) * (127) + 128);\n    const b = Math.floor(Math.sin(frequency*index + 4) * (127) + 128);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n}\n\nexport class Render {\n    /**\n     * List of balls\n     * @type {RenderableObject[]}\n     */\n    objects = []\n\n    /**\n     * @type {Constrain}\n     */\n    constrains = null;\n\n    /**\n     * Solver for physics\n     * @type {Solver}\n     */\n    solver = null;\n\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.timeRenderStart = performance.now();\n        this.timeRenderEnd = performance.now();\n        this.step = 0;\n\n        /**\n         * @type {RenderableObject[]}\n         */\n        this.objects = [];\n\n        this.items = [];\n\n        this.generator = null;\n        this.solver = null\n\n        this.redBall = null;\n\n        this.configure();\n    }\n\n    configure() {\n        this.solver = new Solver(\n            new Vec2(\n                this.canvas.width,\n                this.canvas.height\n            )\n        );\n\n        this.context.font = '10px serif';\n\n        //this.switchToCircleConstrain();\n        this.switchToViewportConstrain();\n        this.solver.constrains = this.constrains;\n\n        const canvasCenter = new Vec2(\n            this.canvas.width / 2,\n            this.canvas.height / 2\n        );\n\n        const ballGeneratorPoint = canvasCenter.diff(\n            new Vec2(\n                300,\n                300\n            )\n        )\n        const ballVelocity = new Vec2(\n            2, -2\n        ).mul(1/this.solver.subSteps);\n\n        this.generator = new TotalObjectsGenerator(\n            this.solver,\n            1000,\n            7,\n            (index) => {\n                const obj = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint,\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index+200),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj2 = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index+100),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj3 = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(-20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                return [obj,obj2, obj3];\n            }\n        );\n\n        this.redBall = new RenderableObject(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.context, Vec2.Zero(), 30, '#ff0000')\n        );\n\n        this.addObject(this.redBall);\n\n        milkShakeLines.forEach(line => {\n            this.addObject(new ImmovableLineRenderableObject(\n                new ImmovableLineObject(\n                    line[0].sum(\n                        canvasCenter.diff(new Vec2(340/2, 380/2))\n                    ),\n                    line[1]\n                ),\n                new Line(\n                    this.context,\n                    Vec2.Zero(),\n                    Vec2.Zero(),\n                    '#ffffff'\n                )\n            ));\n        });\n    }\n\n    processUserInput(event) {\n        if (event.leftButtonDown) {\n            if (this.redBall.ballsObject.isPointInsideObject(\n                new Vec2(\n                    event.screenX,\n                    event.screenY\n                )\n            )) {\n                this.canMoveRedObject = true;\n            }\n\n            if (this.canMoveRedObject) {\n                this.redBall.ballsObject.moveBy(\n                    new Vec2(\n                        event.dx,\n                        event.dy\n                    )\n                )\n            }\n        } else {\n            this.canMoveRedObject = false;\n        }\n    }\n\n    /**\n     * @param {RenderableObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n        this.solver.addObject(obj.ballsObject);\n    }\n\n    update(time) {\n        this.solver.update(time);\n    }\n\n    generatorsTick(time) {\n        const newBalls = this.generator.getNextObject(time);\n        if (newBalls) {\n            newBalls.forEach(ball => this.addObject(ball));\n        }\n    }\n\n    tick() {\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.generatorsTick(this.step / 1000);\n        this.update(this.step / 1000);\n\n        this.clear();\n        this.renderItems();\n        //this.renderGrid();\n\n        this.printFPS();\n\n        Vec2.lengthCallsCount = 0;\n    }\n\n    nextFrame = (time) => {\n        this.step = time - this.timeRenderEnd;\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = time;\n        self.requestAnimationFrame(this.nextFrame);\n    }\n\n    nextInterval = () => {\n        this.timeRenderStart = performance.now()\n        this.step = this.timeRenderStart - this.timeRenderEnd;\n\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = performance.now();\n    }\n\n    renderItems() {\n        this.items.forEach(item => item.render());\n        this.objects.forEach(obj => obj.render());\n    }\n\n    printText(text, x, y) {\n        this.context.fillStyle = \"#ffffff\";\n        this.context.textAlign = \"start\";\n        this.context.fillText(text, x, y);\n    }\n\n    printFPS() {\n        this.context.fillStyle = 'rgba(0,0,0,0.1)';\n        this.context.fillRect(0, 0, 100, 60);\n        this.printText(`${Math.round(this.step)} ms / ${Math.round(1000/this.step)} FPS`, 0, 10);\n        this.printText(`Length calls: ${Vec2.lengthCallsCount}`, 0 , 20);\n        this.printText(`Lenght2 calls: ${Vec2.length2CallsCount}`, 0 , 30);\n        this.printText(`Objects: ${this.objects.length}`, 0, 40);\n        this.printText(`Compares per object: ${Math.round(Vec2.lengthCallsCount / this.objects.length)}`, 0, 50);\n    }\n\n    clear() {\n        this.context.fillStyle = \"rgba(0, 0, 0, 0.9)\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    }\n\n    start() {\n        if (self.requestAnimationFrame) {\n            self.requestAnimationFrame(this.nextFrame);\n        } else {\n            setInterval(this.nextInterval, 16)\n        }\n    }\n\n    renderGrid() {\n        this.solver.collisionGrid.forEach((column, row, cell, index) => {\n            const cellPosition = new Vec2(\n                column * this.solver.cellSize.x,\n                row * this.solver.cellSize.y,\n            );\n            const rect = new Frame(\n                this.context,\n                cellPosition,\n                this.solver.cellSize.diff(new Vec2(5, 5)),\n                cell.count > 0 ? '#ff0000' : '#00ff00'\n            )\n\n            if (cell.highlight) {\n                this.context.lineWidth = 10;\n            }\n\n            rect.render();\n\n            this.context.lineWidth = 1;\n            this.printText(\n                index,\n                cellPosition.x + this.solver.cellSize.x / 2,\n                cellPosition.y + this.solver.cellSize.y / 2\n            )\n        })\n    }\n\n    switchToCircleConstrain() {\n        this.constrains = new CircleConstrain(\n            new Vec2(this.canvas.width / 2, this.canvas.height / 2),\n            this.canvas.height / 2\n        )\n\n        this.items.push(\n            new Circle(\n                this.context,\n                this.canvas.width / 2,\n                this.canvas.height / 2,\n                this.canvas.height / 2,\n                '#000000'\n            )\n        );\n    }\n\n    switchToViewportConstrain() {\n        this.constrains = new ViewportConstrain(this.canvas.width, this.canvas.height)\n        // this.items.push(\n        //     new Rect(\n        //         this.context,\n        //         Vec2.Zero(),\n        //         new Vec2(\n        //             this.canvas.width,\n        //             this.canvas.height\n        //         ),\n        //         '#000000'\n        //     )\n        // );\n    }\n}","import {Render} from \"../render\";\nimport {UIEvent, UserInput} from \"./input\";\n\nexport class DirectApplication {\n    render;\n    userInput;\n\n    constructor(canvas) {\n        this.render = new Render(canvas);\n        this.render.start();\n\n        this.userInput = new UserInput(canvas);\n        this.userInput.addHandler(this.sendUserInputEvent);\n    }\n\n    sendUserInputEvent = (event) => {\n        this.render.processUserInput(event)\n    }\n}","import { onReady }  from \"../utils/onReady\";\nimport { getElement } from \"../utils/getElement\";\n\nimport {WorkerApplication} from \"./worker\";\nimport {DirectApplication} from \"./direct\";\n\nfunction initApplication() {\n    console.log('Init application');\n    /**\n     * @var {HTMLCanvasElement}\n     */\n    const canvas = getElement(\"#image_canvas\");\n    const container = getElement('#container');\n    canvas.width = container.offsetWidth;\n    canvas.height = container.offsetHeight;\n\n    if (canvas.transferControlToOffscreen) {\n        console.log('Render in worker');\n        const application = new WorkerApplication(canvas);\n    } else {\n        // There is no support for offscreen render\n        console.log('Render in main thread');\n        const application = new DirectApplication(canvas);\n    }\n}\n\nonReady(initApplication);"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$58eda289ea048412$var$DOCUMENT_STATE_LOADING","$eac4a1d0ec467e0d$export$9a8db54f22040fa8","$eac4a1d0ec467e0d$export$d16800b7e59a8051","selector","element","document","querySelector","$9139f4380ced0e7c$export$2e2bcd8739ae039","obj","key","value","defineProperty","enumerable","configurable","writable","$921944c03bb32e3e$export$3ac5e585cf392ee0","addHandlers","this","_canvas","addEventListener","mouseEnter","mouseLeave","mouseMove","mouseDown","mouseUp","click","removeHandlers","processEvent","event","_handlers","forEach","callback","addHandler","add","removeHandler","has","delete","createMouseEvent","browserEvent","screenX","offsetX","screenY","offsetY","dx","_oldX","dy","_oldY","leftButtonDown","_leftButtonDown","constructor","canvas","Set","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$export$5a759dc7a1cfb72a","$902f5cabe5153acc$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$f0a081034f3610af$export$80edbf15fa61a4db","$1f09cc003f0b4477$var$url","resolve","MessageType","$1f09cc003f0b4477$exports","$f0a081034f3610af$export$fbae1a0d0e7e2437","MessageNone","$f0a081034f3610af$export$fd1648b71482b662","super","MessageInit","$f0a081034f3610af$export$45b98a991719aa36","MessageUserInput","$f0a081034f3610af$export$6bb4378561ad428b","initUserInput","worker","postMessage","Worker","offscreen","transferControlToOffscreen","userInput","sendUserInputEvent","$e40164a985dd9e5a$export$79992de41895b472","$e40164a985dd9e5a$export$98e05f023e6bbbeb","$e40164a985dd9e5a$export$cc5bbfba1d12de75","$0ef9795c33087429$export$92b0492af2e4b152","static","vec1","vec2","$4d57cd86acad7159$export$ac4bca90992eed1","x","y","scalar","diff","length2","line1","line2","K","isNaN","makeVec2FromX","_vec1","B","vec","line","normal","direction","perpendicular","mul","dot","$3675464501081853$export$9201df218db36553","$3675464501081853$export$3681641e15b6e2c3","Math","sqrt","_x","_y","_length","lengthCallsCount","_length2","length2CallsCount","addSelf","subSelf","flipYSelf","flipXSelf","flipSelf","equals","distance2","sum","copy","applySelf","ort","l","Horizontal","Vertical","$f063daebf0665eed$export$6d08773d2e66f8f2","render","queue","context","position","Zero","$ed739c01afcc0f09$export$c89a927ffc67e6fa","beginPath","arc","r","PI","fillStyle","color","fill","$4b8aba1f00221969$export$769818a274da100a","inBetween","_vec2","a","b","error","abs","calculateKB","_b","_k","NaN","moveBy","getPointProjection","cosabD","_direction","_ort","Number","MAX_SAFE_INTEGER","$0920e24cc8ae862b$export$a59432db1b5f15cd","SolverObjectTypes","$f25c327de554914b$export$98e6d07575f46913","obj1","obj2","flipped","$f25c327de554914b$var$flipObjects","TypeBall","between","currentPosition","distance","requiredDistance","radius","normalized","delta","bounceValue","$f25c327de554914b$export$23e74c69ee7b6dae","TypeImmovableBall","ball","immovable","$f25c327de554914b$export$6d6f4258faab0992","TypeImmovableLine","projectionPoint","_line","e","$f25c327de554914b$export$4d790f09e0e06cd9","$eb3d27276f866aa1$export$8387ea1f2c3d2dbf","update","step","accelerate","acc","collide","addToGrid","collisionGrid","TypeNull","index","$40456b6e2373f916$export$e4134913c977dac4","velocity","previousPosition","setVelocity","vel","addObject","floor","isPointInsideObject","point","v","movementVector","undefined","$e18f36a0ab1ee1a3$export$504c072c1a75a697","applyConstrain","$2ba0d4f1a77121a6$export$29fb847bec292dd0","width","_width","height","_height","$e1a9354934259beb$export$4384cf344d141b50","toCenter","center","n","$77242e0c215628b5$export$780b62e628ec518f","getNextObject","solver","$8f759762936427f5$export$cf86583e2e1a386b","timeout","object","$0b9f7d857f4d9b8d$export$a16316d22a718d27","total","limit","lastCreateTime","delay","newItems","create","count","createCallback","$7539966609416a8a$export$e172ac46f8971d96","objects","MAX_OBJECT_IN_CELL","push","clear","highlight","remove","objectIndex","findIndex","splice","$7539966609416a8a$export$82d945040ef2d6e1","size","_size","w","resize","h","cells","worldX","worldY","cellSize","addObjectByIndex","makeIndexFromVec","makeIndexFromCoord","makeVecFromIndex","addObjectToCells","worldLeftTop","worldRightBottom","point1","scale","point2","index1","index2","cellIndex","left","min","top","right","max","startFrom","cell","pos","hasCell","dt","$f75ca687d4249f9f$export$cca492cadf45c096","configure","gravity","useFixedTime","subSteps","gridX","round","worldSize","gridY","time","subTime","addObjectsToGrid","processCollisions","applyGravity","updateObjects","applyConstrains","constrains","processCollisionsInCell","objA","objB","processCell","$fd183cca0536a075$export$c79fc6492f3af13d","fillRect","$0e0cb4043c08d089$export$c682e94218fd2425","renderItem","ballsObject","$203d3e0a10e730ee$export$231acc6c5e36d927","_fixedPosition","leftTop","rightBottom","$4ea50bfaede81891$export$d17c9f1e24f0afb0","$200d70531e48cbcf$export$35284351ee95db01","$7c9a976f6dfa6a2e$export$17d680238e50603e","strokeStyle","moveTo","lineTo","stroke","$c1ea9936536a0c7f$export$d56a2681f508d897","textColor","textBaseline","textAlign","fillText","text","$eb06ec93f255e5c2$export$b89a827e9254211a","strokeRect","$b87dd7b3c2f70655$var$milkShakePoints","$b87dd7b3c2f70655$var$milkShakeLines","$b87dd7b3c2f70655$var$index2color","frequency","sin","$b87dd7b3c2f70655$export$160ae30d75f98247","font","switchToViewportConstrain","canvasCenter","ballGeneratorPoint","ballVelocity","generator","Down","redBall","processUserInput","canMoveRedObject","generatorsTick","newBalls","tick","renderItems","printFPS","items","item","printText","start","requestAnimationFrame","nextFrame","setInterval","nextInterval","renderGrid","column","row","cellPosition","rect","lineWidth","switchToCircleConstrain","timeRenderEnd","timeRenderStart","performance","now","getContext","$1b9482a98f59ee0b$export$a712f6800434119d","console","log","container","offsetWidth","offsetHeight","readyState"],"version":3,"file":"index.b2369a22.js.map"}