{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-86365b0f2d00a39e.js","src/host/main.js","src/utils/onReady.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/utils/getElement.js","src/host/worker.ts","src/host/input.ts","src/host/messages.ts","src/host/workerWorkaround.js","node_modules/@parcel/runtime-js/lib/runtime-f0f4b38d64c38892.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","src/engine/baseEngine.ts","src/host/direct.ts","src/render/index.ts","src/render/vector/vec2.ts","src/render/vector/vec2Math.ts","src/render/vector/exceptions.ts","src/render/vector/math.ts","src/render/solver/gridSolver.ts","src/render/solver/gridSolverSpace.ts","src/render/solver/baseSolverSpace.ts","src/render/solver/baseSolver.ts","src/render/scenes/all.ts","src/render/scenes/scene1.ts","src/render/scenes/baseScene.ts","src/render/generators/totalObjectsGenerator.js","src/render/generators/objectsGenerator.ts","src/render/items/circle.ts","src/render/items/item.ts","src/render/objects/ball.ts","src/render/vector/vec2Line.ts","src/render/objects/types.ts","src/render/objects/collisionModels.ts","src/render/objects/object.ts","src/render/vector/vec2Rect.ts","src/render/renderableObjects/object.ts","src/render/objects/immovableBall.ts","src/render/renderableObjects/immovableLine.js","src/render/objects/immovableLine.ts","src/render/objects/immovable.ts","src/render/items/line.ts","src/render/items/circleWithText.ts","src/render/items/utils/index2color.ts","src/render/constrains/viewport.ts","src/render/constrains/constrain.ts","src/render/primitives/milkshake.ts","src/render/scenes/scene2.ts","src/render/constrains/circle.ts","src/render/scenes/scene3.ts","src/render/primitives/triangle.ts","src/render/objects/ImmovablePolygon.ts","src/render/items/polygonRainbow.ts","src/render/items/polygon.ts","src/render/stats.ts","src/render/solver/quadTreeSolver.ts","src/render/solver/quadTreeSolverSpace.ts","src/render/render/canvas2DRender.ts","src/render/render/baseRender.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"97323660059c6d4a\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { onReady }  from \"../utils/onReady\";\nimport { getElement } from \"../utils/getElement\";\n\nimport {WorkerApplication} from \"./worker\";\nimport {DirectApplication} from \"./direct\";\n\nfunction initApplication() {\n    console.log('Init application');\n    /**\n     * @var {HTMLCanvasElement}\n     */\n    const canvas = getElement(\"#image_canvas\");\n    const container = getElement('#container');\n    canvas.width = container.offsetWidth;\n    canvas.height = container.offsetHeight;\n\n    let application;\n\n    if (canvas.transferControlToOffscreen) {\n        console.log('Render in worker');\n        application = new WorkerApplication(canvas);\n    } else {\n        // There is no support for offscreen render\n        console.log('Render in main thread');\n        application = new DirectApplication(canvas);\n    }\n\n    const buttonLoadScene1 = getElement('#scene1');\n    const buttonLoadScene2 = getElement('#scene2');\n    const buttonLoadScene3 = getElement('#scene3');\n\n\n    buttonLoadScene1.addEventListener('click', (e) => {\n        e.preventDefault();\n        application.loadScene('scene1');\n    })\n\n    buttonLoadScene2.addEventListener('click', e => {\n        e.preventDefault();\n        application.loadScene('scene2');\n    })\n\n    buttonLoadScene3.addEventListener('click', e => {\n        e.preventDefault();\n        application.loadScene('scene3');\n    })\n}\n\nonReady(initApplication);","const DOCUMENT_STATE_LOADING = \"loading\";\n\n/**\n * Calls function when webpage is ready\n * @param {function} callback\n */\nexport function onReady(callback) {\n    if (document.readyState !== DOCUMENT_STATE_LOADING) {\n        callback();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","export class ElementNotFound extends Error {}\n\nexport function getElement(selector) {\n    const element = document.querySelector(selector);\n    if (!element) {\n        throw new ElementNotFound(selector);\n    }\n\n    return element;\n}","import {UserInput, UIEvent, AnyUIEvent} from \"./input\";\nimport {MessageUserInput, MessageInit, MessageEngineEvent} from \"./messages\";\nimport {createWorker} from \"./workerWorkaround.js\";\nimport {BaseEngine} from \"../engine/baseEngine\";\nimport {AnyEngineEvent} from \"../render/events/engine\";\n\nexport class WorkerApplication extends BaseEngine {\n    worker;\n    userInput;\n\n    constructor(canvas) {\n        super();\n        this.worker = createWorker();\n        const offscreen = canvas.transferControlToOffscreen();\n\n        this.worker.postMessage(\n            new MessageInit(offscreen),\n            [offscreen]\n        );\n\n        this.userInput = new UserInput(canvas);\n        this.userInput.addHandler(this.sendUserInputEvent);\n    }\n\n    sendUserInputEvent = (event: AnyUIEvent) => {\n        this.worker.postMessage(\n            new MessageUserInput(event)\n        )\n    }\n\n    sendEngineEvent = (event: AnyEngineEvent) => {\n        this.worker.postMessage(\n            new MessageEngineEvent(event)\n        )\n    }\n}","export interface UIEvent {}\n\nexport interface UIMouseEvent {\n    screenX: number,\n    screenY: number,\n    dx: number,\n    dy: number,\n    leftButtonDown: boolean\n}\n\nexport interface UIKeyboardEvent {\n    keyPressed: string\n}\n\nexport type AnyUIEvent = UIMouseEvent | UIKeyboardEvent;\n\nexport type UserInputHandler = (event: AnyUIEvent) => void;\n\nexport class UserInput {\n    _canvas: HTMLCanvasElement;\n    _handlers: Set<UserInputHandler>;\n\n    _oldX: number;\n    _oldY: number;\n\n    _leftButtonDown: boolean;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this._canvas = canvas;\n        this._handlers = new Set();\n\n        this._leftButtonDown = false;\n\n        this.addHandlers();\n    }\n\n    private addHandlers() {\n        this._canvas.addEventListener('mouseenter', this.mouseEnter);\n        this._canvas.addEventListener('mouseleave', this.mouseLeave);\n        this._canvas.addEventListener('mousemove', this.mouseMove);\n        this._canvas.addEventListener('mousedown', this.mouseDown);\n        this._canvas.addEventListener('mouseup', this.mouseUp);\n        this._canvas.addEventListener('click', this.click);\n\n        // Touch events\n        this._canvas.addEventListener('touchstart', this.touchStart, { passive: false });\n        this._canvas.addEventListener('touchmove', this.touchMove, { passive: false });\n        this._canvas.addEventListener('touchcancel', this.touchCancel, { passive: false });\n        this._canvas.addEventListener('touchend', this.touchEnd, { passive: false });\n\n        // Keyboard events\n        document.addEventListener('keypress', this.keyPress);\n    }\n\n    private removeHandlers() {\n        document.removeEventListener('keypress', this.keyPress);\n    }\n\n    private processEvent(event) {\n        this._handlers.forEach((callback: UserInputHandler) => {\n            callback(event);\n        })\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    addHandler(callback: UserInputHandler) {\n        this._handlers.add(callback);\n    }\n\n    removeHandler(callback: UserInputHandler) {\n        if (this._handlers.has(callback)) {\n            this._handlers.delete(callback);\n        }\n    }\n\n    keyPress = (browserEvent: KeyboardEvent) => {\n        const event = {\n            keyPressed: browserEvent.key\n        }\n        this.processEvent(event)\n    }\n\n    createMouseEvent(browserEvent: MouseEvent): UIMouseEvent {\n        return {\n            screenX: browserEvent.offsetX,\n            screenY: browserEvent.offsetY,\n            dx: -this._oldX + browserEvent.offsetX,\n            dy: -this._oldY + browserEvent.offsetY,\n            leftButtonDown: this._leftButtonDown\n        }\n    }\n\n    mouseEnter = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n    }\n\n    mouseLeave = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n    }\n\n    mouseMove = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n    }\n\n    mouseDown = (browserEvent: MouseEvent) => {\n        this._leftButtonDown = true;\n\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n    }\n\n    mouseUp = (browserEvent: MouseEvent) => {\n        this._leftButtonDown = false;\n\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n    }\n\n    click = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n    }\n\n    createTouchEvent(browserEvent: TouchEvent): UIMouseEvent | null {\n        const touch = browserEvent.touches.item(0)\n\n        return {\n            screenX: touch.pageX,\n            screenY: touch.pageY,\n            dx: -this._oldX + touch.pageX,\n            dy: -this._oldY + touch.pageY,\n            leftButtonDown: this._leftButtonDown\n        }\n    }\n\n    createTouchEndEvent(): UIMouseEvent {\n        return {\n            screenX: this._oldX,\n            screenY: this._oldY,\n            dx: 0,\n            dy: 0,\n            leftButtonDown: this._leftButtonDown\n        }\n    }\n\n    touchStart = (browserEvent: TouchEvent) => {\n        browserEvent.preventDefault();\n\n        if (browserEvent.touches.length === 0) {\n            return;\n        }\n\n        this._leftButtonDown = true;\n\n        const touch = browserEvent.touches.item(0)\n\n        const event = {\n            screenX: touch.pageX,\n            screenY: touch.pageY,\n            dx: 0,\n            dy: 0,\n            leftButtonDown: this._leftButtonDown\n        }\n\n        this.processEvent(event);\n    }\n\n    touchMove = (browserEvent: TouchEvent) => {\n        browserEvent.preventDefault();\n\n        const event = this.createTouchEvent(browserEvent);\n        if (event) {\n            this.processEvent(event);\n        }\n    }\n\n    touchEnd = (browserEvent: TouchEvent) => {\n        browserEvent.preventDefault();\n\n        this._leftButtonDown = false;\n        const event = this.createTouchEndEvent();\n        if (event) {\n            this.processEvent(event);\n        }\n    }\n\n    touchCancel = (browserEvent: TouchEvent) => {\n        browserEvent.preventDefault();\n        \n        this._leftButtonDown = false;\n        const event = this.createTouchEndEvent();\n        if (event) {\n            this.processEvent(event);\n        }\n    }\n}","export enum MessageType {\n    MessageNone = 0,\n    MessageInit = 1,\n    MessageUserInput = 2,\n    MessageEngineEvent = 3\n}\n\nexport class MessageEvent {\n    type = MessageType.MessageNone;\n}\n\nexport class MessageInit extends MessageEvent {\n    type = MessageType.MessageInit;\n    canvas;\n\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n    }\n}\n\nexport class MessageUserInput extends MessageEvent {\n    type = MessageType.MessageUserInput;\n    event;\n\n    constructor(event) {\n        super();\n        this.event = event;\n    }\n}\n\nexport class MessageEngineEvent extends MessageEvent {\n    type = MessageType.MessageEngineEvent;\n    event;\n\n    constructor(event) {\n        super();\n        this.event = event;\n    }\n}\n","export function createWorker() {\n    return new Worker(new URL('../worker/main.ts', import.meta.url), {type: 'module'});\n}","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('cYOr9') + \"../main.8e789c37.js\" + \"?\" + Date.now();module.exports = workerURL(url, bundleURL.getOrigin(url), false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","import {AnyUIEvent} from \"../host/input\";\nimport {SceneName} from \"../render/scenes/baseScene\";\nimport {AnyEngineEvent, LoadSceneEngineEvent} from \"../render/events/engine\";\n\ntype BaseEngineUIEventHandlerType = (event: AnyUIEvent) => void ;\ntype BaseEngineEngineEventHandlerType = (event: AnyEngineEvent) => void;\n\nexport abstract class BaseEngine {\n    sendUserInputEvent: BaseEngineUIEventHandlerType;\n    sendEngineEvent: BaseEngineEngineEventHandlerType;\n\n    loadScene(sceneName: SceneName) {\n        const event: LoadSceneEngineEvent = {\n            scene: sceneName\n        }\n        this.sendEngineEvent(event);\n    }\n}","import {Render} from \"../render\";\nimport {UIEvent, UserInput} from \"./input\";\nimport {BaseEngine} from \"../engine/baseEngine\";\n\nexport class DirectApplication extends BaseEngine {\n    render;\n    userInput;\n\n    constructor(canvas) {\n        super();\n        this.render = new Render(canvas);\n        this.render.start();\n\n        this.userInput = new UserInput(canvas);\n        this.userInput.addHandler(this.sendUserInputEvent);\n    }\n\n    sendUserInputEvent = (event) => {\n        this.render.processUserInput(event)\n    }\n\n    sendEngineEvent = (event) => {\n        this.render.processEngineEvent(event);\n    }\n}","import {Vec2} from \"./vector/vec2\";\nimport {GridOptimizedSolver} from \"./solver/gridSolver\";\nimport {RenderableObject} from \"./renderableObjects/object\";\nimport {Frame} from \"./items/frame\";\nimport {Scene1} from \"./scenes/scene1\";\nimport {Constrain} from \"./constrains/constrain\";\nimport {BaseScene, SceneName} from \"./scenes/baseScene\";\nimport {AnyUIEvent, UIKeyboardEvent} from \"../host/input\";\nimport { Item } from \"./items/item\";\nimport {AnyEngineEvent, LoadSceneEngineEvent} from \"./events/engine\";\nimport {ENGINE_SCENES} from \"./scenes/all\";\nimport {Stats, StatsItem} from \"./stats\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {BaseSolver} from \"./solver/baseSolver\";\nimport {QuadTreeSolver} from \"./solver/quadTreeSolver\";\nimport {BaseRender} from \"./render/baseRender\";\nimport {Canvas2DRender} from \"./render/canvas2DRender\";\n\nexport class Render {\n    /**\n     * List of balls\n     * @type {RenderableObject[]}\n     */\n    objects: RenderableObject<BaseSolverObject, Item>[] = [];\n\n    /**\n     * @type {Constrain}\n     */\n    _constrains: Constrain = null;\n\n    /**\n     * Solver for physics\n     * @type {BaseSolver}\n     */\n    solver:BaseSolver = null;\n\n    flagRenderGrid = false;\n    flagRenderPreviousPosition = false;\n    flagSwitchSolver = false;\n\n    canvas: HTMLCanvasElement;\n    context: BaseRender;\n\n    timeRenderStart: number;\n    timeRenderEnd: number;\n    step: number;\n\n    items: Item[];\n\n    scene: BaseScene;\n    stats: Stats;\n\n    constructor(canvas) {\n        this.stats = new Stats();\n        this.canvas = canvas;\n        this.context = new Canvas2DRender(this.canvas.getContext(\"2d\"));\n\n        this.timeRenderStart = performance.now();\n        this.timeRenderEnd = performance.now();\n        this.step = 0;\n\n        /**\n         * @type {RenderableObject[]}\n         */\n        this.objects = [];\n\n        this.items = [];\n\n        this.solver = null\n\n        this.configure();\n    }\n\n    reset() {\n        this.objects = [];\n        this.items = [];\n        this.solver.reset();\n    }\n\n    switchToGridSolver() {\n        const newSolver = new GridOptimizedSolver(\n            new Vec2(\n                this.canvas.width,\n                this.canvas.height\n            ),\n            this.stats\n        );\n\n        if (this.solver) {\n            this.solver.objects.forEach(obj => newSolver.addObject(obj));\n            newSolver.constrains = this._constrains;\n        }\n\n        this.solver = newSolver;\n    }\n\n    switchToQuadSolver() {\n        const newSolver = new QuadTreeSolver(\n            new Vec2(\n                this.canvas.width,\n                this.canvas.height\n            ),\n            this.stats\n        );\n\n        if (this.solver) {\n            this.solver.objects.forEach(obj => newSolver.addObject(obj));\n            newSolver.constrains = this._constrains;\n        }\n\n        this.solver = newSolver;\n    }\n\n    configure() {\n        this.switchToGridSolver();\n\n        this.context.font('10px serif');\n\n        this.loadScene(\"scene1\");\n    }\n\n    processUserInput(event: AnyUIEvent) {\n        const keyboardEvent = event as UIKeyboardEvent;\n        if (keyboardEvent.keyPressed === 'g') {\n            this.flagRenderGrid = !this.flagRenderGrid;\n        }\n\n        if (keyboardEvent.keyPressed === 'p') {\n            this.flagRenderPreviousPosition = !this.flagRenderPreviousPosition;\n        }\n\n        if (keyboardEvent.keyPressed === 's') {\n            this.flagSwitchSolver = true;\n        }\n\n        this.scene.processUserInput(event);\n    }\n\n    processEngineEvent(event: AnyEngineEvent) {\n        const loadSceneEvent = event as LoadSceneEngineEvent;\n\n        if (loadSceneEvent.scene) {\n            this.loadScene(loadSceneEvent.scene);\n        }\n    }\n\n    loadScene(sceneName: SceneName) {\n        this.reset();\n\n        const Scene = ENGINE_SCENES[sceneName];\n        this.scene = new Scene(this);\n    }\n\n    /**\n     * @param {RenderableObject} obj\n     */\n    addObject(obj: RenderableObject<BaseSolverObject, Item>) {\n        this.objects.push(obj);\n        this.solver.addObject(obj.solverObject);\n    }\n\n    update(time) {\n        this.solver.update(time);\n    }\n\n    tick() {\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        const timePassed = this.step / 1000;\n\n        this.scene.tick(timePassed);\n        this.update(timePassed);\n\n        this.clear();\n        this.renderItems();\n\n        if (this.flagRenderGrid) {\n            this.renderGrid();\n        }\n\n        if (this.flagRenderPreviousPosition) {\n            this.renderPreviousPosition();\n        }\n\n        this.printFPS();\n        this.stats.resetTick();\n\n        Vec2.lengthCallsCount = 0;\n        Vec2.length2CallsCount = 0;\n\n        if (this.flagSwitchSolver) {\n            if (this.solver instanceof GridOptimizedSolver) {\n                this.switchToQuadSolver();\n            } else {\n                this.switchToGridSolver();\n            }\n\n            this.flagSwitchSolver = false;\n        }\n    }\n\n    nextFrame = (time) => {\n        this.step = time - this.timeRenderEnd;\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = time;\n        self.requestAnimationFrame(this.nextFrame);\n    }\n\n    nextInterval = () => {\n        this.timeRenderStart = performance.now()\n        this.step = this.timeRenderStart - this.timeRenderEnd;\n\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = performance.now();\n    }\n\n    renderItems() {\n        this.items.forEach(item => item.render());\n        this.objects.forEach((obj) => obj.render());\n    }\n\n    printFPS() {\n        this.context.fillStyle('rgba(0,0,0,0.1)');\n        this.context.fillRect(0, 0, 100, 60);\n        this.context.text(`${Math.round(this.step)} ms / ${Math.round(1000/this.step)} FPS`, 0, 10);\n        this.context.text(`Length calls: ${Vec2.lengthCallsCount}`, 0 , 20);\n        this.context.text(`Lenght2 calls: ${Vec2.length2CallsCount}`, 0 , 30);\n        this.context.text(`Objects: ${this.objects.length}`, 0, 40);\n        this.context.text(`Compares per object: ${Math.round(Vec2.lengthCallsCount / this.objects.length)}`, 0, 50);\n\n        const stats = this.stats.getTickData();\n        stats.forEach((item: StatsItem, index: number) => {\n           this.context.text(`${item.key}: ${item.value}`, 0, index * 10 + 60);\n        });\n    }\n\n    clear() {\n        this.context.fillStyle(\"rgba(0, 0, 0, 0.9)\");\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    start() {\n        if (self.requestAnimationFrame) {\n            self.requestAnimationFrame(this.nextFrame);\n        } else {\n            setInterval(this.nextInterval, 16)\n        }\n    }\n\n    renderGrid() {\n        this.solver.debugRender(this.context);\n    }\n\n    renderPreviousPosition() {\n        this.objects.forEach((renderableObject) => {\n            const position = renderableObject.solverObject.previousPosition;\n            this.context.fillStyle('rgba(0, 0, 255, 0.5)');\n            this.context.fillCircle(10, position);\n        })\n    }\n\n    set constrain(constrain: Constrain) {\n        this._constrains = constrain;\n        this.solver.constrains = this._constrains;\n    }\n\n    get constrain(): Constrain {\n        return this._constrains;\n    }\n}","import { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR2, NullableNumber } from \"./math\";\nimport { Vec2ExceptionNoPerpendicularVectorToZeroVector } from \"./exceptions\";\n\nexport class Vec2 {\n    private _x: number = 0;\n    private _y: number = 0;\n    private _length: NullableNumber = null;\n    private _length2: NullableNumber = null;\n\n    static lengthCallsCount = 0;\n    static length2CallsCount = 0;\n\n    constructor(x: number, y?: number, l?: number) {\n        this._x = x;\n        if (y === undefined) {\n            this._y = x;\n        } else {\n            this._y = y;\n        }\n\n        if (l) {\n            this._length = l;\n            this._length2 = l * l;\n        }\n    }\n\n    get x(): number {\n        return this._x;\n    }\n\n    get y(): number {\n        return this._y;\n    }\n\n    set x(x: number) {\n        this._x = x;\n        this.reset();\n    }\n\n    set y(y:number) {\n        this._y = y;\n        this.reset();\n    }\n\n    get length(): number {\n        if (this._length === null) {\n            this._length = Math.sqrt(this.x*this.x + this.y*this.y);\n            Vec2.lengthCallsCount++;\n        }\n\n        return this._length;\n    }\n\n    /**\n     * Returns length^2\n     */\n    get length2(): number {\n        if (this._length2 === null) {\n            this._length2 = this._x*this._x + this._y*this._y;\n            Vec2.length2CallsCount++;\n        }\n\n        return this._length2;\n    }\n\n    moveTo(x: number | Vec2, y?: number) {\n        if (x instanceof Vec2) {\n            this._x = x.x;\n            this._y = x.y;\n        } else {\n            this._x = x;\n            this._y = y;\n        }\n\n        this.reset();\n    }\n\n    reset() {\n        this._length = null;\n        this._length2 = null;\n    }\n\n    /**\n     * Adds vec2 to current vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    addSelf(vec2: Vec2): Vec2 {\n        this._x += vec2.x;\n        this._y += vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    moveBy(delta: Vec2) {\n        this.addSelf(delta)\n    }\n\n    /**\n     * Subtract from current vector given vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    subSelf(vec2: Vec2): Vec2 {\n        this._x -= vec2.x;\n        this._y -= vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Flips along X axis\n     * @returns {Vec2}\n     */\n    flipYSelf(): Vec2 {\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Flips along Y axis\n     * @returns {Vec2}\n     */\n    flipXSelf(): Vec2 {\n        this._x = -this._x;\n        return this;\n    }\n\n    flipSelf(): Vec2 {\n        this._x = -this._x;\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Checks if this vector equals given vector using global MATH_ERROR const\n     * @param vec2\n     */\n    equals(vec2) {\n        return Vec2Math.distance2(this, vec2) < MATH_ERROR2;\n    }\n\n    /**\n     * Sums current vector and given vector and returns new vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sum(vec2: Vec2): Vec2 {\n        return new Vec2(this.x + vec2.x, this.y + vec2.y);\n    }\n\n    /**\n     * Calculate difference between current vector and given vector and returns\n     * new vector\n     *\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    diff(vec2: Vec2) {\n        return new Vec2(this.x - vec2.x, this.y - vec2.y);\n    }\n\n    /**\n     * Multiplicates vector by number\n     * @param {number} value\n     * @returns {Vec2}\n     */\n    mul(value: number) {\n        return new Vec2(this.x * value, this.y * value);\n    }\n\n    dot(vec: Vec2): number {\n        return this.x * vec.x + this.y * vec.y;\n    }\n\n    copy() {\n        return new Vec2(this.x, this.y);\n    }\n\n     applySelf(callback): Vec2 {\n        this.x = callback(this.x);\n        this.y = callback(this.y);\n        return this;\n    }\n\n    /**\n     * Checks if this vector inside rect created by 2 other vectors.\n     * @param vec1\n     * @param vec2\n     */\n    isInsideRect(vec1: Vec2, vec2: Vec2) {\n        const leftTopX = Math.min(vec1.x, vec2.x);\n        const leftTopY = Math.min(vec1.y, vec2.y);\n        const rightBottomX = Math.max(vec1.x, vec2.x);\n        const rightBottomY = Math.max(vec1.y, vec2.y);\n\n        return this._x >= leftTopX && this._x <= rightBottomX && this._y >= leftTopY && this._y <= rightBottomY;\n    }\n\n    /**\n     * Returns normalized vector\n     * @returns {Vec2}\n     */\n    get ort() {\n        const l = this.length;\n        return new Vec2(this.x / l, this.y / l, 1);\n    }\n\n    /**\n     * Returns new vector with absolute values for X and Y\n     */\n    get abs(): Vec2 {\n        return new Vec2(\n            Math.abs(this.x),\n            Math.abs(this.y)\n        )\n    }\n\n    get perpendicular() {\n        if (this.x === 0) {\n            // Vertical\n            if (this.y > 0) {\n                return Vec2.Horizontal().ort\n            } else if (this.y < 0) {\n                return Vec2.Horizontal().ort.flipSelf();\n            } else {\n                throw new Vec2ExceptionNoPerpendicularVectorToZeroVector();\n            }\n        } else if (this.y === 0) {\n            // Horizontal\n            if (this.x > 0) {\n                return Vec2.Vertical().ort\n            } else if (this.x < 0) {\n                return Vec2.Vertical().ort.flipSelf();\n            }\n        }\n\n        return new Vec2(\n            -this.y,\n            this.x\n        ).ort;\n    }\n\n    static Zero() {\n        return new Vec2(0, 0);\n    }\n\n    static Horizontal() {\n        return new Vec2(1, 0);\n    }\n\n    static Vertical() {\n        return new Vec2(0, 1);\n    }\n\n    static Down(y) {\n        return new Vec2(0, y);\n    }\n\n    static Right(x) {\n        return new Vec2(x, 0);\n    }\n}\n\n\n\n\n\n\n\n\n","import { Vec2 } from \"./vec2\";\nimport { Vec2ExceptionParallel } from \"./exceptions\";\nimport { Vec2Line } from \"./vec2Line\";\n\nexport class Vec2Math {\n    static diff(vec1: Vec2, vec2: Vec2): Vec2 {\n        return new Vec2(vec1.x - vec2.x, vec1.y - vec2.y);\n    }\n\n    static mul(vec1: Vec2, scalar: number): Vec2 {\n        return new Vec2(vec1.x * scalar, vec1.y * scalar);\n    }\n\n    /**\n     * Calculates distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length;\n    }\n\n    /**\n     * Calculates square of distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance2(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length2;\n    }\n\n    /**\n     * Finds intersection between 2 lines\n     * @param {Vec2Line} line1\n     * @param {Vec2Line} line2\n     * @returns {Vec2}\n     */\n    static intersect(line1, line2) {\n        if (line1.K === line2.K) {\n            throw new Vec2ExceptionParallel()\n        }\n\n        if (isNaN(line1.K) || isNaN(line2.K)) {\n            // One of two lines is vertical\n            if (isNaN(line1.K)) {\n                return line2.makeVec2FromX(line1._vec1.x);\n            } else {\n                return line1.makeVec2FromX(line2._vec1.x);\n            }\n        } else {\n            const x = (line1.B - line2.B) / (line2.K - line1.K);\n            return line1.makeVec2FromX(x);\n        }\n    }\n\n    /**\n     * Dot product of 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static dot(vec1: Vec2, vec2: Vec2): number {\n        return vec1.x * vec2.x + vec1.y * vec2.y;\n    }\n\n    /**\n     *\n     * @param {Vec2} vec\n     * @param {Vec2Line} line\n     * @returns {Vec2}\n     */\n    static mirror(vec: Vec2, line: Vec2Line) {\n        const normal = line.direction.perpendicular;\n        return vec.diff(\n            normal.mul(2 * Vec2Math.dot(vec, normal))\n        );\n    }\n\n    static scale(vec1: Vec2, vec2: Vec2) {\n        return new Vec2(\n            vec1.x / vec2.x,\n            vec1.y / vec2.y\n        )\n    }\n}\n","export class Vec2Exception extends Error {}\n\nexport class Vec2ExceptionParallel extends Vec2Exception {}\nexport class Vec2ExceptionNoPerpendicularVectorToZeroVector extends Vec2Exception {}\nexport class Vec2ExceptionRectSizeShouldBePositive extends Vec2Exception {}","export const MATH_ERROR = 0.000001;\nexport const MATH_ERROR2 = MATH_ERROR * MATH_ERROR;\nexport const SQRT2 = Math.sqrt(2);\n\n/**\n * Checks if a equals b with given error\n * @param {number} a\n * @param {number} b\n * @param {number} error\n * @returns {boolean}\n */\nexport function isEqual(a, b, error) {\n    return Math.abs(a - b) < error;\n}\n\nexport type NullableNumber = number | null;\n","import {Vec2} from \"../vector/vec2\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {CollisionCell, GridSolverSpace} from \"./gridSolverSpace\";\nimport {BaseSolver} from \"./baseSolver\";\nimport {Vec2Math} from \"../vector/vec2Math\";\nimport {BaseRender} from \"../render/baseRender\";\n\nexport class GridOptimizedSolver extends BaseSolver {\n    gravity: Vec2 = Vec2.Zero();\n    gravityCenter: Vec2 = Vec2.Zero();\n    collisionGrid: GridSolverSpace;\n\n    cellSize: Vec2;\n\n    constructor(worldSize, stats) {\n        super(worldSize, stats);\n        this.configure();\n    }\n\n    reset() {\n        super.reset();\n        this.collisionGrid.clear();\n    }\n\n    configure() {\n        super.configure();\n        this.gravity = new Vec2(0, 100);\n        this.gravityCenter = new Vec2(this.worldSize.x / 2, this.worldSize.y / 2);\n\n        const cellSize = 16;\n\n        const gridX = Math.round(this.worldSize.x / cellSize);\n        const gridY = Math.round(this.worldSize.y / cellSize);\n\n        this.cellSize = new Vec2(\n            this.worldSize.x / gridX,\n            this.worldSize.y / gridY\n        );\n\n        this.collisionGrid = new GridSolverSpace(\n            gridX, gridY,\n            this.cellSize\n        )\n    }\n\n    processOptimizations() {\n        this.collisionGrid.clear();\n        this.objects.forEach((obj, index) => {\n            obj.addToSpace(this.collisionGrid);\n            this.stats.addStats(`Solver object: ${obj.toString()}`)\n        });\n    }\n\n    applyForces() {\n        this.objects.forEach(obj => {\n            const direction = Vec2Math.diff(obj.currentPosition, this.gravityCenter);\n            obj.accelerate(direction.ort.mul(-this.gravity.length));\n            //obj.accelerate(this.gravity)\n        })\n    }\n\n    processCollisionsInCell(objA: BaseSolverObject, cell: CollisionCell) {\n        this.stats.addStats('processCollisionsInCell.calls');\n\n        cell.objects.forEach(objB => {\n            if (objA === objB) {\n                return;\n            }\n\n            if (objA.immovable && objB.immovable) {\n                return;\n            }\n\n            this.stats.addStats('processCollisions.calls');\n            objA.collide(objB);\n        })\n    }\n\n    processCell(index: number) {\n        this.stats.addStats('processCell.calls', 1);\n\n        const currentCell = this.collisionGrid.cells[index];\n        currentCell.objects.forEach(objA => {\n            this.collisionGrid.adjacentCells[index].forEach(cell => {\n                if (cell === currentCell && cell.objects.length === 1) {\n                    return; // We don't need to check collisions if I'm only object in cell\n                }\n\n                this.processCollisionsInCell(objA, cell);\n            })\n        })\n    }\n\n    processCollisions() {\n        for (let index = 0; index < this.collisionGrid.size; index++) {\n            this.processCell(index);\n        }\n    }\n\n    debugRender(context: BaseRender) {\n        this.collisionGrid.debugRender(context);\n        this.objects.forEach(object => object.debugRender(context));\n    }\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","import { Vec2 } from \"../vector/vec2\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {Vec2Math} from \"../vector/vec2Math\";\nimport {BaseSolverSpace} from \"./baseSolverSpace\";\nimport {BaseRender} from \"../render/baseRender\";\n\nexport class CollisionCell {\n    objects: BaseSolverObject[] = [];\n    highlight: boolean = false;\n\n    static MAX_OBJECT_IN_CELL = 100;\n\n    addObject(obj) {\n        if (this.objects.length >= CollisionCell.MAX_OBJECT_IN_CELL) {\n            return\n        }\n\n        this.objects.push(obj);\n    }\n\n    clear() {\n        this.objects = [];\n        this.highlight = false;\n    }\n\n    remove(index) {\n        const objectIndex = this.objects.findIndex(obj => obj.index === index);\n        if (objectIndex !== -1) {\n            this.objects.splice(objectIndex, 1);\n        }\n    }\n\n    get count() {\n        return this.objects.length;\n    }\n}\n\ntype CollisionGridForEachCallback = (column: number, row: number, cell: CollisionCell, index?: number) => void;\ntype CollisionCellArray = CollisionCell[];\n\ntype GridIndex = number;\n\nexport class GridSolverSpace extends BaseSolverSpace {\n    cells: CollisionCell[] = [];\n    _width: number;\n    _height: number;\n    _size: number;\n    cellSize: Vec2;\n    index2xy: Vec2[] = [];\n    adjacentCells: CollisionCellArray[] = []\n\n    constructor(width, height, cellSize: Vec2) {\n        super();\n        this._width = width;\n        this._height = height;\n\n        this.cellSize = cellSize;\n\n        this.resize();\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    set width(w: number) {\n        this._width = w;\n        this.resize();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    set height(h: number) {\n        this._height = h;\n        this.resize();\n    }\n\n    recalculateIndex2xy() {\n        this.index2xy = [];\n        for (let i = 0; i < this._size; i++) {\n            this.index2xy.push(this.makeVecFromIndex(i))\n        }\n    }\n\n    /**\n     * Calculate cache of collision cells\n     */\n    recalculateCollisionCells() {\n        this.adjacentCells = [];\n        this.cells.forEach((cell, index) => {\n            const pos = this.getVecFromIndex(index);\n            const cells = [];\n            cells.push(cell); // Add self\n\n            if (pos.y > 0) {\n                cells.push(this.cells[this.makeIndexFromCoord(pos.x, pos.y - 1)]); //TOP\n            }\n\n            if (pos.y + 1 < this._height) {\n                cells.push(this.cells[this.makeIndexFromCoord(pos.x, pos.y + 1)]); //BOTTOM\n            }\n\n            if (pos.x > 0) {\n                if (pos.y > 0) {\n                    cells.push(this.cells[this.makeIndexFromCoord(pos.x - 1, pos.y - 1)]); //LEFT TOP\n                }\n\n                cells.push(this.cells[this.makeIndexFromCoord(pos.x - 1, pos.y)]); //LEFT\n\n                if (pos.y + 1 < this._height) {\n                    cells.push(this.cells[this.makeIndexFromCoord(pos.x - 1, pos.y + 1)]); //LEFT BOTTOM\n                }\n            }\n\n            if (pos.x + 1 < this._width) {\n                if (pos.y > 0) {\n                    cells.push(this.cells[this.makeIndexFromCoord(pos.x + 1, pos.y - 1)]); //RIGHT TOP\n                }\n\n                cells.push(this.cells[this.makeIndexFromCoord(pos.x + 1, pos.y)]); //RIGHT\n\n                if (pos.y + 1 < this._height) {\n                    cells.push(this.cells[this.makeIndexFromCoord(pos.x + 1, pos.y + 1)]); //RIGHT BOTTOM\n                }\n            }\n\n            this.adjacentCells[index] = cells;\n        })\n    }\n\n    getVecFromIndex(index) {\n        return this.index2xy[index];\n    }\n\n    resize() {\n        this.cells = [];\n        this._size = this._width * this._height;\n        for (let i = 0; i < this._size; i++) {\n            this.cells.push(new CollisionCell());\n        }\n\n        this.recalculateIndex2xy();\n        this.recalculateCollisionCells();\n    }\n\n    addObject(obj: BaseSolverObject) {\n        this.addObjectByIndex(0, obj);\n    }\n\n    addPointObject(worldX, worldY, obj) {\n        const x = Math.trunc(worldX / this.cellSize.x);\n        const y = Math.trunc(worldY / this.cellSize.y);\n\n        const index: GridIndex = this.makeIndexFromCoord(x, y);\n        this.addObjectByIndex(index, obj);\n    }\n\n    addObjectByIndex(index: GridIndex, obj: BaseSolverObject) {\n        if (!isNaN(index) && index>=0 && index<this.size) {\n            this.cells[index].addObject(obj);\n        }\n    }\n\n    makeIndexFromVec(vec: Vec2): number {\n        return vec.x * this._height + vec.y;\n    }\n\n    makeIndexFromCoord(x: number, y: number): number {\n        return x * this._height + y;\n    }\n\n    makeVecFromIndex(index: GridIndex): Vec2 {\n        const x = Math.trunc(index / this._height);\n        const y = index - x * this._height;\n        return new Vec2(x, y);\n    }\n\n    /**\n     * Adds object to all cells between given coords\n     * @param worldLeftTop\n     * @param worldRightBottom\n     * @param obj\n     */\n    addRectangularObject(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject) {\n        const point1 = Vec2Math.scale(worldLeftTop, this.cellSize).applySelf(Math.trunc);\n        const point2 = Vec2Math.scale(worldRightBottom, this.cellSize).applySelf(Math.trunc);\n\n        let left = Math.max(Math.min(point1.x, point2.x), 0);\n        let top = Math.max(Math.min(point1.y, point2.y), 0);\n        let right = Math.min(Math.max(point1.x, point2.x), this._width - 1);\n        let bottom = Math.min(Math.max(point1.y, point2.y), this._height - 1);\n\n        const index1 = this.makeIndexFromCoord(left, top);\n        const index2 = this.makeIndexFromCoord(right, bottom);\n\n        if (right >= this._width || left < 0 || top < 0 || bottom >= this._height) {\n            return\n        }\n\n        if (point1.x === point2.x) {\n            // Vertical\n            for (let cellIndex = index1; cellIndex <= index2; cellIndex++) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else if (point1.y === point2.y) {\n            // Horizontal\n            for (let cellIndex = index1; cellIndex <= index2; cellIndex+=this.height) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else {\n            let height = bottom - top;\n            let startFrom = this.makeIndexFromCoord(left, top);\n\n            for (let x = 0; x <= right-left; x++) {\n                for (let y = 0; y <= height; y++) {\n                    const cellIndex = startFrom + this.makeIndexFromCoord(x, y);\n                    this.addObjectByIndex(cellIndex, obj);\n                }\n            }\n        }\n    }\n\n    clear() {\n        this.cells.forEach(cell => cell.clear())\n    }\n\n    forEach(callback: CollisionGridForEachCallback) {\n        this.cells.forEach((cell, index) => {\n            const pos = this.getVecFromIndex(index);\n            callback(pos.x, pos.y, cell, index);\n        })\n    }\n\n    hasCell(index: number, dt: number) {\n        if (index < 0 || index >= this.size) {\n            return false;\n        }\n\n        const pos = this.getVecFromIndex(index);\n\n        const x = pos.x;\n        const y = pos.y;\n\n        if (y <= 0 && dt < 0) {\n            // TOP CELL\n            return false;\n        }\n\n        if (y === this.height - 1 && dt > 0) {\n            // Bottom cell\n            return  false;\n        }\n\n        if (x === 0 && dt < 0) {\n            // left cell\n            return false;\n        }\n\n        if (x >= this.width - 1 && dt > 0) {\n            // right cell;\n            return false;\n        }\n\n        return true;\n    }\n\n    debugRender(render: BaseRender) {\n        this.forEach((column, row, cell, index) => {\n            const cellPosition = new Vec2(\n                column * this.cellSize.x,\n                row * this.cellSize.y,\n            );\n\n            render.strokeStyle(cell.count > 0 ? '#ff0000' : '#00ff00');\n            render.lineWidth(cell.highlight ? 10 : 1);\n\n            render.rect(\n                cellPosition.x,\n                cellPosition.y,\n                this.cellSize.x-1,\n                this.cellSize.y-1\n            )\n\n            render.fillStyle(\"#ffffff\");\n            render.text(`${index}`,\n                cellPosition.sum(this.cellSize.mul(0.5))\n            )\n        });\n    }\n}\n","import {BaseSolverObject} from \"../objects/object\";\nimport {Vec2} from \"../vector/vec2\";\nimport {BaseRender} from \"../render/baseRender\";\n\nexport abstract class BaseSolverSpace {\n    abstract clear();\n    abstract addObject(obj: BaseSolverObject);\n\n    abstract addPointObject(worldX, worldY, obj: BaseSolverObject);\n\n    abstract addRectangularObject(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject);\n    abstract debugRender(render: BaseRender);\n}\n","import {Vec2} from \"../vector/vec2\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {Constrain} from \"../constrains/constrain\";\nimport {Stats} from \"../stats\";\nimport {BaseRender} from \"../render/baseRender\";\n\nexport abstract class BaseSolver {\n    stats: Stats;\n    objects: BaseSolverObject[] = []\n    constrains: Constrain = null;\n    subSteps: number = 4;\n    useFixedTime: boolean = true;\n    step: number;\n\n    worldSize: Vec2;\n\n    protected constructor(worldSize, stats) {\n        this.stats = stats;\n        this.objects = [];\n        this.worldSize = worldSize.copy();\n\n        this.configure();\n    }\n\n    reset() {\n        this.objects = [];\n    }\n\n    configure() {\n        this.useFixedTime = true;\n        this.step = 0.017 / this.subSteps;\n    }\n\n    addObject(obj: BaseSolverObject) {\n        this.objects.push(obj);\n    }\n\n    /**\n     * Update the simulation by given step.\n     * @param {number} time amount of seconds passed since last update.\n     */\n    update(time: number) {\n        const subTime = this.useFixedTime ? this.step : time / this.subSteps;\n        for (let i = 0; i < this.subSteps; i++) {\n            this.processOptimizations();\n            this.processCollisions();\n            this.applyForces();\n            this.updateObjects(subTime);\n            this.applyConstrains();\n        }\n    }\n\n    abstract processOptimizations();\n\n    /**\n     * Update objects state\n     * @param {number} time amount of seconds passed since last update\n     */\n    updateObjects(time) {\n        this.objects.forEach(obj => obj.update(time))\n    }\n\n    abstract applyForces();\n\n    applyConstrains() {\n        this.objects.forEach(obj => this.constrains.applyConstrain(obj))\n    }\n\n    abstract processCollisions();\n    abstract debugRender(context: BaseRender);\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","import {Scene1} from \"./scene1\";\nimport {Scene2} from \"./scene2\";\nimport {Scene3} from \"./scene3\";\n\nexport const ENGINE_SCENES = {\n    \"scene1\": Scene1,\n    \"scene2\": Scene2,\n    \"scene3\": Scene3\n}","import {BaseScene} from \"./baseScene\";\nimport {CombineGenerator} from \"../generators/combineGenerator\";\nimport { TotalObjectsGenerator } from \"../generators/totalObjectsGenerator\";\nimport { Render} from \"../index\";\nimport {Circle} from \"../items/circle\";\nimport {Vec2} from \"../vector/vec2\";\nimport {Vec2Math} from \"../vector/vec2Math\";\nimport {BallsObject} from \"../objects/ball\";\nimport {RenderableObject} from \"../renderableObjects/object\";\nimport {ImmovableBallsObject} from \"../objects/immovableBall\";\nimport {ImmovableLineRenderableObject} from \"../renderableObjects/immovableLine\";\nimport {ImmovableLineObject} from \"../objects/immovableLine\";\nimport {Line} from \"../items/line\";\nimport {CircleWithText} from \"../items/circleWithText\";\nimport { index2color } from \"../items/utils/index2color\";\nimport { ViewportConstrain } from \"../constrains/viewport\";\nimport {AnyUIEvent, UIMouseEvent} from \"../../host/input\";\nimport {createMilkshake} from \"../primitives/milkshake\";\nimport {Vec2Line} from \"../vector/vec2Line\";\n\nconst ballsColors = {\n    57: '#ffffff',\n    78: '#ffffff',\n    71: '#ffffff',\n    86: '#ffffff',\n    200: '#ffffff',\n    202: '#ffffff',\n    218: '#ffffff',\n}\n\nexport class Scene1 extends BaseScene {\n    canMoveRedObject: boolean = false;\n\n    constructor(engine: Render) {\n        super(engine)\n\n        const canvasCenter = new Vec2(\n            this.engine.canvas.width / 2,\n            this.engine.canvas.height / 2\n        );\n\n        this.generator =\n            this.createBallsGenerator(\n                canvasCenter,\n                new Vec2(\n                    300, 300\n                ),\n                new Vec2(2, -2)\n            );\n\n\n        this.createBottomBouncyLine();\n        this.createMilkShake(canvasCenter);\n        this.createActor();\n        this.initConstrain();\n    }\n\n    createBallsGenerator(canvasCenter, pointDelta, baseBallVelocity) {\n        const ballGeneratorPoint = canvasCenter.diff(pointDelta);\n        const ballVelocity = baseBallVelocity.mul(1/this.engine.solver.subSteps);\n\n        return new TotalObjectsGenerator(\n            this.engine.solver,\n            1000,\n            7,\n            (index) => {\n                const obj = new RenderableObject<BallsObject, CircleWithText>(\n                    (new BallsObject(\n                        ballGeneratorPoint,\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.engine.context,\n                        Vec2.Zero(),\n                        5,\n                        index2color(index+200),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj2 = new RenderableObject<BallsObject, CircleWithText>(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.engine.context,\n                        Vec2.Zero(),\n                        5,\n                        index2color(index+100),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj3 = new RenderableObject<BallsObject, CircleWithText>(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(-20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.engine.context,\n                        Vec2.Zero(),\n                        5,\n                        index2color(index),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj4 = new RenderableObject<BallsObject, CircleWithText>(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Right(-40)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.engine.context,\n                        Vec2.Zero(),\n                        5,\n                        index2color(index-100),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                return [obj,obj2, obj3, obj4];\n            }\n        )\n    }\n\n    createBottomBouncyLine() {\n        // Bottom bouncy line\n        const bottomLine = new ImmovableLineObject(\n            new Vec2(\n                0, this.engine.canvas.height - 10\n            ),\n            new Vec2(\n                this.engine.canvas.width, 0\n            )\n        )\n\n        bottomLine.bounceValue = 1.5;\n\n        this.engine.addObject(\n            new ImmovableLineRenderableObject(\n                bottomLine,\n                new Line(\n                    this.engine.context,\n                    Vec2.Zero(),\n                    Vec2.Zero(),\n                    '#ff0000'\n                )\n            )\n        )\n    }\n\n    createMilkShake(canvasCenter) {\n        createMilkshake(1, canvasCenter).forEach(line => {\n            this.engine.addObject(new ImmovableLineRenderableObject(\n                new ImmovableLineObject(line),\n                new Line(this.engine.context, Vec2.Zero(), Vec2.Zero(), '#ffffff')\n            ))\n        });\n\n        createMilkshake(0.5, canvasCenter).forEach(line => {\n            this.engine.addObject(new ImmovableLineRenderableObject(\n                new ImmovableLineObject(line),\n                new Line(this.engine.context, Vec2.Zero(), Vec2.Zero(), '#0000ff')\n            ))\n        });\n    }\n\n    initConstrain() {\n        this.engine.constrain = new ViewportConstrain(this.engine.canvas.width, this.engine.canvas.height)\n    }\n\n    createActor() {\n        this.actor = new RenderableObject<ImmovableBallsObject, Circle>(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.engine.context, Vec2.Zero(), 30, '#ff0000')\n        );\n        this.engine.addObject(this.actor);\n    }\n\n    getActor() {\n        return this.actor;\n    }\n\n    tick(timePassed: number) {\n        this.engine.stats.addStats('Time passed', timePassed)\n\n        if (timePassed > 0.017) {\n            return;\n        }\n        const newBalls = this.generator.getNextObjects(timePassed);\n        if (newBalls) {\n            newBalls.forEach(ball => this.engine.addObject(ball));\n        }\n    }\n\n    processUserInput(event: AnyUIEvent) {\n        const mouseEvent = event as UIMouseEvent;\n\n        if (mouseEvent.leftButtonDown) {\n            if (this.actor.solverObject.isPointInsideObject(\n                new Vec2(\n                    mouseEvent.screenX,\n                    mouseEvent.screenY\n                )\n            )) {\n                this.canMoveRedObject = true;\n            }\n\n            if (this.canMoveRedObject) {\n                this.actor.solverObject.moveBy(\n                    new Vec2(\n                        mouseEvent.dx,\n                        mouseEvent.dy\n                    )\n                )\n            }\n        } else {\n            this.canMoveRedObject = false;\n        }\n    }\n}","import { ObjectsGenerator } from \"../generators/objectsGenerator\";\nimport { RenderableObject } from \"../renderableObjects/object\";\nimport { Render} from \"../index\";\nimport {UIEvent} from \"../../host/input\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {Item} from \"../items/item\";\n\nexport type SceneName = string;\n\nexport abstract class BaseScene {\n    engine: Render;\n    generator: ObjectsGenerator;\n    actor: RenderableObject<BaseSolverObject, Item>;\n\n    protected constructor(engine: Render) {\n        this.engine = engine;\n    }\n\n    abstract tick(timePassed: number): void;\n    abstract processUserInput(event: UIEvent): void;\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\nexport class TotalObjectsGenerator extends ObjectsGenerator {\n    constructor(solver, count, delay, createCallback) {\n        super(solver);\n        this.limit = count;\n        this.total = 0;\n\n        this.delay = delay;\n        this.create = createCallback;\n        this.lastCreateTime = 0;\n    }\n\n    getNextObjects(step) {\n        if (this.total > this.limit) {\n            return [];\n        }\n\n        this.lastCreateTime += 1;\n        if (this.lastCreateTime > this.delay) {\n            const newItems = this.create(this.total);\n            this.lastCreateTime = 0;\n            this.total+= newItems.length;\n\n            return newItems;\n        }\n\n        return []\n    }\n}","export class ObjectsGenerator {\n    solver = null;\n    constructor(solver) {\n        this.solver = solver;\n    }\n\n    // TODO Make me iterator\n    getNextObjects(step) {\n        return [];\n    }\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\nimport {BaseRender} from \"../render/baseRender\";\n\nexport class Circle extends Item {\n    r = 0;\n    color = '#00ff00';\n\n    constructor(renderer: BaseRender, position: Vec2, r: number, color: string) {\n        super(renderer, position);\n\n        if (r) {\n            this.r = r;\n        }\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.renderer.strokeStyle(this.color);\n        this.renderer.fillStyle(this.color);\n        this.renderer.fillCircle(this.r, this.position);\n    }\n}","import {Vec2} from \"../vector/vec2\";\nimport {BaseRender} from \"../render/baseRender\";\n\nexport class Item {\n    renderer: BaseRender;\n    position: Vec2 = Vec2.Zero();\n\n    constructor(renderer: BaseRender, position: Vec2) {\n        this.renderer = renderer;\n        this.position = position;\n    }\n\n    /**\n     * Method immediately renders object on context\n     */\n    render() {\n\n    }\n\n    /**\n     * Method tries to put object in render block\n     */\n    queue() {\n\n    }\n}","import { Vec2 } from \"../vector/vec2\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport { Vec2Math } from \"../vector/vec2Math\";\nimport {SolverObjectTypes} from \"./types\";\nimport { collide } from \"./collisionModels\";\nimport {BaseSolverObject} from \"./object\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {Vec2Rect} from \"../vector/vec2Rect\";\nimport {BaseRender} from \"../render/baseRender\";\n\nconst MAX_VELOCITY = 10;\nconst MAX_VELOCITY2 = MAX_VELOCITY ** 2;\n\nexport class BallsObject extends BaseSolverObject {\n    acc = Vec2.Zero();\n\n    radius = 10;\n    bounceValue = 1.1;\n    motionReduce = 0.999;\n\n    type = SolverObjectTypes.TypeBall;\n    immovable = false;\n\n    private _radius2;\n\n    protected collisionRange: Vec2Rect;\n    protected boundary: Vec2Rect;\n\n    /**\n     * Creates balls object\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super();\n        this.previousPosition = position.copy();\n        this.currentPosition = position.copy();\n\n        if (radius !== undefined) {\n            this.radius = radius\n        }\n\n        this._radius2 = this.radius * this.radius;\n        this.collisionRange = new Vec2Rect(this.currentPosition, new Vec2(this.radius * 4));\n        this.boundary = new Vec2Rect(this.currentPosition, new Vec2(this.radius * 2));\n    }\n\n    /**\n     * Updates state of object\n     * @param {number} step\n     */\n    update(step) {\n        let velocity = this.velocity.mul(this.motionReduce);\n        if (velocity.length2 > MAX_VELOCITY2) {\n            velocity = velocity.ort.mul(MAX_VELOCITY);\n        }\n        this.previousPosition = this.currentPosition.copy();\n        this.moveBy(\n            velocity.addSelf(\n                this.acc.mul(step * step)\n            )\n        )\n        this.acc = Vec2.Zero();\n    }\n\n    accelerate(acc) {\n        this.acc.addSelf(acc);\n        return this;\n    }\n\n    setVelocity(vel) {\n        this.velocity = vel;\n        return this;\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    collide(obj) {\n        collide(this, obj)\n    }\n\n    addToSpace(collisionGrid: BaseSolverSpace) {\n        collisionGrid.addPointObject(\n            Math.floor(this.currentPosition.x),\n            Math.floor(this.currentPosition.y),\n            this\n        )\n    }\n\n    moveBy(delta: Vec2) {\n        this.currentPosition.moveBy(delta);\n        this.collisionRange.moveBy(delta);\n        this.boundary.moveBy(delta);\n    }\n\n    moveTo(position: Vec2) {\n        this.currentPosition.moveTo(position);\n        this.collisionRange.moveTo(this.currentPosition);\n        this.boundary.moveTo(this.currentPosition);\n    }\n\n    isPointInsideObject(point: Vec2): boolean {\n        return Vec2Math.distance(this.currentPosition, point) < this.radius;\n    }\n\n    get velocity(): Vec2 {\n        return Vec2Math.diff(\n            this.currentPosition,\n            this.previousPosition\n        );\n    }\n\n    set velocity(v) {\n        this.previousPosition = Vec2Math.diff(this.currentPosition,v);\n    }\n\n    /**\n     *\n     * @returns {Vec2Line}\n     */\n    get movementVector() {\n        return new Vec2Line(this.previousPosition, this.currentPosition);\n    }\n\n    get radius2() {\n        return this._radius2;\n    }\n\n    intersects(range: Vec2Rect): boolean {\n        const myRect = new Vec2Rect(this.currentPosition, new Vec2(this.radius, this.radius))\n        return myRect.intersect(range);\n    }\n\n    getCollisionRange(): Vec2Rect {\n        return this.collisionRange;\n    }\n\n    getBoundary(): Vec2Rect {\n        return this.boundary;\n    }\n\n    debugRender(context: BaseRender) {\n        context.strokeStyle('#FF0000');\n        const range = this.getCollisionRange();\n        context.rect(range.left, range.top, range.width, range.height);\n    }\n}","import { Vec2 } from \"./vec2\";\nimport { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR, isEqual } from \"./math\";\n\nexport class Vec2Line {\n    private _vec1: Vec2 = Vec2.Zero();\n    private _vec2: Vec2 = Vec2.Zero();\n\n    private _direction: Vec2;\n    private _ort: Vec2;\n\n    private _length: number;\n    private _length2: number;\n\n    /**\n     * Y = K*X + B\n     * @type {number}\n     */\n    private _k: number = 0;\n    private _b: number = 0;\n\n    constructor(vec1: Vec2, vec2: Vec2) {\n        this._vec1 = vec1.copy();\n        this._vec2 = vec2.copy();\n\n        this._direction = Vec2Math.diff(this._vec1, this._vec2);\n        this._length = this._direction.length;\n        this._length2 = this._direction.length2;\n        this._ort = this._direction.ort;\n\n        this.calculateKB();\n    }\n\n    /**\n     * Determines if given point lays on the line\n     * @param vec\n     * @returns {boolean}\n     */\n    inBetween(vec) {\n        const l1 = Vec2Math.diff(vec, this._vec1).length;\n        const l2 = Vec2Math.diff(this._vec2, vec).length;\n        const sum = l1 + l2;\n\n        return isEqual(this._length, sum, MATH_ERROR);\n    }\n\n    /**\n     * Checks if vector which lies on this line is in between vec1 and vec2\n     * @param vec\n     */\n    inBetweenFast(vec: Vec2) {\n        return vec.isInsideRect(this._vec1, this._vec2);\n    }\n\n    calculateKB() {\n        if (this._vec1.y === this._vec2.y) {\n            // Horizontal line\n            this._b = this._vec1.y;\n            this._k = 0;\n        } else if (this._vec1.x === this._vec2.x) {\n            // Vertical line\n            this._b = NaN;\n            this._k = NaN;\n        } else {\n            this._b = (this._vec1.x * this._vec2.y - this._vec1.y * this._vec2.x) / (this._vec1.x - this._vec2.x)\n            this._k = (this._vec1.y - this._vec2.y) / (this._vec1.x - this._vec2.x);\n        }\n    }\n\n    makeVec2FromX(x) {\n        return new Vec2(x, this._k * x + this._b);\n    }\n\n    copy() {\n        return new Vec2Line(\n            this._vec1,\n            this._vec2\n        )\n    }\n\n    moveBy(vec): Vec2Line {\n        this._vec1.addSelf(vec);\n        this._vec2.addSelf(vec);\n        this.calculateKB();\n        return this;\n    }\n\n    getPointProjection(vec) {\n        const a = this.direction;\n        const b = Vec2Math.diff(vec, this._vec1);\n        const cosabD = Vec2Math.dot(a, b) / (this.length);\n\n        return this._vec1.sum(\n            this.ort.mul(cosabD)\n        );\n    }\n\n    get B() {\n        return this._b;\n    }\n\n    get K() {\n        return this._k;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    get direction() {\n        return this._direction;\n    }\n\n    get ort() {\n        return this._ort;\n    }\n\n    get vec1() {\n        return this._vec1;\n    }\n\n    get vec2() {\n        return this._vec2;\n    }\n\n    get normal(): Vec2 {\n        return this._vec2.diff(this._vec1).perpendicular;\n    }\n\n    static Vertical(x) {\n        return new Vec2Line(\n            new Vec2(x, 0),\n            new Vec2(x, Number.MAX_SAFE_INTEGER)\n        )\n    }\n\n    static Horizontal(y) {\n        return new Vec2Line(\n            new Vec2(0, y),\n            new Vec2(Number.MAX_SAFE_INTEGER, y)\n        )\n    }\n}","export enum SolverObjectTypes {\n    TypeNull = 0,\n    TypeBall = 1,\n    TypeImmovableBall = 2,\n    TypeImmovableLine = 3,\n    TypeImmovablePolygon = 4\n}\n","import {Vec2Math} from \"../vector/vec2Math\";\nimport {BallsObject} from \"./ball\";\nimport {SolverObjectTypes} from \"./types\";\nimport {ImmovableLineObject} from \"./immovableLine\";\nimport {ImmovablePolygon} from \"./ImmovablePolygon\";\nimport {Vec2Line} from \"../vector/vec2Line\";\n\n/**\n * Collision between 2 balls objects\n * @param {BallsObject} obj1\n * @param {BallsObject} obj2\n */\nexport function collideBallAndBall(obj1: BallsObject, obj2: BallsObject) {\n    if (!obj1.getBoundary().intersect(obj2.getBoundary())) {\n        return\n    }\n\n    const between = Vec2Math.diff(obj1.currentPosition, obj2.currentPosition);\n    const distance = between.length;\n    const requiredDistance = obj1.radius + obj2.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        obj1.moveBy(Vec2Math.mul(normalized, obj1.radius / requiredDistance * delta * obj1.bounceValue));\n        obj2.moveBy(Vec2Math.mul(normalized, -obj2.radius / requiredDistance * delta * obj2.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable ball\n * @param {BallsObject} ball\n * @param {ImmovableBallsObject} immovable\n */\nexport function collideBallAndImmovableBall(ball: BallsObject, immovable) {\n    if (!ball.getBoundary().intersect(immovable.getBoundary())) {\n        return\n    }\n\n    const between = Vec2Math.diff(\n        ball.currentPosition,\n        immovable.currentPosition\n    );\n\n    const distance = between.length;\n    const requiredDistance = ball.radius + immovable.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        ball.moveBy(Vec2Math.mul(normalized, ball.radius / requiredDistance * delta * ball.bounceValue * immovable.bounceValue))\n    }\n}\n\nfunction _collideBallAndLine(ball: BallsObject, line: Vec2Line, lineBounce: number) {\n    try {\n        const projectionPoint = line.getPointProjection(ball.currentPosition);\n\n        // We definitely know that projection point is on the line, so we just need to check if it's\n        // between the ends.\n        if (line.inBetweenFast(projectionPoint)) {\n\n            const between = Vec2Math.diff(\n                projectionPoint,\n                ball.currentPosition\n            )\n\n            if (between.length2 < ball.radius2) {\n                const normalized = between.ort;\n\n                const sign = normalized.dot(line.normal) > 0 ? 1 : -1;\n\n                const delta = sign * (ball.radius - between.length);\n\n                ball.moveBy(Vec2Math.mul(normalized, -delta * ball.bounceValue * lineBounce));\n            }\n        }\n    } catch (e) {\n    }\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovableLineObject} line\n */\nexport function collideBallAndImmovableLine(ball: BallsObject, line: ImmovableLineObject) {\n    if (!ball.getBoundary().intersect(line.getCollisionRange())) {\n        return\n    }\n\n    _collideBallAndLine(ball, line._line, line.bounceValue);\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovablePolygon} polygon\n */\nexport function collideBallAndImmovablePolygon(ball: BallsObject, polygon: ImmovablePolygon) {\n    if (!ball.getBoundary().intersect(polygon.getCollisionRange())) {\n        return\n    }\n\n    polygon.lines.forEach(line => _collideBallAndLine(ball, line._line, line.bounceValue))\n}\n\nfunction flipObjects(obj1, obj2) {\n    return {\n        a: obj2,\n        b: obj1\n    }\n}\n\nexport function collide(a, b) {\n    let obj1 = a;\n    let obj2 = b;\n    if (obj1.type > obj2.type) {\n        const flipped = flipObjects(obj1, obj2);\n        obj1 = flipped.a;\n        obj2 = flipped.b\n    }\n\n    switch (true) {\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeBall:\n            return collideBallAndBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableBall:\n            return collideBallAndImmovableBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableLine:\n            return collideBallAndImmovableLine(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovablePolygon:\n            return collideBallAndImmovablePolygon(obj1, obj2);\n        default:\n            return;\n    }\n}","import {SolverObjectTypes} from \"./types\";\nimport {Vec2} from \"../vector/vec2\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {Vec2Rect} from \"../vector/vec2Rect\";\nimport {BaseRender} from \"../render/baseRender\";\n\nexport abstract class BaseSolverObject {\n    readonly type: SolverObjectTypes = SolverObjectTypes.TypeNull;\n    readonly index: number;\n    readonly immovable: boolean;\n\n    previousPosition = Vec2.Zero();\n    currentPosition = Vec2.Zero();\n\n    constructor() {\n        BaseSolverObject.index += 1;\n        this.index = BaseSolverObject.index;\n    }\n\n    update(step) {\n\n    }\n\n    accelerate(acc) {\n\n    }\n\n    collide(obj) {\n\n    }\n\n    inside(boundary: Vec2Rect):boolean {\n        return this.currentPosition.x >= boundary.left &&\n            this.currentPosition.x <= boundary.right &&\n            this.currentPosition.y >= boundary.top &&\n            this.currentPosition.y <= boundary.bottom;\n    }\n\n    abstract addToSpace(solverSpace: BaseSolverSpace);\n\n    debugRender(context: BaseRender) {\n\n    }\n\n    toString() {\n        return 'BaseSolverObject';\n    }\n\n    abstract moveBy(delta: Vec2);\n    abstract moveTo(position: Vec2);\n\n    abstract isPointInsideObject(point: Vec2): boolean;\n\n    abstract intersects(range: Vec2Rect): boolean;\n    abstract getCollisionRange(): Vec2Rect;\n\n    static index = 0;\n}\n","import {Vec2} from \"./vec2\";\nimport {Vec2ExceptionRectSizeShouldBePositive} from \"./exceptions\";\n\n\n\nexport class Vec2Rect {\n    private position: Vec2;\n    private size: Vec2;\n\n    private _left: number;\n    private _top: number;\n    private _right: number;\n    private _bottom: number;\n    private _width2: number;\n    private _height2: number;\n\n    constructor(center: Vec2, size: Vec2) {\n        this.position = center.copy();\n        this.size = size.copy();\n        if (this.size.x < 0 || this.size.y < 0) {\n            throw new Vec2ExceptionRectSizeShouldBePositive()\n        }\n\n        this.recalculate();\n    }\n\n    private recalculate() {\n        this._width2 = this.size.x / 2;\n        this._height2 = this.size.y / 2;\n\n        this._left = this.position.x - this._width2;\n        this._right = this.position.x + this._width2;\n        this._top = this.position.y - this._height2;\n        this._bottom = this.position.y + this._height2;\n    }\n\n    copy() {\n        return new Vec2Rect(this.position, this.size);\n    }\n\n    intersect(rect: Vec2Rect):boolean {\n        return !(this.left > rect.right || this.right < rect.left || this.top > rect.bottom || this.bottom < rect.top);\n    }\n\n    contains(point: Vec2):boolean {\n        return point.x > this.left && point.x < this.right && point.y > this.top && point.y < this.bottom;\n    }\n\n    moveBy(delta: Vec2) {\n        this.position.addSelf(delta);\n        this.recalculate();\n    }\n\n    moveTo(pos: Vec2) {\n        this.position = pos.copy();\n        this.recalculate();\n    }\n\n    get nw():Vec2Rect {\n        return new Vec2Rect(\n            new Vec2(this.position.x - this._width2 / 2, this.position.y - this._height2 / 2),\n            new Vec2(this._width2, this._height2)\n        );\n    }\n\n    get ne():Vec2Rect {\n        return new Vec2Rect(\n            new Vec2(this.position.x + this._width2 / 2, this.position.y - this._height2 / 2),\n            new Vec2(this._width2, this._height2)\n        );\n    }\n\n    get se():Vec2Rect {\n        return new Vec2Rect(\n            new Vec2(this.position.x + this._width2 / 2, this.position.y + this._height2 / 2),\n            new Vec2(this._width2, this._height2)\n        );\n    }\n\n    get sw():Vec2Rect {\n        return new Vec2Rect(\n            new Vec2(this.position.x - this._width2 / 2, this.position.y + this._height2 / 2),\n            new Vec2(this._width2, this._height2)\n        );\n    }\n\n    get left():number {\n        return this._left;\n    }\n\n    get right():number {\n        return this._right;\n    }\n\n    get top():number {\n        return this._top;\n    }\n\n    get bottom():number {\n        return this._bottom;\n    }\n\n    get diag(): number {\n        return this.size.length;\n    }\n\n    get width(): number {\n        return this.size.x;\n    }\n\n    get height(): number {\n        return this.size.y;\n    }\n}","import {Item} from \"../items/item\";\nimport {BaseSolverObject} from \"../objects/object\";\n\nexport class RenderableObject<SolverObject extends BaseSolverObject, DrawItem extends Item> {\n    solverObject: SolverObject = null;\n    renderItem: DrawItem = null;\n\n    constructor(solverObject: SolverObject, renderItem: DrawItem) {\n        this.solverObject = solverObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        this.renderItem.position = this.solverObject.currentPosition;\n    }\n\n    render() {\n        this.update();\n        this.renderItem.render();\n    }\n}","import {BallsObject} from \"./ball\";\nimport {SolverObjectTypes} from \"./types\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {SQRT2} from \"../vector/math\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class ImmovableBallsObject extends BallsObject {\n    type = SolverObjectTypes.TypeImmovableBall;\n    immovable = true;\n    bounceValue = 0.5;\n\n    /**\n     * @type {Vec2}\n     * @private\n     */\n    _fixedPosition = null;\n\n    /**\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super(position, radius);\n        this._fixedPosition = position.copy();\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n        this.collisionRange.moveTo(this.currentPosition);\n    }\n\n    addToSpace(solverSpace: BaseSolverSpace) {\n        const vec = new Vec2(\n            this.radius * SQRT2,\n            this.radius * SQRT2\n        )\n\n        const leftTop = this.currentPosition.sum(vec);\n        const rightBottom = this.currentPosition.diff(vec);\n\n        solverSpace.addRectangularObject(\n            leftTop,\n            rightBottom,\n            this\n        );\n    }\n\n    moveTo(position: Vec2) {\n        this.currentPosition = position.copy();\n        this.previousPosition = position.copy();\n        this._fixedPosition = position.copy();\n        super.moveTo(position);\n    }\n}","import {RenderableObject} from \"./object\";\n\nexport class ImmovableLineRenderableObject extends RenderableObject {\n    /**\n     * @type {ImmovableLineObject}\n     */\n    solverObject = null;\n\n    constructor(ballsObject, renderItem) {\n        super(ballsObject);\n        this.solverObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        super.update();\n        this.renderItem.direction = this.solverObject._direction;\n    }\n}","import { BallsObject } from \"./ball\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport {SolverObjectTypes} from \"./types\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {Vec2} from \"../vector/vec2\";\nimport {Vec2Math} from \"../vector/vec2Math\";\nimport {BaseRender} from \"../render/baseRender\";\nimport {ImmovableSolverObject} from \"./immovable\";\nimport {Vec2Rect} from \"../vector/vec2Rect\";\n\nexport class ImmovableLineObject extends ImmovableSolverObject {\n    _direction: Vec2;\n    _line: Vec2Line;\n\n    type = SolverObjectTypes.TypeImmovableLine;\n    immovable = true;\n\n    bounceValue = 1;\n\n    private collisionRange: Vec2Rect;\n\n    constructor(position: Vec2|Vec2Line, direction?: Vec2) {\n        super();\n        if (position instanceof Vec2Line) {\n            this.currentPosition = position.vec1.copy();\n            this.previousPosition = position.vec1.copy();\n            this._direction = position.direction.copy().flipSelf();\n        } else {\n            this.currentPosition = position.copy();\n            this.previousPosition = position.copy();\n\n            this._direction = direction;\n        }\n\n        this._line = new Vec2Line(\n            this.currentPosition.copy(),\n            this.currentPosition.copy().sum(this._direction)\n        )\n\n        this.collisionRange = new Vec2Rect(\n            this.currentPosition.sum(this._direction.mul(0.5)),\n            this._direction.abs\n        );\n    }\n\n    update(step) {\n        this.currentPosition = this._line.vec1;\n        this.previousPosition = this._line.vec2;\n    }\n\n    addToSpace(solverSpace: BaseSolverSpace) {\n        solverSpace.addRectangularObject(\n            this._line.vec1,\n            this._line.vec2,\n            this\n        );\n    }\n\n    moveBy(delta: Vec2) {\n        this.currentPosition.addSelf(delta);\n        this.previousPosition.addSelf(delta);\n        this._line.moveBy(delta)\n        this.collisionRange = new Vec2Rect(\n            this.currentPosition.sum(this._direction.mul(0.5)),\n            this._direction.abs\n        );\n    }\n\n    moveTo(position: Vec2) {\n        const delta = Vec2Math.diff(position, this._line.vec1);\n        this.moveBy(delta);\n    }\n\n    debugRender(context: BaseRender) {\n        context.strokeStyle('#00FF00');\n        context.line(this._line.vec1, this._line.vec2);\n        context.text(`${this.index}`, this._line.vec1);\n\n        context.strokeStyle('#FFFFFF');\n        context.lineWidth(10);\n        const point2 = this.currentPosition.sum(this._line.normal.flipSelf().mul(100));\n        context.line(this.currentPosition.x, this.currentPosition.y, point2.x, point2.y);\n\n        context.lineWidth(1);\n\n        context.strokeStyle('#FF0000');\n        context.rect(\n            this.collisionRange.left,\n            this.collisionRange.top,\n            this.collisionRange.width,\n            this.collisionRange.height\n        );\n    }\n\n    toString() {\n        return 'ImmovableLine';\n    }\n\n    inside(boundary: Vec2Rect):boolean {\n        return boundary.intersect(this.collisionRange);\n    }\n\n    intersects(range: Vec2Rect): boolean {\n        if (!range.intersect(this.collisionRange)) {\n\n\n\n\n\n\n\n\n\n\n            return false;\n        }\n\n        if (range.contains(this._line.vec1) || range.contains(this._line.vec2)) {\n            return true;\n        }\n\n        if (this.collisionRange.top < range.top && this.collisionRange.bottom > range.top) {\n            // TOP CROSS\n            return true;\n        }\n\n        if (this.collisionRange.top < range.bottom && this.collisionRange.bottom > range.bottom) {\n            // BOTTOM CROSS\n            return true;\n        }\n\n        if (this.collisionRange.left < range.left && this.collisionRange.right > range.left) {\n            // LEFT CROSS\n            return true;\n        }\n\n        if (this.collisionRange.left < range.right && this.collisionRange.right > range.right) {\n            // RIGHT\n            return true;\n        }\n    }\n\n    isPointInsideObject(point: Vec2): boolean {\n        return false;\n    }\n\n    getCollisionRange(): Vec2Rect {\n        return this.collisionRange;\n    }\n}\n\nexport function createImmovableLine(position: Vec2, direction: Vec2): ImmovableLineObject {\n    return new ImmovableLineObject(position, direction);\n}\n\nexport function createImmovableLineFrom2Points(point1: Vec2, point2: Vec2): ImmovableLineObject {\n    return new ImmovableLineObject(point1, Vec2Math.diff(point2, point1));\n}","import {BaseSolverObject} from \"./object\";\n\nexport abstract class ImmovableSolverObject extends BaseSolverObject {\n\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Line extends Item {\n    direction = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(renderer, position, direction, color) {\n        super(renderer, position);\n\n        this.direction = direction;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.renderer.strokeStyle(this.color);\n        this.renderer.vector(this.position, this.direction);\n    }\n}","import {Circle} from \"./circle\";\n\nexport class CircleWithText extends Circle {\n    text:string = '';\n    textColor: string = '#ffffff';\n\n    constructor(context, position,r, color, text, textColor) {\n        super(context, position, r, color);\n        this.text = text;\n        if (textColor) {\n            this.textColor = textColor;\n        }\n    }\n\n    render() {\n        super.render();\n        if (this.text !== '') {\n            this.renderer.fillStyle(this.textColor);\n            this.renderer.text(this.text, this.position);\n        }\n    }\n}","export function index2color(index) {\n    const frequency=5/1000;\n    const r = Math.floor(Math.sin(frequency*index + 0) * (127) + 128);\n    const g = Math.floor(Math.sin(frequency*index + 2) * (127) + 128);\n    const b = Math.floor(Math.sin(frequency*index + 4) * (127) + 128);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n}","import { Constrain } from \"./constrain\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class ViewportConstrain extends Constrain {\n    _width = 0;\n    _height = 0;\n\n    constructor(width, height) {\n        super()\n        this.width = width;\n        this.height = height;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    set width(width) {\n        this._width = width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    set height(height) {\n        this._height = height;\n    }\n\n    applyConstrain(obj) {\n        const newPosition = obj.currentPosition.copy();\n        let changePosition = false;\n        if (obj.currentPosition.x - obj.radius < 0) {\n            newPosition.x = obj.radius;\n            changePosition = true;\n        } else if (obj.currentPosition.x + obj.radius > this._width) {\n            newPosition.x = this._width - obj.radius;\n            changePosition = true;\n        }\n\n        if (obj.currentPosition.y - obj.radius < 0) {\n            newPosition.y = obj.radius;\n            changePosition = true;\n        } else if (obj.currentPosition.y + obj.radius > this._height) {\n            newPosition.y = this._height - obj.radius;\n            changePosition = true;\n        }\n\n        if (changePosition) {\n            obj.moveTo(newPosition);\n        }\n    }\n}","import {BaseSolverObject} from \"../objects/object\";\n\nexport abstract class Constrain {\n    protected constructor() {}\n\n    /**\n     *\n     * @param {BaseSolverObject} obj\n     */\n    abstract applyConstrain(obj: BaseSolverObject): void;\n}","import {Vec2} from \"../vector/vec2\";\nimport {Vec2Line} from \"../vector/vec2Line\";\nimport {Vec2Math} from \"../vector/vec2Math\";\n\nconst p = [\n    new Vec2(0, 0),\n    new Vec2(70, 380),\n    new Vec2(270, 380),\n    new Vec2(340, 0),\n    new Vec2(360, 0),\n    new Vec2(280, 400),\n    new Vec2(60, 400),\n    new Vec2(-20, 0)\n];\n\n\n\nexport function createMilkshake(size: number, position: Vec2): Vec2Line[] {\n    const center = position.diff(new Vec2(360/2 * size, 400/2 * size));\n    const milkShakeLines = [];\n\n    for (let i=0; i < p.length - 1; i++) {\n        milkShakeLines.push(new Vec2Line(p[i].mul(size).sum(center), p[i+1].mul(size).sum(center)));\n    }\n\n    milkShakeLines.push(new Vec2Line(p[p.length - 1].mul(size).sum(center), p[0].mul(size).sum(center)));\n    return milkShakeLines;\n}","import {BaseScene} from \"./baseScene\";\nimport { Render} from \"../index\";\nimport {Circle} from \"../items/circle\";\nimport { CircleWithText } from \"../items/circleWithText\";\nimport {Vec2} from \"../vector/vec2\";\nimport {RenderableObject} from \"../renderableObjects/object\";\nimport {ImmovableBallsObject} from \"../objects/immovableBall\";\nimport { CircleConstrain } from \"../constrains/circle\";\nimport {ObjectsGenerator} from \"../generators/objectsGenerator\";\nimport {AnyUIEvent, UIMouseEvent} from \"../../host/input\";\nimport {BallsObject} from \"../objects/ball\";\nimport {index2color} from \"../items/utils/index2color\";\n\nexport class Scene2 extends BaseScene {\n    _canMoveRedObject: boolean = false;\n    timePassedSinceLastBallCreated: number = 0;\n    ballIndex: number = 0;\n    center: Vec2;\n    radius: number;\n\n    constructor(engine: Render) {\n        super(engine)\n\n        this.center = new Vec2(\n            this.engine.canvas.width / 2,\n            this.engine.canvas.height / 2\n        );\n\n        this.radius = Math.min(this.center.x, this.center.y);\n\n        this.generator = new ObjectsGenerator(this.engine.solver);\n        this.createActor();\n        this.initConstrain();\n    }\n\n    createBall() {\n        const baseBallVelocity = new Vec2(0, 0);\n        const ballGeneratorPoint = this.actor.solverObject.currentPosition;\n        const toCenter = ballGeneratorPoint.diff(this.center);\n        const n = toCenter.ort;\n\n        const ballVelocity = n.mul(-1);\n        const obj = new RenderableObject<BallsObject, CircleWithText>(\n            (new BallsObject(\n                ballGeneratorPoint.diff(n.mul(40)),\n                5\n            )).setVelocity(ballVelocity),\n            new CircleWithText(\n                this.engine.context,\n                Vec2.Zero(),\n                7,\n                index2color(this.ballIndex+200),\n                '',\n                '#000000'\n            )\n        )\n\n        this.engine.addObject(obj);\n        this.ballIndex++;\n    }\n\n    createActor() {\n        this.actor = new RenderableObject<ImmovableBallsObject, Circle>(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.engine.context, Vec2.Zero(), 30, '#ff0000')\n        );\n        this.engine.addObject(this.actor);\n    }\n\n    initConstrain() {\n        this.engine.constrain = new CircleConstrain(\n            this.center,\n            this.radius\n        )\n\n        this.engine.items.push(\n            new Circle(\n                this.engine.context,\n                this.center,\n                this.radius,\n                '#ffffff'\n            )\n        );\n    }\n\n    getActor() {\n        return this.actor;\n    }\n\n    tick(timePassed: number) {\n        if (this.canMoveRedObject) {\n            this.timePassedSinceLastBallCreated += timePassed;\n\n            if(this.timePassedSinceLastBallCreated > 0.05) {\n                this.timePassedSinceLastBallCreated = 0;\n                this.createBall();\n            }\n        }\n    }\n\n    processUserInput(event: AnyUIEvent) {\n        const mouseEvent = event as UIMouseEvent;\n\n        if (mouseEvent.leftButtonDown) {\n            if (this.actor.solverObject.isPointInsideObject(\n                new Vec2(\n                    mouseEvent.screenX,\n                    mouseEvent.screenY\n                )\n            )) {\n                this.canMoveRedObject = true;\n            }\n\n            if (this.canMoveRedObject) {\n\n            }\n        } else {\n            this.canMoveRedObject = false;\n        }\n\n        if (mouseEvent.screenX || mouseEvent.screenY) {\n            this.actor.solverObject.moveTo(\n                new Vec2(\n                    mouseEvent.screenX,\n                    mouseEvent.screenY\n                )\n            )\n        }\n    }\n\n    set canMoveRedObject(can: boolean) {\n        this._canMoveRedObject = can;\n        if (can) {\n            this.actor.renderItem.color = '#00ff00';\n        } else {\n            this.actor.renderItem.color = '#ff0000';\n        }\n    }\n\n    get canMoveRedObject(): boolean {\n        return this._canMoveRedObject;\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class CircleConstrain extends Constrain {\n    /**\n     *\n     * @type {Vec2}\n     */\n    center = Vec2.Zero();\n\n    radius = 0;\n\n    constructor(center, radius) {\n        super();\n\n        this.center = center;\n        this.radius = radius;\n    }\n\n    applyConstrain(obj) {\n        const toCenter = obj.currentPosition.diff(this.center);\n        const distance = toCenter.length;\n        const r = obj.radius || 0;\n\n        if (distance > (this.radius - r)) {\n            const n = toCenter.ort;\n            obj.moveTo(this.center.sum(n.mul(this.radius - r)));\n        }\n    }\n\n}","import {BaseScene} from \"./baseScene\";\nimport { Render} from \"../index\";\nimport {Circle} from \"../items/circle\";\nimport { CircleWithText } from \"../items/circleWithText\";\nimport {Vec2} from \"../vector/vec2\";\nimport {RenderableObject} from \"../renderableObjects/object\";\nimport { CircleConstrain } from \"../constrains/circle\";\nimport {ObjectsGenerator} from \"../generators/objectsGenerator\";\nimport {AnyUIEvent, UIMouseEvent} from \"../../host/input\";\nimport {BallsObject} from \"../objects/ball\";\nimport {index2color} from \"../items/utils/index2color\";\nimport {createTriangle} from \"../primitives/triangle\";\nimport {ImmovablePolygon} from \"../objects/ImmovablePolygon\";\nimport {Polygon} from \"../items/polygon\";\nimport {PolygonRainbow} from \"../items/polygonRainbow\";\n\ntype Scene3Actor = RenderableObject<ImmovablePolygon, Polygon>;\n\nexport class Scene3 extends BaseScene {\n    _createBalls: boolean = false;\n    timePassedSinceLastBallCreated: number = 0;\n    ballIndex: number = 0;\n    center: Vec2;\n    radius: number;\n    ballsViews: CircleWithText[] = [];\n\n    actor: Scene3Actor;\n\n    nextTickActorPosition: Vec2;\n\n    constructor(engine: Render) {\n        super(engine)\n\n        this.center = new Vec2(\n            this.engine.canvas.width / 2,\n            this.engine.canvas.height / 2\n        );\n\n        this.radius = Math.min(this.center.x, this.center.y);\n\n        this.generator = new ObjectsGenerator(this.engine.solver);\n        this.createActor();\n        this.initConstrain();\n    }\n\n    createBall() {\n        const baseBallVelocity = new Vec2(0, 0);\n        const ballGeneratorPoint = this.actor.solverObject.currentPosition;\n        const toCenter = ballGeneratorPoint.diff(this.center);\n        const n = toCenter.ort;\n\n        const ballVelocity = n.mul(-1);\n\n        const radius = 20 + Math.random() * 30;\n\n        const ballView =  new CircleWithText(\n            this.engine.context,\n            Vec2.Zero(),\n            radius,\n            index2color(this.ballIndex+200),\n            '',\n            '#000000'\n        );\n\n        this.ballsViews.push(ballView);\n\n        const obj = new RenderableObject<BallsObject, CircleWithText>(\n            (new BallsObject(\n                ballGeneratorPoint.diff(n.mul(40)),\n                radius\n            )).setVelocity(ballVelocity),\n            ballView\n        )\n\n        this.engine.addObject(obj);\n        this.ballIndex++;\n    }\n\n    createActor() {\n        const trianglePoints = createTriangle(60);\n\n        this.nextTickActorPosition = this.center;\n\n        const polygonObject = new ImmovablePolygon(\n            this.center,\n            trianglePoints\n        )\n\n        const polygonView = new PolygonRainbow(\n            this.engine.context,\n            Vec2.Zero(),\n            trianglePoints,\n            '#ff0000'\n        )\n\n        this.actor = new RenderableObject<ImmovablePolygon, Polygon>(\n            polygonObject,\n            polygonView\n        );\n\n        this.engine.addObject(this.actor);\n    }\n\n    initConstrain() {\n        this.engine.constrain = new CircleConstrain(\n            this.center,\n            this.radius\n        )\n\n        this.engine.items.push(\n            new Circle(\n                this.engine.context,\n                this.center,\n                this.radius,\n                '#555555'\n            )\n        );\n    }\n\n    getActor() {\n        return this.actor;\n    }\n\n    tick(timePassed: number) {\n        this.actor.solverObject.moveTo(\n            this.nextTickActorPosition\n        );\n\n        if (this.createBalls) {\n            this.timePassedSinceLastBallCreated += timePassed;\n\n            if(this.timePassedSinceLastBallCreated > 0.05) {\n                this.timePassedSinceLastBallCreated = 0;\n                this.createBall();\n            }\n        }\n\n        this.ballsViews.forEach((ballView: CircleWithText) => {\n            ballView.color = index2color(ballView.position.y)\n        });\n    }\n\n    processUserInput(event: AnyUIEvent) {\n        const mouseEvent = event as UIMouseEvent;\n\n        if (mouseEvent.leftButtonDown) {\n            if (this.actor.solverObject.isPointInsideObject(\n                new Vec2(\n                    mouseEvent.screenX,\n                    mouseEvent.screenY\n                )\n            )) {\n                this.createBalls = true;\n            }\n\n        } else {\n            this.createBalls = false;\n        }\n\n        if (mouseEvent.screenX || mouseEvent.screenY) {\n            this.nextTickActorPosition = new Vec2(\n                mouseEvent.screenX,\n                mouseEvent.screenY\n            )\n        }\n    }\n\n    set createBalls(can: boolean) {\n        this._createBalls = can;\n        if (can) {\n            this.actor.renderItem.color = '#00ff00';\n        } else {\n            this.actor.renderItem.color = '#ff0000';\n        }\n    }\n\n    get createBalls(): boolean {\n        return this._createBalls;\n    }\n}","import {Vec2} from \"../vector/vec2\";\n\nexport function createTriangle(size: number): Vec2[] {\n    const height = size * Math.sqrt(3) / 2;\n    const center = new Vec2(\n        size / 2,\n        size / 2 * (1 / Math.sqrt(3))\n    )\n    return [\n        new Vec2(-center.x, -center.y),\n        new Vec2(0, height - center.y),\n        new Vec2(center.x, -center.y)\n    ]\n}\n","import {ImmovableSolverObject} from \"./immovable\";\nimport {SolverObjectTypes} from \"./types\";\nimport {Vec2Line} from \"../vector/vec2Line\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {Vec2} from \"../vector/vec2\";\nimport {createImmovableLineFrom2Points, ImmovableLineObject} from \"./immovableLine\";\nimport {Vec2Math} from \"../vector/vec2Math\";\nimport {BaseRender} from \"../render/baseRender\";\nimport {Vec2Rect} from \"../vector/vec2Rect\";\n\nexport class ImmovablePolygon extends ImmovableSolverObject {\n    _localPoints: Vec2[] = [];\n    _lines: ImmovableLineObject[] = [];\n    _fixedPosition: Vec2;\n\n    type = SolverObjectTypes.TypeImmovablePolygon;\n    immovable = true;\n\n    bounceValue = 1;\n\n    constructor(position: Vec2, points: Vec2[]) {\n        super();\n\n        this.currentPosition = position.copy();\n        this.previousPosition = position.copy();\n\n        this._fixedPosition = position.copy();\n\n        points.forEach(point => {\n            this._localPoints.push(point.copy());\n        });\n        this._recreateLines();\n    }\n\n    private _recreateLines() {\n        const pointsToProcess = [...this._localPoints].reverse();\n        let firstPoint: Vec2 = pointsToProcess.shift();\n        let secondPoint: Vec2;\n        let lastPoint: Vec2 = firstPoint;\n\n        this._lines.splice(0, this._lines.length);\n\n        while (secondPoint = pointsToProcess.shift()) {\n            const line = createImmovableLineFrom2Points(\n                this._fixedPosition.sum(lastPoint),\n                this._fixedPosition.sum(secondPoint)\n            );\n\n            this._lines.push(line);\n\n            lastPoint = secondPoint;\n        }\n\n        const line = createImmovableLineFrom2Points(\n            this._fixedPosition.sum(lastPoint),\n            this._fixedPosition.sum(firstPoint)\n        )\n\n        this._lines.push(line);\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n    }\n\n    addToSpace(solverSpace: BaseSolverSpace) {\n        try {\n            this._lines.forEach((line: ImmovableLineObject) => line.addToSpace(solverSpace));\n        } catch (e) {\n            debugger\n            console.log(e, this._lines);\n        }\n    }\n\n    isPointInsideObject(point: Vec2): boolean {\n        return true;\n    }\n\n    moveBy(delta: Vec2) {\n        this._fixedPosition.addSelf(delta);\n        this._lines.forEach((line: ImmovableLineObject) => line.moveBy(delta));\n    }\n\n    moveTo(position: Vec2) {\n        const delta = Vec2Math.diff(position, this._fixedPosition);\n        this.moveBy(delta);\n    }\n\n    toString() {\n        return 'ImmovablePolygon';\n    }\n\n    debugRender(context: BaseRender) {\n        context.strokeStyle('#00FF00');\n        this._lines.forEach(line => line.debugRender(context));\n    }\n\n    get lines(): ImmovableLineObject[] {\n        return this._lines;\n    }\n\n    intersects(range: Vec2Rect): boolean {\n        return this._lines.some(line => line.intersects(range));\n    }\n\n    getCollisionRange(): Vec2Rect {\n        return new Vec2Rect(this.currentPosition, new Vec2(60, 60));\n    }\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\nimport {Vec2Line} from \"../vector/vec2Line\";\nimport {Polygon} from \"./polygon\";\nimport {index2color} from \"./utils/index2color\";\n\nexport class PolygonRainbow extends Polygon {\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\nimport {Vec2Line} from \"../vector/vec2Line\";\nimport {BaseRender} from \"../render/baseRender\";\n\nexport class Polygon extends Item {\n    direction = Vec2.Zero();\n    points: Vec2[];\n    color = '#00ff00';\n\n    constructor(renderer: BaseRender, position: Vec2, points: Vec2[], color) {\n        super(renderer, position);\n\n        this.points = points;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.renderer.strokeStyle(this.color);\n        this.renderer.polygon(this.points.map(point => point.sum(this.position)));\n    }\n}","export interface StatsItem {\n    key: string;\n    value: number;\n}\n\nexport interface StatsKeyData {\n    key: string;\n    total: number;\n    tick: number;\n}\n\nexport class Stats {\n    tickData: number[] = [];\n    totalData: number[] = [];\n    keys: Record<any, any>;\n\n    constructor() {\n        this.keys = new Map();\n    }\n\n    resetTick() {\n        this.tickData.forEach((value, index) => this.tickData[index] = 0);\n    }\n\n    writeStats(key, value) {\n        const index = this.registerKey(key);\n        this.tickData[index] = value;\n        this.totalData[index] = value;\n    }\n\n    addStats(key, value = 1) {\n        const index = this.registerKey(key);\n        this.tickData[index] += value;\n        this.totalData[index] += value;\n    }\n\n    registerKey(key) {\n        if (this.keys.has(key)) {\n            return this.keys.get(key)\n        }\n\n        this.tickData.push(0);\n        this.totalData.push(0);\n        this.keys.set(key, this.tickData.length - 1);\n        return this.tickData.length - 1;\n    }\n\n    getStats(key: string): StatsKeyData {\n        if (!this.keys.has(key)) {\n            return {\n                key,\n                total: 0,\n                tick: 0\n            }\n        }\n\n        const index = this.keys.get(key);\n\n        return {\n            key,\n            total: this.totalData[index],\n            tick: this.tickData[index]\n        }\n    }\n\n    getTickData(): StatsItem[] {\n        const result: StatsItem[] = [];\n\n        this.keys.forEach((index, key) => {\n            result.push({\n                key,\n                value: this.tickData[index]\n            })\n        })\n\n        return result;\n    }\n}","import {Vec2} from \"../vector/vec2\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {CollisionCell, GridSolverSpace} from \"./gridSolverSpace\";\nimport {BaseSolver} from \"./baseSolver\";\nimport {QuadTreeSolverSpace} from \"./quadTreeSolverSpace\";\nimport {BaseRender} from \"../render/baseRender\";\nimport {Vec2Rect} from \"../vector/vec2Rect\";\n\nexport class QuadTreeSolver extends BaseSolver {\n    gravity: Vec2 = Vec2.Zero();\n    space: QuadTreeSolverSpace;\n\n    constructor(worldSize, stats) {\n        super(worldSize, stats);\n        this.configure();\n    }\n\n    reset() {\n        super.reset();\n        this.space.clear();\n    }\n\n    configure() {\n        super.configure();\n        this.gravity = new Vec2(0, 100);\n\n        this.space = new QuadTreeSolverSpace(\n            this.worldSize.x,\n            this.worldSize.y\n        );\n    }\n\n    processOptimizations() {\n        this.space.clear();\n        this.objects.forEach((obj, index) => {\n            obj.addToSpace(this.space);\n            this.stats.addStats(`Solver object: ${obj.toString()}`)\n        });\n    }\n\n    applyForces() {\n        this.objects.forEach(obj => obj.accelerate(this.gravity))\n    }\n\n    processCollisions() {\n        this.objects.forEach(objA => {\n            const range = objA.getCollisionRange();\n            const possibleObjects = this.space.root.query(range);\n            this.stats.addStats('processCollisions.queryPossibleObjects.calls');\n            possibleObjects.forEach(objB => {\n                if (objA === objB) {\n                    return;\n                }\n\n                if (objA.immovable && objB.immovable) {\n                    return;\n                }\n\n                this.stats.addStats('processCollisions.calls');\n                objA.collide(objB);\n            })\n        });\n    }\n\n    debugRender(context: BaseRender) {\n        this.space.debugRender(context);\n        this.objects.forEach(object => object.debugRender(context))\n    }\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","import {BaseSolverSpace} from \"./baseSolverSpace\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {Vec2Rect} from \"../vector/vec2Rect\";\nimport {Vec2} from \"../vector/vec2\";\nimport {BaseRender} from \"../render/baseRender\";\nimport {ImmovableLineObject} from \"../objects/immovableLine\";\n\nexport class QuadTree {\n    boundary: Vec2Rect;\n    capacity: number;\n    objects: BaseSolverObject[];\n    divided: boolean = false;\n    minimumDiag: number = 10;\n    nodes: QuadTree[];\n\n    constructor(boundary: Vec2Rect, capacity: number) {\n        this.boundary = boundary.copy();\n        this.capacity = capacity;\n        this.objects = [];\n        this.nodes = [];\n        this.divided = false;\n    }\n\n    clear() {\n        if (this.objects.length > 0) {\n            this.objects.splice(0);\n        }\n        if (this.divided) {\n            this.nodes.forEach(node => node.clear());\n        }\n        this.divided = false;\n    }\n\n    get canSubdivide(): boolean {\n        return this.boundary.diag > this.minimumDiag;\n    }\n\n    insert(obj: BaseSolverObject): boolean {\n        if (!obj.inside(this.boundary)) {\n            return;\n        }\n\n        if (this.objects.length < this.capacity) {\n            this.objects.push(obj);\n            return true;\n        }\n\n        if (!this.canSubdivide) {\n            this.objects.push(obj);\n            return true;\n        }\n\n        if (!this.divided) {\n            this.subdivide();\n            this.divided = true;\n        }\n\n        let index = 0;\n        while (index < 4) {\n            if (this.nodes[index].insert(obj)) {\n                index = 5;\n            }\n\n            index++;\n        }\n\n        return index === 5;\n    }\n\n    subdivide() {\n        this.nodes[QuadTree.NW] = new QuadTree(this.boundary.nw, this.capacity);\n        this.nodes[QuadTree.NE] = new QuadTree(this.boundary.ne, this.capacity);\n        this.nodes[QuadTree.SE] = new QuadTree(this.boundary.se, this.capacity);\n        this.nodes[QuadTree.SW] = new QuadTree(this.boundary.sw, this.capacity);\n    }\n\n    query(range: Vec2Rect): BaseSolverObject[] {\n        let result = []\n        if (!this.boundary.intersect(range)) {\n            return result\n        }\n\n        this.objects.forEach(obj => {\n            if (obj.intersects(range)) {\n                result.push(obj);\n            }\n        });\n\n        if (this.divided) {\n            this.nodes.forEach(subTree => subTree.query(range).forEach(obj => result.push(obj)))\n        }\n\n        return result;\n    }\n\n    debugRender(render: BaseRender) {\n        render.strokeStyle(this.objects.length > 0 ? '#ff0000' : '#00ff00');\n\n        render.rect(\n            this.boundary.left,\n            this.boundary.top,\n            this.boundary.width-2,\n            this.boundary.height-2\n        )\n\n        if (this.divided) {\n            this.nodes.forEach(subTree => subTree.debugRender(render));\n        }\n    }\n\n    static NW = 0;\n    static NE = 1;\n    static SE = 2;\n    static SW = 3;\n}\n\nexport class QuadTreeSolverSpace extends BaseSolverSpace {\n    root: QuadTree;\n\n    constructor(width, height) {\n        super();\n\n        this.root = new QuadTree(\n            new Vec2Rect(\n                new Vec2(width / 2, height / 2),\n                new Vec2(width, height)\n            ),\n            4\n        );\n    }\n\n    clear() {\n        this.root.clear();\n    }\n\n    addObject(obj: BaseSolverObject) {\n        this.root.insert(obj);\n    }\n\n    addPointObject(worldX, worldY, obj: BaseSolverObject) {\n        this.root.insert(obj);\n    }\n\n    addRectangularObject(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject) {\n        this.root.insert(obj);\n    }\n\n    debugRender(render:BaseRender) {\n        this.root.debugRender(render);\n    }\n}","import {BaseRender} from \"./baseRender\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Canvas2DRender extends BaseRender {\n    private _context: CanvasRenderingContext2D;\n\n    constructor(context: CanvasRenderingContext2D) {\n        super();\n\n        this._context = context;\n    }\n\n    private getCoord(x?: number | Vec2 , y?: number): [number, number] {\n        let cx, cy;\n        if (x === undefined) {\n            cx = this._position.x;\n            cy = this._position.y;\n        } else if (x instanceof Vec2) {\n            cx = x.x;\n            cy = x.y;\n        } else {\n            cx = x;\n            cy = y;\n        }\n\n        return [cx, cy];\n    }\n\n    circle(radius: number, x?: number | Vec2 , y?: number) {\n        const [cx, cy] = this.getCoord(x, y);\n\n        this._context.beginPath()\n        this._context.arc(\n            cx,\n            cy,\n            radius,\n            0,\n            2 * Math.PI\n        )\n\n        this._context.stroke();\n    }\n\n    fillCircle(radius: number, x?: number | Vec2, y?: number) {\n        const [cx, cy] = this.getCoord(x, y);\n\n        this._context.beginPath()\n        this._context.arc(\n            cx,\n            cy,\n            radius,\n            0,\n            2 * Math.PI\n        )\n\n        this._context.fill();\n    }\n\n    color() {\n    }\n\n    fillStyle(style: string) {\n        this._context.fillStyle = style;\n    }\n\n    fillRect(x1: number, y1: number, x2: number, y2: number) {\n        this._context.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    line(x: number | Vec2, y?: number | Vec2, x2?: number, y2?: number) {\n\n        if (y instanceof Vec2) {\n            [x, y] = this.getCoord(x);\n            [x2, y2] = this.getCoord(y);\n        } else {\n            [x, y] = this.getCoord(x, y);\n        }\n\n        this._context.beginPath();\n        this._context.moveTo(x, y);\n        this._context.lineTo(x2, y2);\n        this._context.stroke();\n    }\n\n    vector(position: Vec2, direction: Vec2) {\n        this._context.beginPath();\n        this._context.moveTo(position.x, position.y);\n        this._context.lineTo(position.x + direction.x, position.y + direction.y);\n        this._context.stroke();\n    }\n\n    rect(x: number, y: number, width: number, height: number) {\n        this._context.strokeRect(x, y, width, height);\n    }\n\n    text(text: string, x?: number | Vec2 , y?: number) {\n        const [cx, cy] = this.getCoord(x, y);\n\n        this._context.fillStyle = \"#ffffff\";\n        this._context.textAlign = \"start\";\n        this._context.fillText(text, cx, cy);\n    }\n\n    moveTo() {\n    }\n\n    font(font: string) {\n        this._context.font = font;\n    }\n\n    lineTo(x: number | Vec2, y?: number) {\n        const [x2, y2] = this.getCoord(x, y);\n\n        this._context.moveTo(this._position.x, this._position.y);\n        this._context.lineTo(x2, y2);\n    }\n\n    strokeStyle(style: string) {\n        this._context.strokeStyle = style;\n    }\n\n    lineWidth(width: number) {\n        this._context.lineWidth = width;\n    }\n\n    polygon(worldPoints: Vec2[]) {\n        this._context.beginPath(); // Start a new path\n\n        let index = 0;\n        this._context.moveTo(worldPoints[index].x, worldPoints[index].y);\n        while(index < worldPoints.length - 1) {\n            index++;\n            this._context.lineTo(worldPoints[index].x, worldPoints[index].y);\n        }\n        this._context.lineTo(worldPoints[0].x, worldPoints[0].y);\n        this._context.stroke();\n    }\n}","import {Vec2} from \"../vector/vec2\";\n\nexport abstract class BaseRender {\n    protected _position: Vec2;\n\n    protected constructor() {\n        this._position = Vec2.Zero();\n    }\n\n    moveTo(x: number | Vec2, y?: number) {\n        this._position.moveTo(x, y);\n    }\n\n    abstract circle(radius: number, x?: number | Vec2 , y?: number);\n    abstract fillCircle(radius: number, x?: number | Vec2 , y?: number);\n    abstract rect(x: number, y: number, width: number, height: number);\n    abstract fillRect(x1: number, y1: number, x2: number, y2: number);\n    abstract lineTo(x: number | Vec2, y?: number);\n    abstract line(x: number | Vec2, y?: number | Vec2, x2?: number, y2?: number);\n    abstract polygon(worldPoints: Vec2[]);\n    abstract vector(position: Vec2, direction: Vec2);\n    abstract color();\n    abstract fillStyle(style: string);\n    abstract strokeStyle(style: string);\n    abstract lineWidth(width: number);\n    abstract text(text: string, x?: number | Vec2 , y?: number);\n    abstract font(font: string);\n}"],"names":[],"version":3,"file":"index.059c6d4a.js.map","sourceRoot":"/__parcel_source_root/"}