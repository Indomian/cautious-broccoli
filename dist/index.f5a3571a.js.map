{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-1fb00efa9d0fa29d.js","src/utils/onReady.js","src/utils/getElement.js","node_modules/@swc/helpers/src/_define_property.mjs","src/render/vector/exceptions.ts","src/render/vector/vec2Math.ts","src/render/vector/math.ts","src/render/vector/vec2.ts","src/render/items/item.js","src/render/items/circle.js","src/render/vector/vec2Line.ts","src/render/objects/types.ts","src/render/objects/collisionModels.js","src/render/objects/object.ts","src/render/objects/ball.ts","src/render/constrains/constrain.js","src/render/constrains/viewport.js","src/render/constrains/circle.js","src/render/objectsGenerator.js","src/render/mappedObjectsGenerator.js","src/render/totalObjectsGenerator.js","src/render/grid.ts","src/render/solver.ts","src/render/items/rect.js","src/render/renderableObjects/object.js","src/render/objects/immovableBall.ts","src/render/renderableObjects/immovableLine.js","src/render/objects/immovableLine.ts","src/render/items/line.js","src/render/items/circleWithText.js","src/render/items/frame.js","src/render/index.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-00da8f0af75b5284.js","src/host/main.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5d7Nu\\\":\\\"index.f5a3571a.js\\\",\\\"gVigP\\\":\\\"main.e7ad44ea.js\\\"}\"));","const DOCUMENT_STATE_LOADING = \"loading\";\n\n/**\n * Calls function when webpage is ready\n * @param {function} callback\n */\nexport function onReady(callback) {\n    if (document.readyState !== DOCUMENT_STATE_LOADING) {\n        callback();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    }\n}\n","export class ElementNotFound extends Error {}\n\nexport function getElement(selector) {\n    const element = document.querySelector(selector);\n    if (!element) {\n        throw new ElementNotFound(selector);\n    }\n\n    return element;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export class Vec2Exception extends Error {}\n\nexport class Vec2ExceptionParallel extends Vec2Exception {}\nexport class Vec2ExceptionNoPerpendicularVectorToZeroVector extends Vec2Exception {}","import { Vec2 } from \"./vec2\";\nimport { Vec2ExceptionParallel } from \"./exceptions\";\nimport { Vec2Line } from \"./vec2Line\";\n\nexport class Vec2Math {\n    static diff(vec1: Vec2, vec2: Vec2): Vec2 {\n        return new Vec2(vec1.x - vec2.x, vec1.y - vec2.y);\n    }\n\n    static mul(vec1: Vec2, scalar: number): Vec2 {\n        return new Vec2(vec1.x * scalar, vec1.y * scalar);\n    }\n\n    /**\n     * Calculates distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length;\n    }\n\n    /**\n     * Calculates square of distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance2(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length2;\n    }\n\n    /**\n     * Finds intersection between 2 lines\n     * @param {Vec2Line} line1\n     * @param {Vec2Line} line2\n     * @returns {Vec2}\n     */\n    static intersect(line1, line2) {\n        if (line1.K === line2.K) {\n            throw new Vec2ExceptionParallel()\n        }\n\n        if (isNaN(line1.K) || isNaN(line2.K)) {\n            // One of two lines is vertical\n            if (isNaN(line1.K)) {\n                return line2.makeVec2FromX(line1._vec1.x);\n            } else {\n                return line1.makeVec2FromX(line2._vec1.x);\n            }\n        } else {\n            const x = (line1.B - line2.B) / (line2.K - line1.K);\n            return line1.makeVec2FromX(x);\n        }\n    }\n\n    /**\n     * Dot product of 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static dot(vec1: Vec2, vec2: Vec2): number {\n        return vec1.x * vec2.x + vec1.y * vec2.y;\n    }\n\n    /**\n     *\n     * @param {Vec2} vec\n     * @param {Vec2Line} line\n     * @returns {Vec2}\n     */\n    static mirror(vec: Vec2, line: Vec2Line) {\n        const normal = line.direction.perpendicular;\n        return vec.diff(\n            normal.mul(2 * Vec2Math.dot(vec, normal))\n        );\n    }\n\n    static scale(vec1: Vec2, vec2: Vec2) {\n        return new Vec2(\n            vec1.x / vec2.x,\n            vec1.y / vec2.y\n        )\n    }\n}\n","export const MATH_ERROR = 0.000001;\nexport const MATH_ERROR2 = MATH_ERROR * MATH_ERROR;\nexport const SQRT2 = Math.sqrt(2);\n\n/**\n * Checks if a equals b with given error\n * @param {number} a\n * @param {number} b\n * @param {number} error\n * @returns {boolean}\n */\nexport function isEqual(a, b, error) {\n    return Math.abs(a - b) < error;\n}\n\nexport type NullableNumber = number | null;\n","import { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR2, NullableNumber } from \"./math\";\nimport { Vec2ExceptionNoPerpendicularVectorToZeroVector } from \"./exceptions\";\n\nexport class Vec2 {\n    private _x: number = 0;\n    private _y: number = 0;\n    private _length: NullableNumber = null;\n    private _length2: NullableNumber = null;\n\n    static lengthCallsCount = 0;\n    static length2CallsCount = 0;\n\n    constructor(x: number, y: number, l?: number) {\n        this._x = x;\n        this._y = y;\n\n        if (l) {\n            this._length = l;\n            this._length2 = l * l;\n        }\n    }\n\n    get x(): number {\n        return this._x;\n    }\n\n    get y(): number {\n        return this._y;\n    }\n\n    set x(x: number) {\n        this._x = x;\n        this._length = null;\n    }\n\n    set y(y:number) {\n        this._y = y;\n        this._length = null;\n    }\n\n    get length(): number {\n        if (this._length === null) {\n            this._length = Math.sqrt(this.x*this.x + this.y*this.y);\n            Vec2.lengthCallsCount++;\n        }\n\n        return this._length;\n    }\n\n    /**\n     * Returns length^2\n     */\n    get length2(): number {\n        if (this._length2 === null) {\n            this._length2 = this._x*this._x + this._y*this._y;\n            Vec2.length2CallsCount++;\n        }\n\n        return this._length2;\n    }\n\n    /**\n     * Adds vec2 to current vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    addSelf(vec2: Vec2): Vec2 {\n        this._x += vec2.x;\n        this._y += vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Subtract from current vector given vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    subSelf(vec2: Vec2): Vec2 {\n        this._x -= vec2.x;\n        this._y -= vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Flips along X axis\n     * @returns {Vec2}\n     */\n    flipYSelf(): Vec2 {\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Flips along Y axis\n     * @returns {Vec2}\n     */\n    flipXSelf(): Vec2 {\n        this._x = -this._x;\n        return this;\n    }\n\n    flipSelf(): Vec2 {\n        this._x = -this._x;\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Checks if this vector equals given vector using global MATH_ERROR const\n     * @param vec2\n     */\n    equals(vec2) {\n        return Vec2Math.distance2(this, vec2) < MATH_ERROR2;\n    }\n\n    /**\n     * Sums current vector and given vector and returns new vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sum(vec2: Vec2): Vec2 {\n        return new Vec2(this.x + vec2.x, this.y + vec2.y);\n    }\n\n    /**\n     * Calculate difference between current vector and given vector and returns\n     * new vector\n     *\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    diff(vec2: Vec2) {\n        return new Vec2(this.x - vec2.x, this.y - vec2.y);\n    }\n\n    /**\n     * Multiplicates vector by number\n     * @param {number} value\n     * @returns {Vec2}\n     */\n    mul(value: number) {\n        return new Vec2(this.x * value, this.y * value);\n    }\n\n    copy() {\n        return new Vec2(this.x, this.y);\n    }\n\n    applySelf(callback): Vec2 {\n        this.x = callback(this.x);\n        this.y = callback(this.y);\n        return this;\n    }\n\n    /**\n     * Returns normalized vector\n     * @returns {Vec2}\n     */\n    get ort() {\n        const l = this.length;\n        return new Vec2(this.x / l, this.y / l, 1);\n    }\n\n    get perpendicular() {\n        if (this.x === 0) {\n            // Vertical\n            if (this.y > 0) {\n                return Vec2.Horizontal().ort\n            } else if (this.y < 0) {\n                return Vec2.Horizontal().ort.flipSelf();\n            } else {\n                throw new Vec2ExceptionNoPerpendicularVectorToZeroVector();\n            }\n        } else if (this.y === 0) {\n            // Horizontal\n            if (this.x > 0) {\n                return Vec2.Vertical().ort\n            } else if (this.x < 0) {\n                return Vec2.Vertical().ort.flipSelf();\n            }\n        }\n\n        return new Vec2(\n            -this.y / this.x,\n            1\n        ).ort;\n    }\n\n    static Zero() {\n        return new Vec2(0, 0);\n    }\n\n    static Horizontal() {\n        return new Vec2(1, 0);\n    }\n\n    static Vertical() {\n        return new Vec2(0, 1);\n    }\n}\n\n\n\n\n\n\n\n\n","import {Vec2} from \"../vector/vec2\";\n\nexport class Item {\n    position = Vec2.Zero();\n\n    /**\n     *\n     * @param {CanvasRenderingContext2D} context\n     */\n    constructor(context, position) {\n        this.context = context;\n        this.position = position;\n    }\n\n    render() {\n\n    }\n}","import {Item} from \"./item\";\n\nexport class Circle extends Item {\n    r = 0;\n    color = '#00ff00';\n\n    constructor(context, position, r, color) {\n        super(context, position);\n\n        if (r) {\n            this.r = r;\n        }\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.beginPath()\n        this.context.arc(\n            this.position.x,\n            this.position.y,\n            this.r,\n            0,\n            2 * Math.PI\n        )\n\n        this.context.fillStyle = this.color;\n        this.context.fill();\n    }\n}","import { Vec2 } from \"./vec2\";\nimport { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR, isEqual } from \"./math\";\n\nexport class Vec2Line {\n    private _vec1: Vec2 = Vec2.Zero();\n    private _vec2: Vec2 = Vec2.Zero();\n\n    private _direction: Vec2;\n    private _ort: Vec2;\n\n    private _length: number;\n    private _length2: number;\n\n    /**\n     * Y = K*X + B\n     * @type {number}\n     */\n    private _k: number = 0;\n    private _b: number = 0;\n\n    constructor(vec1, vec2) {\n        this._vec1 = vec1;\n        this._vec2 = vec2;\n\n        this._direction = Vec2Math.diff(this._vec1, this._vec2);\n        this._length = this._direction.length;\n        this._length2 = this._direction.length2;\n        this._ort = this._direction.ort;\n\n        this.calculateKB();\n    }\n\n    /**\n     * Determines if given point lays on the line\n     * @param vec\n     * @returns {boolean}\n     */\n    inBetween(vec) {\n        const l1 = Vec2Math.diff(vec, this._vec1).length;\n        const l2 = Vec2Math.diff(this._vec2, vec).length;\n        const sum = l1 + l2;\n\n\n\n        return isEqual(this._length, sum, MATH_ERROR);\n    }\n\n    calculateKB() {\n        if (this._vec1.y === this._vec2.y) {\n            // Horizontal line\n            this._b = this._vec1.y;\n            this._k = 0;\n        } else if (this._vec1.x === this._vec2.x) {\n            // Vertical line\n            this._b = NaN;\n            this._k = NaN;\n        } else {\n            this._b = (this._vec1.x * this._vec2.y - this._vec1.y * this._vec2.x) / (this._vec1.x - this._vec2.x)\n            this._k = (this._vec1.y - this._vec2.y) / (this._vec1.x - this._vec2.x);\n        }\n    }\n\n    makeVec2FromX(x) {\n        return new Vec2(x, this._k * x + this._b);\n    }\n\n    copy() {\n        return new Vec2Line(\n            this._vec1,\n            this._vec2\n        )\n    }\n\n    moveBy(vec) {\n        this._vec1.addSelf(vec);\n        this._vec2.addSelf(vec);\n        this.calculateKB();\n    }\n\n    getPointProjection(vec) {\n        const a = this.direction;\n        const b = Vec2Math.diff(vec, this._vec1);\n        const cosabD = Vec2Math.dot(a, b) / (this.length);\n\n        return this._vec1.sum(\n            this.ort.mul(cosabD)\n        );\n    }\n\n    get B() {\n        return this._b;\n    }\n\n    get K() {\n        return this._k;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    get direction() {\n        return this._direction;\n    }\n\n    get ort() {\n        return this._ort;\n    }\n\n    get vec1() {\n        return this._vec1;\n    }\n\n    get vec2() {\n        return this._vec2;\n    }\n\n    static Vertical(x) {\n        return new Vec2Line(\n            new Vec2(x, 0),\n            new Vec2(x, Number.MAX_SAFE_INTEGER)\n        )\n    }\n\n    static Horizontal(y) {\n        return new Vec2Line(\n            new Vec2(0, y),\n            new Vec2(Number.MAX_SAFE_INTEGER, y)\n        )\n    }\n}","export enum SolverObjectTypes {\n    TypeNull = 0,\n    TypeBall = 1,\n    TypeImmovableBall = 2,\n    TypeImmovableLine = 3\n}\n","import {Vec2Math} from \"../vector/vec2Math\";\nimport {BallsObject} from \"./ball\";\nimport {SolverObjectTypes, TYPE_BALL, TYPE_IMMOVABLE_BALL, TYPE_IMMOVABLE_LINE} from \"./types\";\n\n/**\n * Collision between 2 balls objects\n * @param {BallsObject} obj1\n * @param {BallsObject} obj2\n */\nexport function collideBallAndBall(obj1, obj2) {\n    const between = Vec2Math.diff(obj1.currentPosition, obj2.currentPosition);\n    const distance = between.length;\n    const requiredDistance = obj1.radius + obj2.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        obj1.currentPosition.addSelf(Vec2Math.mul(normalized, obj1.radius / requiredDistance * delta * obj1.bounceValue));\n        obj2.currentPosition.subSelf(Vec2Math.mul(normalized, obj2.radius / requiredDistance * delta * obj2.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable ball\n * @param {BallsObject} ball\n * @param {ImmovableBallsObject} immovable\n */\nexport function collideBallAndImmovableBall(ball, immovable) {\n    const between = Vec2Math.diff(\n        ball.currentPosition,\n        immovable.currentPosition\n    );\n\n    const distance = between.length;\n    const requiredDistance = ball.radius + immovable.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        ball.currentPosition.addSelf(Vec2Math.mul(normalized, ball.radius / requiredDistance * delta * ball.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovableLineObject} line\n */\nexport function collideBallAndImmovableLine(ball, line) {\n    try {\n        const projectionPoint = line._line.getPointProjection(ball.currentPosition);\n\n        if (line._line.inBetween(projectionPoint)) {\n            const between = Vec2Math.diff(\n                projectionPoint,\n                ball.currentPosition\n            )\n\n            if (between.length < ball.radius) {\n                const normalized = between.ort;\n\n                const delta = ball.radius - between.length;\n\n                ball.currentPosition.subSelf(\n                    Vec2Math.mul(normalized, delta * ball.bounceValue)\n                )\n            }\n        }\n    } catch (e) {\n    }\n}\n\nfunction flipObjects(obj1, obj2) {\n    return {\n        a: obj2,\n        b: obj1\n    }\n}\n\nexport function collide(a, b) {\n    let obj1 = a;\n    let obj2 = b;\n    if (obj1.type > obj2.type) {\n        const flipped = flipObjects(obj1, obj2);\n        obj1 = flipped.a;\n        obj2 = flipped.b\n    }\n\n    switch (true) {\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeBall:\n            return collideBallAndBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableBall:\n            return collideBallAndImmovableBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableLine:\n            return collideBallAndImmovableLine(obj1, obj2);\n        default:\n            return;\n    }\n}","import {SolverObjectTypes} from \"./types\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class BaseSolverObject {\n    readonly type: SolverObjectTypes = SolverObjectTypes.TypeNull;\n    readonly index: number;\n    readonly immovable: boolean;\n\n    previousPosition = Vec2.Zero();\n    currentPosition = Vec2.Zero();\n\n    constructor() {\n        this.index = BaseSolverObject.index++;\n    }\n\n    update(step) {\n\n    }\n\n    accelerate(acc) {\n\n    }\n\n    collide(obj) {\n\n    }\n\n    addToGrid(collisionGrid) {\n\n    }\n\n    static index = 0;\n}\n","import { Vec2 } from \"../vector/vec2\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport { Vec2Math } from \"../vector/vec2Math\";\nimport {SolverObjectTypes} from \"./types\";\nimport { collide } from \"./collisionModels\";\nimport {BaseSolverObject} from \"./object\";\nimport {CollisionGrid} from \"../grid\";\n\nexport class BallsObject extends BaseSolverObject {\n    acc = Vec2.Zero();\n\n    radius = 10;\n    bounceValue = 1.1;\n\n    type = SolverObjectTypes.TypeBall;\n    immovable = false;\n\n    /**\n     * Creates balls object\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super();\n        this.previousPosition = position.copy();\n        this.currentPosition = position.copy();\n        if (radius !== undefined) {\n            this.radius = radius\n        }\n    }\n\n    /**\n     * Updates state of object\n     * @param {number} step\n     */\n    update(step) {\n        const velocity = this.velocity;\n        this.previousPosition = this.currentPosition.copy();\n        this.currentPosition.addSelf(\n            velocity.addSelf(\n                this.acc.mul(step * step)\n            )\n        )\n        this.acc = Vec2.Zero();\n    }\n\n    accelerate(acc) {\n        this.acc.addSelf(acc);\n        return this;\n    }\n\n    setVelocity(vel) {\n        this.velocity = vel;\n        return this;\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    collide(obj) {\n        collide(this, obj)\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        collisionGrid.addObject(\n            Math.floor(this.currentPosition.x),\n            Math.floor(this.currentPosition.y),\n            this\n        )\n    }\n\n    get velocity() {\n        return Vec2Math.diff(\n            this.currentPosition,\n            this.previousPosition\n        );\n    }\n\n    set velocity(v) {\n        this.previousPosition = Vec2Math.diff(this.currentPosition,v);\n    }\n\n    /**\n     *\n     * @returns {Vec2Line}\n     */\n    get movementVector() {\n        return new Vec2Line(this.previousPosition, this.currentPosition);\n    }\n}","export class Constrain {\n    constructor() {\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    applyConstrain(obj) {\n\n    }\n}","import { Constrain } from \"./constrain\";\n\nexport class ViewportConstrain extends Constrain {\n    _width = 0;\n    _height = 0;\n\n    constructor(width, height) {\n        super()\n        this.width = width;\n        this.height = height;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    set width(width) {\n        this._width = width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    set height(height) {\n        this._height = height;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        if (obj.currentPosition.x - obj.radius < 0) {\n            obj.currentPosition.x = obj.radius;\n        }\n\n        if (obj.currentPosition.x + obj.radius > this._width) {\n            obj.currentPosition.x = this._width - obj.radius;\n        }\n\n        if (obj.currentPosition.y - obj.radius < 0) {\n            obj.currentPosition.y = obj.radius;\n        }\n\n        if (obj.currentPosition.y + obj.radius > this._height) {\n            obj.currentPosition.y = this._height - obj.radius;\n        }\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class CircleConstrain extends Constrain {\n    /**\n     *\n     * @type {Vec2}\n     */\n    center = Vec2.Zero();\n\n    radius = 0;\n\n    constructor(center, radius) {\n        super();\n\n        this.center = center;\n        this.radius = radius;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        const toCenter = obj.currentPosition.diff(this.center);\n        const distance = toCenter.length;\n        const r = obj.radius;\n\n        if (distance > (this.radius - r)) {\n            const n = toCenter.ort;\n            obj.currentPosition = this.center.sum(\n                n.mul(this.radius - r)\n            );\n        }\n    }\n\n}","export class ObjectsGenerator {\n    solver = null;\n    constructor(solver) {\n        this.solver = solver;\n    }\n\n    // TODO Make me iterator\n    getNextObject(step) {\n        return null;\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\n\nexport class MappedObjectGeneratorItem {\n    /**\n     * Delay before object appear\n     * @type {number}\n     */\n    timeout;\n\n    /**\n     * Object configuration\n     * @type {BallsObject}\n     */\n    object;\n\n    constructor(timeout, object) {\n        this.timeout = timeout;\n        this.object = object;\n    }\n\n}\n\nexport class MappedObjectsGenerator extends ObjectsGenerator {\n    /**\n     * @param {MappedObjectGeneratorItem[]} map\n     */\n    constructor(solver, map) {\n        super(solver);\n\n        this.items = map;\n        this.currentTime = 0;\n    }\n\n    getNextObject(step) {\n        this.currentTime += step;\n\n        console.log(this.currentTime)\n\n        const index = this.items.findIndex((item) => item.timeout < this.currentTime);\n        if (index > -1) {\n            return this.items.splice(index, 1)[0].object;\n        }\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\nexport class TotalObjectsGenerator extends ObjectsGenerator {\n    constructor(solver, count, delay, createCallback) {\n        super(solver);\n        this.limit = count;\n        this.total = 0;\n\n        this.delay = delay;\n        this.create = createCallback;\n        this.lastCreateTime = 0;\n    }\n\n    getNextObject(step) {\n        if (this.total > this.limit) {\n            return;\n        }\n\n        this.lastCreateTime += 1;\n        if (this.lastCreateTime > this.delay) {\n            const newItem = this.create(this.total);\n            this.lastCreateTime = 0;\n            this.total++;\n\n            return newItem;\n        }\n    }\n}","import { Vec2 } from \"./vector/vec2\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {Vec2Math} from \"./vector/vec2Math\";\n\nexport class CollisionCell {\n    objects: BaseSolverObject[] = [];\n    hightlight: boolean = false;\n\n    addObject(obj) {\n        this.objects.push(obj);\n    }\n\n    clear() {\n        this.objects = [];\n        this.hightlight = false;\n    }\n\n    remove(index) {\n        const objectIndex = this.objects.findIndex(obj => obj.index === index);\n        if (objectIndex !== -1) {\n            this.objects.splice(objectIndex, 1);\n        }\n    }\n\n    get count() {\n        return this.objects.length;\n    }\n}\n\ntype CollisionGridForEachCallback = (x: number, y: number, cell: CollisionCell, index?: number) => void;\n\nexport class CollisionGrid {\n    cells: CollisionCell[] = [];\n    _width: number;\n    _height: number;\n    _size: number;\n    cellSize: Vec2;\n\n    constructor(width, height, cellSize: Vec2) {\n        this._width = width;\n        this._height = height;\n\n        this.cellSize = cellSize;\n\n        this.resize();\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    set width(w: number) {\n        this._width = w;\n        this.resize();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    set height(h: number) {\n        this._height = h;\n        this.resize();\n    }\n\n    resize() {\n        this.cells = [];\n        this._size = this._width * this._height;\n        for (let i = 0; i < this._size; i++) {\n            this.cells.push(new CollisionCell());\n        }\n    }\n\n    addObject(worldX, worldY, obj) {\n        const x = Math.floor(worldX / this.cellSize.x);\n        const y = Math.floor(worldY / this.cellSize.y);\n\n        const index = x * this.width + y;\n        if (isNaN(index) || index >= this.size || index < 0) {\n\n        } else {\n            this.cells[index].addObject(obj);\n        }\n    }\n\n    makeIndexFromVec(vec) {\n        return vec.x * this.width + vec.y;\n    }\n\n    makeIndexFromCoord(x, y) {\n        return x * this.width + y;\n    }\n\n    /**\n     * Adds object to all cells between given coords\n     * @param worldLeftTop\n     * @param worldRightBottom\n     * @param obj\n     */\n    addObjectToCells(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject) {\n        const point1 = Vec2Math.scale(worldLeftTop, this.cellSize).applySelf(Math.floor);\n        const point2 = Vec2Math.scale(worldRightBottom, this.cellSize).applySelf(Math.floor);\n\n        const index1 = this.makeIndexFromVec(point1);\n        const index2 = this.makeIndexFromVec(point2);\n\n        if (point1.x === point2.x) {\n            // Vertical\n            for (let cellIndex = index1; cellIndex < index2; cellIndex++) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else if (point1.y === point2.y) {\n            // Horizontal\n            for (let cellIndex = index1; cellIndex < index2; cellIndex+=this.height) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else {\n            let left = Math.min(point1.x, point2.x);\n            let top = Math.min(point1.y, point2.y);\n            let right = Math.max(point1.x, point2.x);\n            let bottom = Math.max(point1.y, point2.y);\n            let height = bottom - top;\n            let startFrom = this.makeIndexFromCoord(left, top);\n\n            for (let x = 0; x <= right-left; x++) {\n                for (let y = 0; y <= height; y++) {\n                    const cellIndex= startFrom + x * this.height + y;\n                    this.cells[cellIndex].addObject(obj)\n                }\n            }\n        }\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            this.cells[i].clear();\n        }\n    }\n\n    forEach(callback: CollisionGridForEachCallback) {\n        this.cells.forEach((cell, index) => {\n            const x = Math.floor(index / this.width);\n            const y = index - x * this.width;\n            callback(x, y, cell, index);\n        })\n    }\n\n    hasCell(index, dt) {\n        if (index < 0 || index >= this.size) {\n            return false;\n        }\n\n        const x = Math.floor(index / this.width);\n        const y = index - x * this.width;\n\n        if (y <= 0 && dt < 0) {\n            // TOP CELL\n            return false;\n        }\n\n        if (y === this.height - 1 && dt > 0) {\n            // Bottom cell\n            return  false;\n        }\n\n        if (x === 0 && dt < 0) {\n            // left cell\n            return false;\n        }\n\n        if (x >= this.width - 1 && dt > 0) {\n            // right cell;\n            return false;\n        }\n\n        return true;\n    }\n}\n","import {Vec2} from \"./vector/vec2\";\nimport {BallsObject} from \"./objects/ball\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {Constrain} from \"./constrains/constrain\";\nimport {CollisionCell, CollisionGrid} from \"./grid\";\n\nexport class Solver {\n    objects: BaseSolverObject[] = []\n    constrains: Constrain = null;\n    gravity: Vec2 = Vec2.Zero();\n    subSteps: number = 4;\n    useFixedTime: boolean = true;\n    step: number;\n    collisionGrid: CollisionGrid;\n    worldSize: Vec2;\n\n    cellSize: Vec2;\n\n    constructor(worldSize) {\n        this.objects = [];\n        this.worldSize = worldSize.copy();\n\n        this.configure();\n    }\n\n    configure() {\n        this.gravity = new Vec2(0, 100);\n\n        this.useFixedTime = true;\n        this.step = 0.017 / this.subSteps;\n\n        const grids = 30;\n\n        this.cellSize = new Vec2(\n            this.worldSize.x / grids,\n            this.worldSize.y / grids\n        );\n\n        this.collisionGrid = new CollisionGrid(\n            grids, grids,\n            this.cellSize\n        )\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n    }\n\n    /**\n     * Update the simulation by given step.\n     * @param {number} time amount of seconds passed since last update.\n     */\n    update(time) {\n        const subTime = this.useFixedTime ? this.step : time / this.subSteps;\n        for (let i = 0; i < this.subSteps; i++) {\n            this.addObjectsToGrid();\n            this.processCollisions();\n            this.applyGravity();\n            this.updateObjects(subTime);\n            this.applyConstrains();\n        }\n    }\n\n    addObjectsToGrid() {\n        this.collisionGrid.clear();\n        this.objects.forEach((obj, index) => {\n            obj.addToGrid(this.collisionGrid);\n        });\n    }\n\n    /**\n     * Update objects state\n     * @param {number} time amount of seconds passed since last update\n     */\n    updateObjects(time) {\n        this.objects.forEach(obj => obj.update(time))\n    }\n\n    applyGravity() {\n        this.objects.forEach(obj => obj.accelerate(this.gravity))\n    }\n\n    applyConstrains() {\n        this.objects.forEach(obj => this.constrains.applyConstrain(obj))\n    }\n\n    processCollisionsInCell(objA: BaseSolverObject, cell: CollisionCell) {\n        cell.objects.forEach(objB => {\n            if (objA === objB) {\n                return;\n            }\n\n            if (objA.immovable && objB.immovable) {\n                return;\n            }\n\n            objA.collide(objB);\n        })\n    }\n\n    processCell(index: number) {\n        this.collisionGrid.cells[index].objects.forEach(objA => {\n            this.processCollisionsInCell(objA, this.collisionGrid.cells[index]); // SELF\n\n            if (this.collisionGrid.hasCell(index, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - 1]); // TOP\n            }\n\n            if (this.collisionGrid.hasCell(index, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + 1]); // BOTTOM\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height - 1]); // RIGHT TOP\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, 0)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height]); // RIGHT\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height + 1]); // RIGHT BOTTOM\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height - 1]); // LEFT TOP\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, 0)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height]); // LEFT\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height + 1]); // LEFT BOTTOM\n            }\n        })\n    }\n\n    processCollisions() {\n        for (let index = 0; index < this.collisionGrid.size; index++) {\n            this.processCell(index);\n        }\n    }\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Rect extends Item {\n    size = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, size, color) {\n        super(context, position);\n\n        this.size = size;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.fillStyle = this.color;\n        this.context.fillRect(\n            this.position.x,\n            this.position.y,\n            this.position.x + this.size.x,\n            this.position.y + this.size.y\n        )\n    }\n}","export class RenderableObject {\n    /**\n     * @type {BallsObject}\n     */\n    ballsObject = null;\n\n    /**\n     * @type {Item}\n     */\n    renderItem = null;\n\n    constructor(ballsObject, renderItem) {\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        this.renderItem.position = this.ballsObject.currentPosition;\n    }\n\n    render() {\n        this.update();\n        this.renderItem.render();\n    }\n}","import {BallsObject} from \"./ball\";\nimport {SolverObjectTypes} from \"./types\";\nimport {CollisionGrid} from \"../grid\";\nimport {SQRT2} from \"../vector/math\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class ImmovableBallsObject extends BallsObject {\n    type = SolverObjectTypes.TypeImmovableBall;\n    immovable = true;\n\n    /**\n     * @type {Vec2}\n     * @private\n     */\n    _fixedPosition = null;\n\n    /**\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super(position, radius);\n        this._fixedPosition = position.copy();\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        const vec = new Vec2(\n            this.radius * SQRT2,\n            this.radius * SQRT2\n        )\n\n        const leftTop = this.currentPosition.sum(vec);\n        const rightBottom = this.currentPosition.diff(vec);\n\n        collisionGrid.addObjectToCells(\n            leftTop,\n            rightBottom,\n            this\n        );\n    }\n}","import {RenderableObject} from \"./object\";\n\nexport class ImmovableLineRenderableObject extends RenderableObject {\n    /**\n     * @type {ImmovableLineObject}\n     */\n    ballsObject = null;\n\n    constructor(ballsObject, renderItem) {\n        super(ballsObject);\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        super.update();\n        this.renderItem.direction = this.ballsObject._direction;\n    }\n}","import { BallsObject } from \"./ball\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport {SolverObjectTypes} from \"./types\";\nimport {CollisionGrid} from \"../grid\";\n\nexport class ImmovableLineObject extends BallsObject {\n    _direction;\n    _line;\n\n    type = SolverObjectTypes.TypeImmovableLine;\n    immovable = true;\n\n    constructor(position, direction) {\n        super(position, 0);\n        this._direction = direction;\n\n        this._line = new Vec2Line(\n            this.currentPosition.copy(),\n            this.currentPosition.copy().sum(this._direction)\n        )\n    }\n\n    update(step) {\n        this.currentPosition = this._line._vec1;\n        this.previousPosition = this._line._vec2;\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        collisionGrid.addObjectToCells(\n            this._line._vec1,\n            this._line._vec2,\n            this\n        );\n    }\n\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Line extends Item {\n    direction = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, direction, color) {\n        super(context, position);\n\n        this.direction = direction;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.beginPath(); // Start a new path\n        this.context.moveTo(this.position.x, this.position.y);\n        this.context.lineTo(\n            this.position.x + this.direction.x,\n            this.position.y + this.direction.y\n        );\n        this.context.stroke(); // Render the path\n    }\n}","import {Circle} from \"./circle\";\n\nexport class CircleWithText extends Circle {\n    text = '';\n    textColor = '#ffffff';\n\n    constructor(context, position,r, color, text, textColor) {\n        super(context, position, r, color);\n        this.text = text;\n        if (textColor) {\n            this.textColor = textColor;\n        }\n    }\n\n    render() {\n        super.render();\n        this.context.fillStyle = this.textColor;\n        this.context.textBaseline = \"middle\";\n        this.context.textAlign = \"center\";\n        this.context.fillText(this.text, this.position.x, this.position.y);\n    }\n}","import {Rect} from \"./rect\";\n\nexport class Frame extends Rect {\n    constructor(context, position, size, color) {\n        super(context, position, size, color);\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.strokeRect(\n            this.position.x,\n            this.position.y,\n            this.size.x,\n            this.size.y\n        )\n    }\n}","import {Circle} from \"./items/circle\";\nimport {Vec2} from \"./vector/vec2\";\nimport {Vec2Math} from \"./vector/vec2Math\";\nimport {BallsObject} from \"./objects/ball\";\nimport {ViewportConstrain} from \"./constrains/viewport\";\nimport {CircleConstrain} from \"./constrains/circle\";\nimport {MappedObjectGeneratorItem, MappedObjectsGenerator} from \"./mappedObjectsGenerator\";\nimport {TotalObjectsGenerator} from \"./totalObjectsGenerator\";\nimport {Solver} from \"./solver\";\nimport {Rect} from \"./items/rect\";\nimport {RenderableObject} from \"./renderableObjects/object\";\nimport {ImmovableBallsObject} from \"./objects/immovableBall\";\nimport {ImmovableLineRenderableObject} from \"./renderableObjects/immovableLine\";\nimport {ImmovableLineObject} from \"./objects/immovableLine\";\nimport {Line} from \"./items/line\";\nimport {CircleWithText} from \"./items/circleWithText\";\nimport {Frame} from \"./items/frame\";\n\nconst balls = [\n    new MappedObjectGeneratorItem(\n        1,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        2,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        3,\n        new BallsObject(new Vec2(10, 10))\n    ),\n]\n\nconst milkShakePoints = [\n    new Vec2(60, 110),\n    new Vec2(130, 490),\n    new Vec2(330, 490),\n    new Vec2(400, 110)\n]\n\nconst milkShakeLines = [\n    [milkShakePoints[0], Vec2Math.diff(milkShakePoints[0], milkShakePoints[1]).flipSelf()],\n    [milkShakePoints[1], Vec2Math.diff(milkShakePoints[1], milkShakePoints[2]).flipSelf()],\n    [milkShakePoints[2], Vec2Math.diff(milkShakePoints[2], milkShakePoints[3]).flipSelf()]\n]\n\nconst ballsColors = {\n    57: '#ffffff',\n    78: '#ffffff',\n    71: '#ffffff',\n    86: '#ffffff',\n    200: '#ffffff',\n    202: '#ffffff',\n    218: '#ffffff',\n}\n\nexport class Render {\n    /**\n     * List of balls\n     * @type {RenderableObject[]}\n     */\n    objects = []\n\n    /**\n     * @type {Constrain}\n     */\n    constrains = null;\n\n    /**\n     * Solver for physics\n     * @type {Solver}\n     */\n    solver = null;\n\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.timeRenderStart = performance.now();\n        this.timeRenderEnd = performance.now();\n        this.step = 0;\n\n        /**\n         * @type {RenderableObject[]}\n         */\n        this.objects = [];\n\n        this.items = [];\n\n        this.generator = null;\n        this.solver = null;\n\n        this.configure();\n    }\n\n    configure() {\n        this.solver = new Solver(\n            new Vec2(\n                this.canvas.width,\n                this.canvas.height\n            )\n        );\n\n        this.context.font = '10px serif';\n\n        //this.switchToCircleConstrain();\n        this.switchToViewportConstrain();\n        this.solver.constrains = this.constrains;\n\n        const canvasCenter = new Vec2(\n            this.canvas.width / 2,\n            this.canvas.height / 2\n        );\n\n        const ballGeneratorPoint = new Vec2(\n            10, 10\n        );\n        const ballVelocity = new Vec2(\n            3, -3\n        ).mul(1/this.solver.subSteps);\n\n        this.generator = new TotalObjectsGenerator(\n            this.solver,\n            600,\n            7,\n            (index) => {\n                const obj = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint,\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        5,\n                        ballsColors[index],\n                        '',\n                        '#000000'\n                    )\n                )\n\n                return obj;\n            }\n        );\n\n        this.addObject(new RenderableObject(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.context, Vec2.Zero(), 30, '#ff0000')\n        ));\n\n        milkShakeLines.forEach(line => {\n            this.addObject(new ImmovableLineRenderableObject(\n                new ImmovableLineObject(\n                    line[0],\n                    line[1]\n                ),\n                new Line(\n                    this.context,\n                    Vec2.Zero(),\n                    Vec2.Zero(),\n                    '#ffffff'\n                )\n            ));\n        });\n    }\n\n    /**\n     * @param {RenderableObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n        this.solver.addObject(obj.ballsObject);\n    }\n\n    update(time) {\n        this.solver.update(time);\n    }\n\n    generatorsTick(time) {\n        const newBall = this.generator.getNextObject(time);\n        if (newBall) {\n            this.addObject(newBall)\n        }\n    }\n\n    tick() {\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.generatorsTick(this.step / 1000);\n        this.update(this.step / 1000);\n\n        this.clear();\n        this.renderItems();\n        this.renderGrid();\n\n        this.printFPS();\n\n        Vec2.lengthCallsCount = 0;\n    }\n\n    nextFrame = (time) => {\n        this.step = time - this.timeRenderEnd;\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = time;\n        self.requestAnimationFrame(this.nextFrame);\n    }\n\n    nextInterval = () => {\n        this.timeRenderStart = performance.now()\n        this.step = this.timeRenderStart - this.timeRenderEnd;\n\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = performance.now();\n    }\n\n    renderItems() {\n        this.items.forEach(item => item.render());\n        this.objects.forEach(obj => obj.render());\n    }\n\n    printText(text, x, y) {\n        this.context.fillStyle = \"#ffffff\";\n        this.context.textAlign = \"start\";\n        this.context.fillText(text, x, y);\n    }\n\n    printFPS() {\n        this.context.fillStyle = '#000000';\n        this.context.fillRect(0, 0, 100, 60);\n        this.printText(`${Math.round(this.step)} ms / ${Math.round(1000/this.step)} FPS`, 0, 10);\n        this.printText(`Length calls: ${Vec2.lengthCallsCount}`, 0 , 20);\n        this.printText(`Lenght2 calls: ${Vec2.length2CallsCount}`, 0 , 30);\n        this.printText(`Objects: ${this.objects.length}`, 0, 40);\n        this.printText(`Compares per object: ${Math.round(Vec2.lengthCallsCount / this.objects.length)}`, 0, 50);\n    }\n\n    clear() {\n        this.context.fillStyle = \"rgba(0, 0, 0, 0.9)\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    }\n\n    start() {\n        if (self.requestAnimationFrame) {\n            self.requestAnimationFrame(this.nextFrame);\n        } else {\n            setInterval(this.nextInterval, 16)\n        }\n    }\n\n    renderGrid() {\n        this.solver.collisionGrid.forEach((x, y, cell, index) => {\n            const cellPosition = new Vec2(\n                x * this.solver.cellSize.x,\n                y * this.solver.cellSize.y,\n            );\n            const rect = new Frame(\n                this.context,\n                cellPosition,\n                this.solver.cellSize.diff(new Vec2(5, 5)),\n                cell.count > 0 ? '#ff0000' : '#00ff00'\n            )\n\n            if (cell.hightlight) {\n                this.context.lineWidth = 10;\n            }\n\n            rect.render();\n\n            this.context.lineWidth = 1;\n            this.printText(index, cellPosition.x + this.solver.cellSize.x / 2, cellPosition.y + this.solver.cellSize.y / 2)\n        })\n    }\n\n    switchToCircleConstrain() {\n        this.constrains = new CircleConstrain(\n            new Vec2(this.canvas.width / 2, this.canvas.height / 2),\n            this.canvas.height / 2\n        )\n\n        this.items.push(\n            new Circle(\n                this.context,\n                this.canvas.width / 2,\n                this.canvas.height / 2,\n                this.canvas.height / 2,\n                '#000000'\n            )\n        );\n    }\n\n    switchToViewportConstrain() {\n        this.constrains = new ViewportConstrain(this.canvas.width, this.canvas.height)\n        // this.items.push(\n        //     new Rect(\n        //         this.context,\n        //         Vec2.Zero(),\n        //         new Vec2(\n        //             this.canvas.width,\n        //             this.canvas.height\n        //         ),\n        //         '#000000'\n        //     )\n        // );\n    }\n}","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('5d7Nu') + require('./helpers/bundle-manifest').resolve(\"gVigP\");module.exports = workerURL(url, bundleURL.getOrigin(url), false);","import { onReady }  from \"../utils/onReady\";\nimport { getElement } from \"../utils/getElement\";\nimport {Render} from \"../render\";\n\nfunction initApplication() {\n    console.log('Init application');\n    /**\n     * @var {HTMLCanvasElement}\n     */\n    const canvas = getElement(\"#image_canvas\");\n\n    if (canvas.transferControlToOffscreen) {\n        console.log('Render in worker');\n        const worker = new Worker(new URL('../worker/main.js', import.meta.url), {type: 'module'});\n        const offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({canvas: offscreen}, [offscreen]);\n    } else {\n        // There is no support for offscreen render\n        console.log('Render in main thread');\n        const render = new Render(canvas);\n        render.start();\n    }\n}\n\nonReady(initApplication);"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$58eda289ea048412$var$DOCUMENT_STATE_LOADING","$eac4a1d0ec467e0d$export$9a8db54f22040fa8","$9139f4380ced0e7c$export$2e2bcd8739ae039","obj","key","value","defineProperty","enumerable","configurable","writable","$e40164a985dd9e5a$export$79992de41895b472","$e40164a985dd9e5a$export$98e05f023e6bbbeb","$e40164a985dd9e5a$export$cc5bbfba1d12de75","$0ef9795c33087429$export$92b0492af2e4b152","static","vec1","vec2","$4d57cd86acad7159$export$ac4bca90992eed1","x","y","scalar","diff","length2","line1","line2","K","isNaN","makeVec2FromX","_vec1","B","vec","line","normal","direction","perpendicular","mul","dot","$3675464501081853$export$9201df218db36553","$3675464501081853$export$3681641e15b6e2c3","Math","sqrt","this","_x","_y","_length","lengthCallsCount","_length2","length2CallsCount","addSelf","subSelf","flipYSelf","flipXSelf","flipSelf","equals","distance2","sum","copy","applySelf","callback","ort","l","Horizontal","Vertical","constructor","$f063daebf0665eed$export$6d08773d2e66f8f2","render","context","position","Zero","$ed739c01afcc0f09$export$c89a927ffc67e6fa","beginPath","arc","r","PI","fillStyle","color","fill","super","$4b8aba1f00221969$export$769818a274da100a","inBetween","_vec2","a","b","error","abs","calculateKB","_b","_k","NaN","moveBy","getPointProjection","cosabD","_direction","_ort","Number","MAX_SAFE_INTEGER","$0920e24cc8ae862b$export$a59432db1b5f15cd","SolverObjectTypes","$f25c327de554914b$export$98e6d07575f46913","obj1","obj2","type","flipped","$f25c327de554914b$var$flipObjects","TypeBall","between","currentPosition","distance","requiredDistance","radius","normalized","delta","bounceValue","$f25c327de554914b$export$23e74c69ee7b6dae","TypeImmovableBall","ball","immovable","$f25c327de554914b$export$6d6f4258faab0992","TypeImmovableLine","projectionPoint","_line","e","$f25c327de554914b$export$4d790f09e0e06cd9","$eb3d27276f866aa1$export$8387ea1f2c3d2dbf","update","step","accelerate","acc","collide","addToGrid","collisionGrid","TypeNull","index","$40456b6e2373f916$export$e4134913c977dac4","velocity","previousPosition","setVelocity","vel","addObject","floor","v","movementVector","undefined","$e18f36a0ab1ee1a3$export$504c072c1a75a697","applyConstrain","$2ba0d4f1a77121a6$export$29fb847bec292dd0","width","_width","height","_height","$e1a9354934259beb$export$4384cf344d141b50","toCenter","center","n","$77242e0c215628b5$export$780b62e628ec518f","getNextObject","solver","$8f759762936427f5$export$cf86583e2e1a386b","timeout","object","$0b9f7d857f4d9b8d$export$a16316d22a718d27","total","limit","lastCreateTime","delay","newItem","create","count","createCallback","$7539966609416a8a$export$e172ac46f8971d96","objects","push","clear","hightlight","remove","objectIndex","findIndex","splice","$7539966609416a8a$export$82d945040ef2d6e1","size","_size","w","resize","h","cells","worldX","worldY","cellSize","makeIndexFromVec","makeIndexFromCoord","addObjectToCells","worldLeftTop","worldRightBottom","point1","scale","point2","index1","index2","cellIndex","left","min","top","right","max","startFrom","forEach","cell","hasCell","dt","$f75ca687d4249f9f$export$cca492cadf45c096","configure","gravity","useFixedTime","subSteps","worldSize","time","subTime","addObjectsToGrid","processCollisions","applyGravity","updateObjects","applyConstrains","constrains","processCollisionsInCell","objA","objB","processCell","$fd183cca0536a075$export$c79fc6492f3af13d","fillRect","$0e0cb4043c08d089$export$c682e94218fd2425","renderItem","ballsObject","$203d3e0a10e730ee$export$231acc6c5e36d927","_fixedPosition","leftTop","rightBottom","$4ea50bfaede81891$export$d17c9f1e24f0afb0","$200d70531e48cbcf$export$35284351ee95db01","$7c9a976f6dfa6a2e$export$17d680238e50603e","strokeStyle","moveTo","lineTo","stroke","$c1ea9936536a0c7f$export$d56a2681f508d897","textColor","textBaseline","textAlign","fillText","text","$eb06ec93f255e5c2$export$b89a827e9254211a","strokeRect","$b87dd7b3c2f70655$var$milkShakePoints","$b87dd7b3c2f70655$var$milkShakeLines","$b87dd7b3c2f70655$var$ballsColors","$b87dd7b3c2f70655$export$160ae30d75f98247","canvas","font","switchToViewportConstrain","ballGeneratorPoint","ballVelocity","generator","generatorsTick","newBall","tick","renderItems","renderGrid","printFPS","items","item","printText","round","start","self","requestAnimationFrame","nextFrame","setInterval","nextInterval","cellPosition","rect","lineWidth","switchToCircleConstrain","timeRenderEnd","timeRenderStart","performance","now","getContext","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$export$5a759dc7a1cfb72a","$902f5cabe5153acc$exports","workerUrl","origin","isESM","location","source","stringify","URL","createObjectURL","Blob","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$8ff44029270d1028$var$url","resolve","$8ff44029270d1028$exports","console","log","selector","element","document","querySelector","transferControlToOffscreen","worker","Worker","offscreen","postMessage","readyState","addEventListener"],"version":3,"file":"index.f5a3571a.js.map"}