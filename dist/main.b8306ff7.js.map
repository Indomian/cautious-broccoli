{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.mjs","src/render/item.js","src/render/circle.js","src/render/vec2.js","src/render/object.js","src/render/constrain.js","src/render/circleConstrain.js","src/render/objectsGenerator.js","src/render/mappedObjectsGenerator.js","src/render/totalObjectsGenerator.js","src/render/index.js","src/worker/main.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export class Item {\n    /**\n     *\n     * @param {CanvasRenderingContext2D} context\n     */\n    constructor(context) {\n        this.context = context;\n    }\n\n    render() {\n\n    }\n}","import {Item} from \"./item\";\n\nexport class Circle extends Item {\n    x = 0;\n    y = 0;\n    r = 0;\n    color = '#00ff00';\n\n    constructor(context, x, y, r, color) {\n        super(context);\n\n        this.x = x;\n        this.y = y;\n        this.r = r;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.beginPath()\n        this.context.arc(\n            this.x,\n            this.y,\n            this.r,\n            0,\n            2 * Math.PI\n        )\n\n        this.context.fillStyle = this.color;\n        this.context.fill();\n    }\n}","export class Vec2 {\n    x = 0;\n    y = 0;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Adds vec2 to current vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    add(vec2) {\n        this.x += vec2.x;\n        this.y += vec2.y;\n        return this;\n    }\n\n    /**\n     * Subtract from current vector given vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sub(vec2) {\n        this.x -= vec2.x;\n        this.y -= vec2.y;\n        return this;\n    }\n\n    /**\n     * Flips along X axis\n     * @returns {Vec2}\n     */\n    flipY() {\n        this.y = -this.y;\n        return this;\n    }\n\n    /**\n     * Sums current vector and given vector and returns new vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sum(vec2) {\n        return new Vec2(this.x + vec2.x, this.y + vec2.y);\n    }\n\n    /**\n     * Calculate difference between current vector and given vector and returns\n     * new vector\n     *\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    diff(vec2) {\n        return new Vec2(this.x - vec2.x, this.y - vec2.y);\n    }\n\n    /**\n     * Multiplicates vector by numner\n     * @param {number} value\n     * @returns {Vec2}\n     */\n    mul(value) {\n        return new Vec2(this.x * value, this.y * value);\n    }\n\n    copy() {\n        return new Vec2(this.x, this.y);\n    }\n\n    get length() {\n        return Math.sqrt(this.x*this.x + this.y*this.y);\n    }\n\n    /**\n     * Returns normalized vector\n     * @returns {Vec2}\n     */\n    get normalized() {\n        const l = this.length;\n        return new Vec2(this.x / l, this.y / l);\n    }\n\n    static Zero() {\n        return new Vec2(0, 0);\n    }\n}\n\nexport class Vec2Math {\n    static diff(vec1, vec2) {\n        return new Vec2(vec1.x - vec2.x, vec1.y - vec2.y);\n    }\n\n    static mul(vec1, scalar) {\n        return new Vec2(vec1.x * scalar, vec1.y * scalar);\n    }\n}\n","import {Vec2, Vec2Math} from \"./vec2\";\n\nexport class BallsObject {\n    previousPosition = Vec2.Zero();\n    currentPosition = Vec2.Zero();\n\n    acc = Vec2.Zero();\n\n    radius = 10;\n    bounceValue = 1;\n\n    /**\n     * Creates balls object\n     * @param {Vec2} position\n     */\n    constructor(position) {\n        this.previousPosition = position;\n        this.currentPosition = position;\n    }\n\n    /**\n     * Updates state of object\n     * @param {number} step\n     */\n    update(step) {\n        const velocity = this.currentPosition.diff(this.previousPosition);\n        this.previousPosition = this.currentPosition.copy();\n        this.currentPosition.add(\n            velocity.add(\n                this.acc.mul(step * step)\n            )\n        )\n        this.acc = Vec2.Zero();\n    }\n\n    accelerate(acc) {\n        this.acc.add(acc);\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    collide(obj) {\n        const between = Vec2Math.diff(this.currentPosition, obj.currentPosition);\n        const distance = between.length;\n        const requiredDistance = this.radius + obj.radius;\n\n        if (distance < this.radius + obj.radius) {\n            const normalized = between.normalized;\n            const delta = requiredDistance - distance;\n            this.currentPosition.add(Vec2Math.mul(normalized, this.radius / requiredDistance * delta * this.bounceValue));\n            obj.currentPosition.sub(Vec2Math.mul(normalized, obj.radius / requiredDistance * delta * obj.bounceValue))\n        }\n    }\n\n    get velocity() {\n        return this.currentPosition.diff(this.previousPosition);\n    }\n\n    set velocity(v) {\n        this.previousPosition = Vec2Math.diff(this.currentPosition,v);\n    }\n}","export class Constrain {\n    constructor() {\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    applyConstrain(obj) {\n\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2} from \"./vec2\";\n\nexport class CircleConstrain extends Constrain {\n    /**\n     *\n     * @type {Vec2}\n     */\n    center = Vec2.Zero();\n\n    radius = 0;\n\n    constructor(center, radius) {\n        super();\n\n        this.center = center;\n        this.radius = radius;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        const toCenter = obj.currentPosition.diff(this.center);\n        const distance = toCenter.length;\n        const r = obj.radius;\n\n        if (distance > (this.radius - r)) {\n            const n = toCenter.normalized;\n            obj.currentPosition = this.center.sum(\n                n.mul(this.radius - r * obj.bounceValue)\n            );\n        }\n    }\n\n}","export class ObjectsGenerator {\n    constructor() {\n    }\n\n    // TODO Make me iterator\n    getNextObject(step) {\n        return null;\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\n\nexport class MappedObjectGeneratorItem {\n    /**\n     * Delay before object appear\n     * @type {number}\n     */\n    timeout;\n\n    /**\n     * Object configuration\n     * @type {BallsObject}\n     */\n    object;\n\n    constructor(timeout, object) {\n        this.timeout = timeout;\n        this.object = object;\n    }\n\n}\n\nexport class MappedObjectsGenerator extends ObjectsGenerator {\n    /**\n     * @param {MappedObjectGeneratorItem[]} map\n     */\n    constructor(map) {\n        super();\n\n        this.items = map;\n        this.currentTime = 0;\n    }\n\n    getNextObject(step) {\n        this.currentTime += step;\n\n        console.log(this.currentTime)\n\n        const index = this.items.findIndex((item) => item.timeout < this.currentTime);\n        if (index > -1) {\n            return this.items.splice(index, 1)[0].object;\n        }\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\nexport class TotalObjectsGenerator extends ObjectsGenerator {\n    constructor(count, delay, createCallback) {\n        super();\n        this.limit = count;\n        this.total = 0;\n\n        this.delay = delay;\n        this.create = createCallback;\n        this.lastCreateTime = 0;\n    }\n\n    getNextObject(step) {\n        if (this.total > this.limit) {\n            return;\n        }\n\n        this.lastCreateTime += step;\n        if (this.lastCreateTime > this.delay) {\n            const newItem = this.create();\n            this.lastCreateTime = 0;\n            this.total++;\n\n            return newItem;\n        }\n    }\n}","import {Circle} from \"./circle\";\nimport {Vec2} from \"./vec2\";\nimport {BallsObject} from \"./object\";\nimport {ViewportConstrain} from \"./viewportConstrain\";\nimport {CircleConstrain} from \"./circleConstrain\";\nimport {Velocity} from \"./velocity\";\nimport {MappedObjectGeneratorItem, MappedObjectsGenerator} from \"./mappedObjectsGenerator\";\nimport {TotalObjectsGenerator} from \"./totalObjectsGenerator\";\n\nconst balls = [\n    new MappedObjectGeneratorItem(\n        1,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        2,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        3,\n        new BallsObject(new Vec2(10, 10))\n    ),\n]\n\nexport class Render {\n    /**\n     * List of balls\n     * @type {BallsObject[]}\n     */\n    objects = []\n\n    /**\n     * @type {Constrain}\n     */\n    constrains = null;\n\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.timeRenderStart = Date.now();\n        this.timeRenderEnd = Date.now();\n        this.step = 0;\n        this.gravity = Vec2.Zero();\n\n        this.items = [];\n\n        this.objects = [];\n\n        this.generator = null;\n\n        this.configure();\n    }\n\n    configure() {\n        this.context.font = '10px serif';\n\n        this.gravity = new Vec2(0, 100);\n        //this.constrains = new ViewportConstrain(this.canvas.width, this.canvas.height)\n        this.constrains = new CircleConstrain(\n            new Vec2(this.canvas.width / 2, this.canvas.height / 2),\n            this.canvas.height / 2\n        )\n\n        this.items.push(\n            new Circle(\n                this.context,\n                this.canvas.width / 2 ,\n                this.canvas.height / 2,\n                this.canvas.height / 2,\n                '#000000'\n            )\n        );\n\n        //this.generator = new MappedObjectsGenerator(balls);\n        this.generator = new TotalObjectsGenerator(200, 0.2, () => {\n            const ball = new BallsObject(new Vec2(this.canvas.width / 2, this.canvas.height / 2));\n            ball.velocity = new Vec2(5, -1);\n            ball.radius = Math.random() * 20 + 5;\n            return ball;\n        })\n    }\n\n    update(time) {\n        const newBall = this.generator.getNextObject(time);\n        if (newBall) {\n            this.objects.push(newBall);\n        }\n\n        this.applyGravity();\n        this.applyConstrains();\n        this.processCollisions();\n        this.objects.forEach(obj => obj.update(time));\n    }\n\n    nextFrame = (time) => {\n        this.step = time - this.timeRenderEnd;\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.update(this.step / 1000);\n\n        this.clear();\n        this.renderItems();\n\n        this.printFPS();\n\n        this.timeRenderEnd = time;\n\n        self.requestAnimationFrame(this.nextFrame)\n    }\n\n    applyGravity() {\n        this.objects.forEach(obj => obj.accelerate(this.gravity))\n    }\n\n    applyConstrains() {\n        this.objects.forEach(obj => this.constrains.applyConstrain(obj))\n    }\n\n    processCollisions() {\n        this.objects.forEach(objA => {\n            this.objects.forEach(objB => {\n                if (objA === objB) {\n                    return;\n                }\n\n                objA.collide(objB);\n            })\n        })\n    }\n\n    renderItems() {\n        this.items.forEach(item => item.render());\n\n        this.objects.forEach(obj => {\n            const img = new Circle(\n                this.context,\n                obj.currentPosition.x,\n                obj.currentPosition.y,\n                obj.radius\n            );\n            img.render();\n\n            // const v = new Velocity(this.context, obj);\n            // v.render();\n        })\n    }\n\n    printText(text, x, y) {\n        this.context.fillStyle = \"#000000\";\n        this.context.fillText(text, x, y);\n    }\n\n    printFPS() {\n        this.printText(`${Math.round(this.step)} ms / ${Math.round(1000/this.step)} FPS`, 0, 10);\n    }\n\n    clear() {\n        this.context.fillStyle = \"#ffffff\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    }\n\n    start() {\n        self.requestAnimationFrame(this.nextFrame);\n    }\n}","import { Render } from \"../render/index.js\";\n\nonmessage = function (event ) {\n    console.log(event);\n\n    const render = new Render(event.data.canvas);\n    render.start();\n}"],"names":["$455213ab5977fa62$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$0ae62d2753f44917$export$6d08773d2e66f8f2","render","constructor","context","this","$9991a46738256265$export$c89a927ffc67e6fa","beginPath","arc","x","y","r","Math","PI","fillStyle","color","fill","super","$b63c9c0c5bf74f3a$export$ac4bca90992eed1","add","vec2","sub","flipY","sum","diff","mul","copy","length","sqrt","normalized","l","static","$b63c9c0c5bf74f3a$export$92b0492af2e4b152","vec1","scalar","$4e4d173b7a53b545$export$e4134913c977dac4","update","step","velocity","currentPosition","previousPosition","acc","Zero","accelerate","collide","between","distance","requiredDistance","radius","delta","bounceValue","v","position","$c7391f2fe7be5bf0$export$504c072c1a75a697","applyConstrain","$dd192b23ff9ad44c$export$4384cf344d141b50","toCenter","center","n","$f03645509a0a5725$export$780b62e628ec518f","getNextObject","$057f5faed6298d51$export$cf86583e2e1a386b","timeout","object","$4e27416e632cb8f4$export$a16316d22a718d27","total","limit","lastCreateTime","delay","newItem","create","count","createCallback","$9f255293c67779ce$export$160ae30d75f98247","configure","font","gravity","constrains","canvas","width","height","items","push","generator","ball","random","time","newBall","objects","applyGravity","applyConstrains","processCollisions","forEach","objA","objB","renderItems","item","printText","text","fillText","printFPS","round","clear","fillRect","start","self","requestAnimationFrame","nextFrame","timeRenderEnd","getContext","timeRenderStart","Date","now","onmessage","event","console","log","data"],"version":3,"file":"main.b8306ff7.js.map"}