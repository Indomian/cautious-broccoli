{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.mjs","src/render/vector/vec2.js","src/render/items/item.js","src/render/items/circle.js","src/render/objects/types.js","src/render/objects/collisionModels.js","src/render/objects/object.js","src/render/constrains/constrain.js","src/render/constrains/viewport.js","src/render/constrains/circle.js","src/render/objectsGenerator.js","src/render/mappedObjectsGenerator.js","src/render/totalObjectsGenerator.js","src/render/solver.js","src/render/items/rect.js","src/render/renderableObjects/object.js","src/render/objects/immovable.js","src/render/renderableObjects/immovableLine.js","src/render/objects/immovableLine.js","src/render/items/line.js","src/render/items/circleWithText.js","src/render/index.js","src/worker/main.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export const MATH_ERROR = 0.000001;\n\nexport function isEqual(a, b, error) {\n    return Math.abs(a - b) < error;\n}\n\nexport class NoPerpendicularVectorToZeroVector extends Error {}\n\nexport class Vec2 {\n    x = 0;\n    y = 0;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Adds vec2 to current vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    add(vec2) {\n        this.x += vec2.x;\n        this.y += vec2.y;\n        return this;\n    }\n\n    /**\n     * Subtract from current vector given vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sub(vec2) {\n        this.x -= vec2.x;\n        this.y -= vec2.y;\n        return this;\n    }\n\n    /**\n     * Flips along X axis\n     * @returns {Vec2}\n     */\n    flipY() {\n        this.y = -this.y;\n        return this;\n    }\n\n    /**\n     * Flips along Y axis\n     * @returns {Vec2}\n     */\n    flipX() {\n        this.x = -this.x;\n        return this;\n    }\n\n    flip() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n\n    /**\n     * Checks if this vector equals given vector using global MATH_ERROR const\n     * @param vec2\n     */\n    equals(vec2) {\n        return Vec2Math.distance(this, vec2) < MATH_ERROR;\n    }\n\n    /**\n     * Sums current vector and given vector and returns new vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sum(vec2) {\n        return new Vec2(this.x + vec2.x, this.y + vec2.y);\n    }\n\n    /**\n     * Calculate difference between current vector and given vector and returns\n     * new vector\n     *\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    diff(vec2) {\n        return new Vec2(this.x - vec2.x, this.y - vec2.y);\n    }\n\n    /**\n     * Multiplicates vector by numner\n     * @param {number} value\n     * @returns {Vec2}\n     */\n    mul(value) {\n        return new Vec2(this.x * value, this.y * value);\n    }\n\n    copy() {\n        return new Vec2(this.x, this.y);\n    }\n\n    get length() {\n        return Math.sqrt(this.x*this.x + this.y*this.y);\n    }\n\n    /**\n     * Returns normalized vector\n     * @returns {Vec2}\n     */\n    get normalized() {\n        const l = this.length;\n        return new Vec2(this.x / l, this.y / l);\n    }\n\n    get perpendicular() {\n        if (this.x === 0) {\n            // Vertical\n            if (this.y > 0) {\n                return Vec2.Horizontal().normalized\n            } else if (this.y < 0) {\n                return Vec2.Horizontal().normalized.flip();\n            } else {\n                throw new NoPerpendicularVectorToZeroVector();\n            }\n        } else if (this.y === 0) {\n            // Horizontal\n            if (this.x > 0) {\n                return Vec2.Vertical().normalized\n            } else if (this.x < 0) {\n                return Vec2.Vertical().normalized.flip();\n            }\n        }\n\n        return new Vec2(\n            -this.y / this.x,\n            1\n        ).normalized;\n    }\n\n    static Zero() {\n        return new Vec2(0, 0);\n    }\n\n    static Horizontal() {\n        return new Vec2(1, 0);\n    }\n\n    static Vertical() {\n        return new Vec2(0, 1);\n    }\n}\n\nexport class Vec2Line {\n    _vec1 = Vec2.Zero();\n    _vec2 = Vec2.Zero();\n\n    _direction = null;\n    _length = 0;\n\n    /**\n     * Y = K*X + B\n     * @type {number}\n     */\n    k = 0;\n    b = 0;\n\n    constructor(vec1, vec2) {\n        this._vec1 = vec1;\n        this._vec2 = vec2;\n\n        this._direction = Vec2Math.diff(this._vec1, this._vec2);\n        this._length = this._direction.length;\n        this._normalized = this._direction.normalized;\n\n        this.calculateKB();\n    }\n\n    /**\n     * Determines if given point lays on the line\n     * @param vec\n     * @returns {boolean}\n     */\n    inBetween(vec) {\n        const l1 = Vec2Math.diff(vec, this._vec1).length;\n        const l2 = Vec2Math.diff(this._vec2, vec).length;\n        const l = Vec2Math.diff(this._vec1, this._vec2).length;\n        return isEqual(l, l1 + l2, MATH_ERROR);\n    }\n\n    calculateKB() {\n        if (this._vec1.y === this._vec2.y) {\n            // Horizontal line\n            this.b = this._vec1.y;\n            this.k = 0;\n        } else if (this._vec1.x === this._vec2.x) {\n            // Vertical line\n            this.b = NaN;\n            this.k = NaN;\n        } else {\n            this.b = (this._vec1.x * this._vec2.y - this._vec1.y * this._vec2.x) / (this._vec1.x - this._vec2.x)\n            this.k = (this._vec1.y - this._vec2.y) / (this._vec1.x - this._vec2.x);\n        }\n    }\n\n    makeVec2FromX(x) {\n        return new Vec2(x, this.k * x + this.b);\n    }\n\n    copy() {\n        return new Vec2Line(\n            this._vec1,\n            this._vec2\n        )\n    }\n\n    moveBy(vec) {\n        this._vec1.add(vec);\n        this._vec2.add(vec);\n        this.calculateKB();\n    }\n\n    getPointProjection(vec) {\n        const a = this.direction;\n        const b = Vec2Math.diff(vec, this._vec1);\n        const distance = b.length;\n        const cosabD = Vec2Math.dot(a, b) / (this.length);\n\n        return this._vec1.sum(\n            this.ort.copy().mul(cosabD)\n        );\n    }\n\n    get B() {\n        return this.b;\n    }\n\n    get K() {\n        return this.k;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    get direction() {\n        return this._direction;\n    }\n\n    get ort() {\n        return this._normalized;\n    }\n\n    get vec1() {\n        return this._vec1;\n    }\n\n    get vec2() {\n        return this._vec2;\n    }\n\n    static Vertical(x) {\n        return new Vec2Line(\n            new Vec2(x, 0),\n            new Vec2(x, Number.MAX_SAFE_INTEGER)\n        )\n    }\n\n    static Horizontal(y) {\n        return new Vec2Line(\n            new Vec2(0, y),\n            new Vec2(Number.MAX_SAFE_INTEGER, y)\n        )\n    }\n}\n\nexport class ExceptionParallel extends Error {}\n\nexport class Vec2Math {\n    static diff(vec1, vec2) {\n        return new Vec2(vec1.x - vec2.x, vec1.y - vec2.y);\n    }\n\n    static mul(vec1, scalar) {\n        return new Vec2(vec1.x * scalar, vec1.y * scalar);\n    }\n\n    /**\n     * Calculates distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance(vec1, vec2) {\n        return Vec2Math.diff(vec1, vec2).length;\n    }\n\n    /**\n     * Finds intersection between 2 lines\n     * @param {Vec2Line} line1\n     * @param {Vec2Line} line2\n     * @returns {Vec2}\n     */\n    static intersect(line1, line2) {\n        if (line1.K === line2.K) {\n            throw new ExceptionParallel()\n        }\n\n        if (isNaN(line1.K) || isNaN(line2.K)) {\n            // One of two lines is vertical\n            if (isNaN(line1.K)) {\n                return line2.makeVec2FromX(line1._vec1.x);\n            } else {\n                return line1.makeVec2FromX(line2._vec1.x);\n            }\n        } else {\n            const x = (line1.B - line2.B) / (line2.K - line1.K);\n            return line1.makeVec2FromX(x);\n        }\n    }\n\n    /**\n     * Dot product of 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static dot(vec1, vec2) {\n        return vec1.x * vec2.x + vec1.y * vec2.y;\n    }\n\n    /**\n     *\n     * @param {Vec2} vec\n     * @param {Vec2Line} line\n     * @returns {Vec2}\n     */\n    static mirror(vec, line) {\n        const normal = line.direction.perpendicular.normalized;\n        return vec.copy().sub(\n            normal.mul(2 * Vec2Math.dot(vec, normal))\n        );\n    }\n}\n","import {Vec2} from \"../vector/vec2\";\n\nexport class Item {\n    position = Vec2.Zero();\n\n    /**\n     *\n     * @param {CanvasRenderingContext2D} context\n     */\n    constructor(context, position) {\n        this.context = context;\n        this.position = position;\n    }\n\n    render() {\n\n    }\n}","import {Item} from \"./item\";\n\nexport class Circle extends Item {\n    r = 0;\n    color = '#00ff00';\n\n    constructor(context, position, r, color) {\n        super(context, position);\n\n        if (r) {\n            this.r = r;\n        }\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.beginPath()\n        this.context.arc(\n            this.position.x,\n            this.position.y,\n            this.r,\n            0,\n            2 * Math.PI\n        )\n\n        this.context.fillStyle = this.color;\n        this.context.fill();\n    }\n}","export const TYPE_BALL = 1;\nexport const TYPE_IMMOVABLE_BALL = 2;\nexport const TYPE_IMMOVABLE_LINE = 3;","import {Vec2Math} from \"../vector/vec2\";\nimport {BallsObject} from \"./object\";\nimport {TYPE_BALL, TYPE_IMMOVABLE_BALL, TYPE_IMMOVABLE_LINE} from \"./types\";\n\n/**\n * Collision between 2 balls objects\n * @param {BallsObject} obj1\n * @param {BallsObject} obj2\n */\nexport function collideBallAndBall(obj1, obj2) {\n    const between = Vec2Math.diff(obj1.currentPosition, obj2.currentPosition);\n    const distance = between.length;\n    const requiredDistance = obj1.radius + obj2.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.normalized;\n        const delta = requiredDistance - distance;\n        obj1.currentPosition.add(Vec2Math.mul(normalized, obj1.radius / requiredDistance * delta * obj1.bounceValue));\n        obj2.currentPosition.sub(Vec2Math.mul(normalized, obj2.radius / requiredDistance * delta * obj2.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable ball\n * @param {BallsObject} ball\n * @param {ImmovableBallsObject} immovable\n */\nexport function collideBallAndImmovableBall(ball, immovable) {\n    const between = Vec2Math.diff(\n        ball.currentPosition,\n        immovable.currentPosition\n    );\n\n    const distance = between.length;\n    const requiredDistance = ball.radius + immovable.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.normalized;\n        const delta = requiredDistance - distance;\n        ball.currentPosition.add(Vec2Math.mul(normalized, ball.radius / requiredDistance * delta * ball.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovableLineObject} line\n */\nexport function collideBallAndImmovableLine(ball, line) {\n    try {\n        const projectionPoint = line._line.getPointProjection(ball.currentPosition);\n\n        if (line._line.inBetween(projectionPoint)) {\n            const between = Vec2Math.diff(\n                projectionPoint,\n                ball.currentPosition\n            )\n\n            if (between.length < ball.radius) {\n                const normalized = between.normalized;\n\n                const delta = ball.radius - between.length;\n\n                ball.currentPosition.sub(\n                    Vec2Math.mul(normalized, delta * ball.bounceValue)\n                )\n            }\n        }\n    } catch (e) {\n    }\n}\n\nexport function collide(obj1, obj2) {\n    if (obj1.type > obj2.type) {\n        [obj2, obj1] = [obj1, obj2];\n    }\n\n    switch (true) {\n        case obj1.type === TYPE_BALL && obj2.type === TYPE_BALL:\n            return collideBallAndBall(obj1, obj2);\n        case obj1.type === TYPE_BALL && obj2.type === TYPE_IMMOVABLE_BALL:\n            return collideBallAndImmovableBall(obj1, obj2);\n        case obj1.type === TYPE_BALL && obj2.type === TYPE_IMMOVABLE_LINE:\n            return collideBallAndImmovableLine(obj1, obj2);\n        default:\n            return;\n    }\n}","import {Vec2, Vec2Line, Vec2Math} from \"../vector/vec2\";\nimport {TYPE_BALL} from \"./types\";\nimport {collide} from \"./collisionModels\";\n\nexport class BallsObject {\n    previousPosition = Vec2.Zero();\n    currentPosition = Vec2.Zero();\n\n    acc = Vec2.Zero();\n\n    radius = 10;\n    bounceValue = 1.1;\n\n    type = TYPE_BALL;\n\n    /**\n     * Creates balls object\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        this.previousPosition = position.copy();\n        this.currentPosition = position.copy();\n        if (radius !== undefined) {\n            this.radius = radius\n        }\n    }\n\n    /**\n     * Updates state of object\n     * @param {number} step\n     */\n    update(step) {\n        const velocity = this.velocity;\n        this.previousPosition = this.currentPosition.copy();\n        this.currentPosition.add(\n            velocity.add(\n                this.acc.mul(step * step)\n            )\n        )\n        this.acc = Vec2.Zero();\n    }\n\n    accelerate(acc) {\n        this.acc.add(acc);\n        return this;\n    }\n\n    setVelocity(vel) {\n        this.velocity = vel;\n        return this;\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    collide(obj) {\n        collide(this, obj)\n    }\n\n    flip() {\n        const position = this.currentPosition.copy();\n        this.currentPosition = this.previousPosition;\n        this.previousPosition = position;\n    }\n\n    get velocity() {\n        return Vec2Math.diff(\n            this.currentPosition,\n            this.previousPosition\n        );\n    }\n\n    set velocity(v) {\n        this.previousPosition = Vec2Math.diff(this.currentPosition,v);\n    }\n\n    /**\n     *\n     * @returns {Vec2Line}\n     */\n    get movementVector() {\n        return new Vec2Line(this.previousPosition, this.currentPosition);\n    }\n}","export class Constrain {\n    constructor() {\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    applyConstrain(obj) {\n\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2, Vec2Line, Vec2Math} from \"../vector/vec2\";\n\nexport class ViewportConstrain extends Constrain {\n    _width = 0;\n    _height = 0;\n\n    constructor(width, height) {\n        super()\n        this.width = width;\n        this.height = height;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    set width(width) {\n        this._width = width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    set height(height) {\n        this._height = height;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        if (obj.currentPosition.x - obj.radius < 0) {\n            obj.currentPosition.x = obj.radius;\n        }\n\n        if (obj.currentPosition.x + obj.radius > this._width) {\n            obj.currentPosition.x = this._width - obj.radius;\n        }\n\n        if (obj.currentPosition.y - obj.radius < 0) {\n            obj.currentPosition.y = obj.radius;\n        }\n\n        if (obj.currentPosition.y + obj.radius > this._height) {\n            obj.currentPosition.y = this._height - obj.radius;\n        }\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class CircleConstrain extends Constrain {\n    /**\n     *\n     * @type {Vec2}\n     */\n    center = Vec2.Zero();\n\n    radius = 0;\n\n    constructor(center, radius) {\n        super();\n\n        this.center = center;\n        this.radius = radius;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        const toCenter = obj.currentPosition.diff(this.center);\n        const distance = toCenter.length;\n        const r = obj.radius;\n\n        if (distance > (this.radius - r)) {\n            const n = toCenter.normalized;\n            obj.currentPosition = this.center.sum(\n                n.mul(this.radius - r)\n            );\n        }\n    }\n\n}","export class ObjectsGenerator {\n    solver = null;\n    constructor(solver) {\n        this.solver = solver;\n    }\n\n    // TODO Make me iterator\n    getNextObject(step) {\n        return null;\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\n\nexport class MappedObjectGeneratorItem {\n    /**\n     * Delay before object appear\n     * @type {number}\n     */\n    timeout;\n\n    /**\n     * Object configuration\n     * @type {BallsObject}\n     */\n    object;\n\n    constructor(timeout, object) {\n        this.timeout = timeout;\n        this.object = object;\n    }\n\n}\n\nexport class MappedObjectsGenerator extends ObjectsGenerator {\n    /**\n     * @param {MappedObjectGeneratorItem[]} map\n     */\n    constructor(solver, map) {\n        super(solver);\n\n        this.items = map;\n        this.currentTime = 0;\n    }\n\n    getNextObject(step) {\n        this.currentTime += step;\n\n        console.log(this.currentTime)\n\n        const index = this.items.findIndex((item) => item.timeout < this.currentTime);\n        if (index > -1) {\n            return this.items.splice(index, 1)[0].object;\n        }\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\nexport class TotalObjectsGenerator extends ObjectsGenerator {\n    constructor(solver, count, delay, createCallback) {\n        super(solver);\n        this.limit = count;\n        this.total = 0;\n\n        this.delay = delay;\n        this.create = createCallback;\n        this.lastCreateTime = 0;\n    }\n\n    getNextObject(step) {\n        if (this.total > this.limit) {\n            return;\n        }\n\n        this.lastCreateTime += 1;\n        if (this.lastCreateTime > this.delay) {\n            const newItem = this.create(this.total);\n            this.lastCreateTime = 0;\n            this.total++;\n\n            return newItem;\n        }\n    }\n}","import {Vec2} from \"./vector/vec2\";\nimport {BallsObject} from \"./objects/object\";\n\nexport class Solver {\n    /**\n     * List of balls\n     * @type {BallsObject[]}\n     */\n    objects = []\n\n    /**\n     * @type {Constrain}\n     */\n    constrains = null;\n\n    constructor() {\n        this.gravity = Vec2.Zero();\n\n        this.objects = [];\n\n        this.subSteps = 4;\n\n        this.configure();\n    }\n\n    configure() {\n        this.gravity = new Vec2(0, 100);\n\n        this.useFixedTime = true;\n        this.step = 0.017 / this.subSteps;\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n    }\n\n    /**\n     * Update the simulation by given step.\n     * @param {number} time amount of seconds passed since last update.\n     */\n    update(time) {\n        const subTime = this.useFixedTime ? this.step : time / this.subSteps;\n        for (let i = 0; i < this.subSteps; i++) {\n            this.applyGravity();\n            this.applyConstrains();\n            this.processCollisions();\n            this.updateObjects(subTime);\n        }\n    }\n\n    /**\n     * Update objects state\n     * @param {number} time amount of seconds passed since last update\n     */\n    updateObjects(time) {\n        this.objects.forEach(obj => obj.update(time))\n    }\n\n    applyGravity() {\n        this.objects.forEach(obj => obj.accelerate(this.gravity))\n    }\n\n    applyConstrains() {\n        this.objects.forEach(obj => this.constrains.applyConstrain(obj))\n    }\n\n    processCollisions() {\n        this.objects.forEach(objA => {\n            this.objects.forEach(objB => {\n                if (objA === objB) {\n                    return;\n                }\n\n                objA.collide(objB);\n            })\n        })\n    }\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Rect extends Item {\n    size = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, size, color) {\n        super(context, position);\n\n        this.size = size;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.fillStyle = this.color;\n        this.context.fillRect(\n            this.position.x,\n            this.position.y,\n            this.position.x + this.size.x,\n            this.position.y + this.size.y\n        )\n    }\n}","export class RenderableObject {\n    /**\n     * @type {BallsObject}\n     */\n    ballsObject = null;\n\n    /**\n     * @type {Item}\n     */\n    renderItem = null;\n\n    constructor(ballsObject, renderItem) {\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        this.renderItem.position = this.ballsObject.currentPosition;\n    }\n\n    render() {\n        this.update();\n        this.renderItem.render();\n    }\n}","import {BallsObject} from \"./object\";\nimport {TYPE_IMMOVABLE_BALL} from \"./types\";\n\nexport class ImmovableBallsObject extends BallsObject {\n    type = TYPE_IMMOVABLE_BALL;\n\n    /**\n     * @type {Vec2}\n     * @private\n     */\n    _fixedPosition = null;\n\n    /**\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super(position, radius);\n        this._fixedPosition = position.copy();\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n    }\n}","import {RenderableObject} from \"./object\";\n\nexport class ImmovableLineRenderableObject extends RenderableObject {\n    /**\n     * @type {ImmovableLineObject}\n     */\n    ballsObject = null;\n\n    constructor(ballsObject, renderItem) {\n        super(ballsObject);\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        super.update();\n        this.renderItem.direction = this.ballsObject._direction;\n    }\n}","import {BallsObject} from \"./object\";\nimport {Vec2Line} from \"../vector/vec2\";\nimport {TYPE_IMMOVABLE_LINE} from \"./types\";\n\nexport class ImmovableLineObject extends BallsObject {\n    _direction;\n    _line;\n\n    type = TYPE_IMMOVABLE_LINE;\n\n    constructor(position, direction) {\n        super(position, 0);\n        this._direction = direction;\n\n        this._line = new Vec2Line(\n            this.currentPosition.copy(),\n            this.currentPosition.copy().sum(this._direction)\n        )\n    }\n\n    update(step) {\n        this.currentPosition = this._line._vec1;\n        this.previousPosition = this._line._vec2;\n    }\n\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Line extends Item {\n    direction = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, direction, color) {\n        super(context, position);\n\n        this.direction = direction;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.beginPath(); // Start a new path\n        this.context.moveTo(this.position.x, this.position.y);\n        this.context.lineTo(\n            this.position.x + this.direction.x,\n            this.position.y + this.direction.y\n        );\n        this.context.stroke(); // Render the path\n    }\n}","import {Circle} from \"./circle\";\n\nexport class CircleWithText extends Circle {\n    text = '';\n    textColor = '#ffffff';\n\n    constructor(context, position,r, color, text, textColor) {\n        super(context, position, r, color);\n        this.text = text;\n        if (textColor) {\n            this.textColor = textColor;\n        }\n    }\n\n    render() {\n        super.render();\n        this.context.fillStyle = this.textColor;\n        this.context.textBaseline = \"middle\";\n        this.context.textAlign = \"center\";\n        this.context.fillText(this.text, this.position.x, this.position.y);\n    }\n}","import {Circle} from \"./items/circle\";\nimport {Vec2, Vec2Math} from \"./vector/vec2\";\nimport {BallsObject} from \"./objects/object\";\nimport {ViewportConstrain} from \"./constrains/viewport\";\nimport {CircleConstrain} from \"./constrains/circle\";\nimport {Velocity} from \"./items/velocity\";\nimport {MappedObjectGeneratorItem, MappedObjectsGenerator} from \"./mappedObjectsGenerator\";\nimport {TotalObjectsGenerator} from \"./totalObjectsGenerator\";\nimport {Solver} from \"./solver\";\nimport {Rect} from \"./items/rect\";\nimport {RenderableObject} from \"./renderableObjects/object\";\nimport {ImmovableBallsObject} from \"./objects/immovable\";\nimport {ImmovableLineRenderableObject} from \"./renderableObjects/immovableLine\";\nimport {ImmovableLineObject} from \"./objects/immovableLine\";\nimport {Line} from \"./items/line\";\nimport {CircleWithText} from \"./items/circleWithText\";\n\nconst balls = [\n    new MappedObjectGeneratorItem(\n        1,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        2,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        3,\n        new BallsObject(new Vec2(10, 10))\n    ),\n]\n\nconst milkShakePoints = [\n    new Vec2(60, 110),\n    new Vec2(130, 490),\n    new Vec2(330, 490),\n    new Vec2(400, 110)\n]\n\nconst milkShakeLines = [\n    [milkShakePoints[0], Vec2Math.diff(milkShakePoints[0], milkShakePoints[1]).flip()],\n    [milkShakePoints[1], Vec2Math.diff(milkShakePoints[1], milkShakePoints[2]).flip()],\n    [milkShakePoints[2], Vec2Math.diff(milkShakePoints[2], milkShakePoints[3]).flip()]\n]\n\nconst ballsColors = {\n    57: '#ffffff',\n    78: '#ffffff',\n    71: '#ffffff',\n    86: '#ffffff',\n    200: '#ffffff',\n    202: '#ffffff',\n    218: '#ffffff',\n}\n\nexport class Render {\n    /**\n     * List of balls\n     * @type {RenderableObject[]}\n     */\n    objects = []\n\n    /**\n     * @type {Constrain}\n     */\n    constrains = null;\n\n    /**\n     * Solver for physics\n     * @type {Solver}\n     */\n    solver = null;\n\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.timeRenderStart = performance.now();\n        this.timeRenderEnd = performance.now();\n        this.step = 0;\n\n        /**\n         * @type {RenderableObject[]}\n         */\n        this.objects = [];\n\n        this.items = [];\n\n        this.generator = null;\n        this.solver = null;\n\n        this.configure();\n    }\n\n    configure() {\n        this.solver = new Solver();\n\n        this.context.font = '10px serif';\n\n        //this.switchToCircleConstrain();\n        this.switchToViewportConstrain();\n        this.solver.constrains = this.constrains;\n\n        const canvasCenter = new Vec2(\n            this.canvas.width / 2,\n            this.canvas.height / 2\n        );\n\n        const ballGeneratorPoint = new Vec2(\n            10, 10\n        );\n        const ballVelocity = new Vec2(\n            3, -3\n        ).mul(1/this.solver.subSteps);\n\n        this.generator = new TotalObjectsGenerator(\n            this.solver,\n            300,\n            10,\n            (index) => {\n                const obj = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint,\n                        10\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        10,\n                        ballsColors[index],\n                        index,\n                        '#000000'\n                    )\n                )\n\n                return obj;\n            }\n        );\n\n        this.addObject(new RenderableObject(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.context, Vec2.Zero(), 30, '#ff0000')\n        ));\n\n        milkShakeLines.forEach(line => {\n            this.addObject(new ImmovableLineRenderableObject(\n                new ImmovableLineObject(\n                    line[0],\n                    line[1]\n                ),\n                new Line(\n                    this.context,\n                    Vec2.Zero(),\n                    Vec2.Zero(),\n                    '#ffffff'\n                )\n            ));\n        });\n    }\n\n    /**\n     * @param {RenderableObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n        this.solver.addObject(obj.ballsObject);\n    }\n\n    update(time) {\n        this.solver.update(time);\n    }\n\n    generatorsTick(time) {\n        const newBall = this.generator.getNextObject(time);\n        if (newBall) {\n            this.addObject(newBall)\n        }\n    }\n\n    tick() {\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.generatorsTick(this.step / 1000);\n        this.update(this.step / 1000);\n\n        this.clear();\n        this.renderItems();\n\n        this.printFPS();\n    }\n\n    nextFrame = (time) => {\n        this.step = time - this.timeRenderEnd;\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = time;\n        self.requestAnimationFrame(this.nextFrame);\n    }\n\n    nextInterval = () => {\n        this.timeRenderStart = performance.now()\n        this.step = this.timeRenderStart - this.timeRenderEnd;\n\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = performance.now();\n    }\n\n    renderItems() {\n        this.items.forEach(item => item.render());\n        this.objects.forEach(obj => obj.render());\n    }\n\n    printText(text, x, y) {\n        this.context.fillStyle = \"#ffffff\";\n        this.context.textAlign = \"start\";\n        this.context.fillText(text, x, y);\n    }\n\n    printFPS() {\n        this.printText(`${Math.round(this.step)} ms / ${Math.round(1000/this.step)} FPS`, 0, 10);\n    }\n\n    clear() {\n        this.context.fillStyle = \"#ffffff\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    }\n\n    start() {\n        if (self.requestAnimationFrame) {\n            self.requestAnimationFrame(this.nextFrame);\n        } else {\n            setInterval(this.nextInterval, 16)\n        }\n    }\n\n    switchToCircleConstrain() {\n        this.constrains = new CircleConstrain(\n            new Vec2(this.canvas.width / 2, this.canvas.height / 2),\n            this.canvas.height / 2\n        )\n\n        this.items.push(\n            new Circle(\n                this.context,\n                this.canvas.width / 2,\n                this.canvas.height / 2,\n                this.canvas.height / 2,\n                '#000000'\n            )\n        );\n    }\n\n    switchToViewportConstrain() {\n        this.constrains = new ViewportConstrain(this.canvas.width, this.canvas.height)\n        this.items.push(\n            new Rect(\n                this.context,\n                Vec2.Zero(),\n                new Vec2(\n                    this.canvas.width,\n                    this.canvas.height\n                ),\n                '#000000'\n            )\n        );\n    }\n}","import { Render } from \"../render/index.js\";\n\nonmessage = function (event ) {\n    console.log(event);\n\n    const render = new Render(event.data.canvas);\n    render.start();\n}"],"names":["$455213ab5977fa62$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$93c3d915a4e812f4$export$9201df218db36553","$93c3d915a4e812f4$export$ea4075d7085bb1f7","Error","$93c3d915a4e812f4$export$ac4bca90992eed1","add","vec2","this","x","y","sub","flipY","flipX","flip","equals","$93c3d915a4e812f4$export$92b0492af2e4b152","distance","sum","diff","mul","copy","length","Math","sqrt","normalized","l","perpendicular","Horizontal","Vertical","static","constructor","$93c3d915a4e812f4$export$769818a274da100a","inBetween","vec","l1","_vec1","l2","_vec2","a","b","error","abs","calculateKB","k","NaN","makeVec2FromX","moveBy","getPointProjection","direction","cosabD","dot","ort","B","K","_length","_direction","_normalized","vec1","Number","MAX_SAFE_INTEGER","Zero","$93c3d915a4e812f4$export$dd10cb6db43ac275","scalar","line1","line2","isNaN","line","normal","$4617e5f5b8d500e2$export$6d08773d2e66f8f2","render","context","position","$143ee38cf3bec427$export$c89a927ffc67e6fa","beginPath","arc","r","PI","fillStyle","color","fill","super","$b895d48c8eace341$export$5d4ca3a6086ec22b","$b895d48c8eace341$export$98ba063ffbc89e73","$b895d48c8eace341$export$8e9beafd5d79f8f5","$93a740b8e1cfed7d$export$98e6d07575f46913","obj1","obj2","type","between","currentPosition","requiredDistance","radius","delta","bounceValue","$93a740b8e1cfed7d$export$23e74c69ee7b6dae","ball","immovable","$93a740b8e1cfed7d$export$6d6f4258faab0992","projectionPoint","_line","e","$93a740b8e1cfed7d$export$4d790f09e0e06cd9","$bf7afa7c4c4ab4ed$export$e4134913c977dac4","update","step","velocity","previousPosition","acc","accelerate","setVelocity","vel","collide","v","movementVector","undefined","$b152758d9af9f18b$export$504c072c1a75a697","applyConstrain","$e5deb4c997d86649$export$29fb847bec292dd0","width","_width","height","_height","$0cde6a08871d2110$export$4384cf344d141b50","toCenter","center","n","$f03645509a0a5725$export$780b62e628ec518f","getNextObject","solver","$057f5faed6298d51$export$cf86583e2e1a386b","timeout","object","$4e27416e632cb8f4$export$a16316d22a718d27","total","limit","lastCreateTime","delay","newItem","create","count","createCallback","$c3942e741d9d1fae$export$cca492cadf45c096","configure","gravity","useFixedTime","subSteps","addObject","objects","push","time","subTime","i","applyGravity","applyConstrains","processCollisions","updateObjects","forEach","constrains","objA","objB","$2c1a4895804b6108$export$c79fc6492f3af13d","fillRect","size","$e0645bb325b1483a$export$c682e94218fd2425","renderItem","ballsObject","$1a8e03fb8ef54e1c$export$231acc6c5e36d927","_fixedPosition","$dc60d3072d13f390$export$d17c9f1e24f0afb0","$aa03dd44d6482cb5$export$35284351ee95db01","$4a6bc97734791e07$export$17d680238e50603e","strokeStyle","moveTo","lineTo","stroke","$01802125d5e03a9c$export$d56a2681f508d897","textColor","textBaseline","textAlign","fillText","text","$9f255293c67779ce$var$milkShakePoints","$9f255293c67779ce$var$milkShakeLines","$9f255293c67779ce$var$ballsColors","$9f255293c67779ce$export$160ae30d75f98247","font","switchToViewportConstrain","canvas","ballGeneratorPoint","ballVelocity","generator","index","generatorsTick","newBall","tick","clear","renderItems","printFPS","items","item","printText","round","start","self","requestAnimationFrame","nextFrame","setInterval","nextInterval","switchToCircleConstrain","timeRenderEnd","timeRenderStart","performance","now","getContext","onmessage","event","console","log","data"],"version":3,"file":"main.4487a6d6.js.map"}