{"mappings":"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,SAAA,KAAK,GAAZ,SAAa,IAAU,EAAE,IAAU,EAA5B;QACH,OAAO,IAAI,CAAA,GAAA,UAAI,AAAJ,EACP,KAAK,CAAC,GAAG,KAAK,CAAC,EACf,KAAK,CAAC,GAAG,KAAK,CAAC;IAEvB;IACJ,OAAA;AAAA;;;A;;A,mD;A,2D;A,oF;A,I,Y,a,U,S,I,A,W;I,I,gB,S,C,E,C,E;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C,E;Y,E,S,G;Q,K,S,C,E,C,E;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O,c,G;I;I,O,S,C,E,C,E;Q,I,O,M,c,M,I,E,M,I,U,yB,O,K,iC;Q,c,G;Q,S,K;Y,I,C,W,G;Q;Q,E,S,G,M,I,G,O,M,C,K,C,G,S,G,E,S,E,I,I,A,C;I;A;ACtFA,IAAA,gBAAA,WAAA,GAAA,SAAA,MAAA,EAAA;IAAmC,UAAA,eAAA;IAAnC,SAAA,gBAAA;Q,O,W,I,I,O,K,C,I,E,c,I;IAA0C;IAAA,OAAA;AAAA,EAAP;AAEnC,IAAA,wBAAA,WAAA,GAAA,SAAA,MAAA,EAAA;IAA2C,UAAA,uBAAA;IAA3C,SAAA,wBAAA;Q,O,W,I,I,O,K,C,I,E,c,I;IAA0D;IAAA,OAAA;AAAA,EAAf;AAC3C,IAAA,iDAAA,WAAA,GAAA,SAAA,MAAA,EAAA;IAAoE,UAAA,gDAAA;IAApE,SAAA,iDAAA;Q,O,W,I,I,O,K,C,I,E,c,I;IAAmF;IAAA,OAAA;AAAA,EAAf;;;ACHpE,QAAQ,cAAc,GAAG,SAAU,CAAC,EAAE;IACpC,OAAO,KAAK,EAAE,UAAU,GAAG,IAAI;QAAC,SAAS;IAAC,CAAC;AAC7C;AAEA,QAAQ,iBAAiB,GAAG,SAAU,CAAC,EAAE;IACvC,OAAO,cAAc,CAAC,GAAG,cAAc;QAAC,OAAO,IAAI;IAAA;AACrD;AAEA,QAAQ,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI,EAAE;IAC1C,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,SAAU,GAAG,EAAE;QACzC,IAAI,QAAQ,aAAa,QAAQ,gBAAgB,KAAK,cAAc,CAAC,MACnE;QAGF,OAAO,cAAc,CAAC,MAAM,KAAK;YAC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EA/J4B,CAAA,GAAA,oBAAS,AAAT;;;AClB5B;;AAEA,oDAAgB;AAFhB;AAEM,SAAU,eAAe,IAAY,EAA3C;IACI,IAAM,SAAS,OAAO,KAAK,IAAI,CAAC,KAAK;IACrC,IAAM,SAAS,IAAI,CAAA,GAAA,UAAI,AAAJ,EACf,OAAO,GACP,OAAO,IAAK,CAAA,IAAI,KAAK,IAAI,CAAC,EAAC;IAE/B,OAAO;QACH,IAAI,CAAA,GAAA,UAAI,AAAJ,EAAK,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAA,GAAA,UAAI,AAAJ,EAAK,GAAG,SAAS,OAAO,CAAC;QAC7B,IAAI,CAAA,GAAA,UAAI,AAAJ,EAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC;KAC/B;AACL;;;A;;A,sD;ACbA;AACA;AAIA;AACA;A,I,Y,a,U,S,I,A,W;I,I,gB,S,C,E,C,E;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C,E;Y,E,S,G;Q,K,S,C,E,C,E;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O,c,G;I;I,O,S,C,E,C,E;Q,I,O,M,c,M,I,E,M,I,U,yB,O,K,iC;Q,c,G;Q,S,K;Y,I,C,W,G;Q;Q,E,S,G,M,I,G,O,M,C,K,C,G,S,G,E,S,E,I,I,A,C;I;A;A,I,gB,a,U,a,I,S,E,E,I,E,I,E;I,I,Q,U,M,K,G;Q,I,I,I,G,I,K,M,E,I,I,G,I,I,M,C,C,K,I,G;Y,I,C,I,K,M,S,C,K,C,I,C,M,G;Y,E,C,E,G,I,C,E;Q,C;I,C;I,O,G,M,C,M,M,S,C,K,C,I,C;A;AAEA,IAAA,mBAAA,WAAA,GAAA,SAAA,MAAA,EAAA;IAAsC,UAAA,kBAAA;IAUlC,SAAA,iBAAY,QAAc,EAAE,MAAc,EAA1C;QAAA,IAAA,QACI,OAAA,IAAA,CAAA,IAAA,KAAO,IAAA;QAVX,MAAA,YAAY,GAAW,EAAE;QACzB,MAAA,MAAM,GAA0B,EAAE;QAGlC,MAAA,IAAI,GAAG,CAAA,GAAA,wBAAiB,AAAjB,EAAkB,oBAAoB;QAC7C,MAAA,SAAS,GAAG,IAAI;QAEhB,MAAA,WAAW,GAAG;QAKV,MAAK,eAAe,GAAG,SAAS,IAAI;QACpC,MAAK,gBAAgB,GAAG,SAAS,IAAI;QAErC,MAAK,cAAc,GAAG,SAAS,IAAI;QAEnC,OAAO,OAAO,CAAC,SAAA,KAAK,EAApB;YACI,MAAK,YAAY,CAAC,IAAI,CAAC,MAAM,IAAI;QACrC;QACA,MAAK,cAAc;Q,O;IACvB;IAEQ,iBAAA,SAAA,CAAA,cAAc,GAAtB,WAAQ;QACJ,IAAM,kBAAe,cAAA,EAAA,EAAO,IAAI,CAAC,YAAY,EAAA,IAAA;QAC7C,IAAI,aAAmB,gBAAgB,KAAK;QAC5C,IAAI;QACJ,IAAI,YAAkB;QAEtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;QAExC,MAAO,cAAc,gBAAgB,KAAK,GAAI;YAC1C,IAAM,SAAO,CAAA,GAAA,6CAA8B,AAA9B,EACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YACxB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;YAG5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAEjB,YAAY;QACf;QAED,IAAM,OAAO,CAAA,GAAA,6CAA8B,AAA9B,EACT,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YACxB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;QAG5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACrB;IAEA,iBAAA,SAAA,CAAA,MAAM,GAAN,SAAO,IAAI,EAAX;QACI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc;QAC1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc;IAC/C;IAEA,iBAAA,SAAA,CAAA,UAAU,GAAV,SAAW,WAA4B,EAAvC;QACI,IAAI;YACA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAC,IAAyB,EAAA;gBAAK,OAAA,KAAK,UAAU,CAAC;YAAhB;QACtD,EAAC,OAAO,GAAG;YACR,QAAQ;YACR,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM;QAC7B;IACL;IAEA,iBAAA,SAAA,CAAA,mBAAmB,GAAnB,SAAoB,KAAW,EAA/B;QACI,OAAO,IAAI;IACf;IAEA,iBAAA,SAAA,CAAA,MAAM,GAAN,SAAO,KAAW,EAAlB;QACI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAC,IAAyB,EAAA;YAAK,OAAA,KAAK,MAAM,CAAC;QAAZ;IACvD;IAEA,iBAAA,SAAA,CAAA,MAAM,GAAN,SAAO,QAAc,EAArB;QACI,IAAM,QAAQ,CAAA,GAAA,kBAAQ,AAAR,EAAS,IAAI,CAAC,UAAU,IAAI,CAAC,cAAc;QACzD,IAAI,CAAC,MAAM,CAAC;IAChB;IAEA,iBAAA,SAAA,CAAA,QAAQ,GAAR,WAAA;QACI,OAAO;IACX;IAEA,iBAAA,SAAA,CAAA,WAAW,GAAX,SAAY,OAAiC,EAA7C;QACI,QAAQ,WAAW,GAAG;QACtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,IAAI,EAAA;YAAI,OAAA,KAAK,WAAW,CAAC;QAAjB;IAChC;IAEA,OAAA,cAAA,CAAI,iBAAA,SAAA,EAAA,SAAJ;QAAA,KAAA,WAAA;YACI,OAAO,IAAI,CAAC,MAAM;QACtB;Q,Y,K;Q,c,I;IAAC;IACL,OAAA;AAAA,EA3FsC,CAAA,GAAA,gCAAqB,AAArB;;;A;;A,2D;ACRtC;A,I,Y,a,U,S,I,A,W;I,I,gB,S,C,E,C,E;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C,E;Y,E,S,G;Q,K,S,C,E,C,E;Y,I,I,K,E,I,O,S,C,c,C,I,C,G,I,C,C,E,G,C,C,E;Q;Q,O,c,G;I;I,O,S,C,E,C,E;Q,I,O,M,c,M,I,E,M,I,U,yB,O,K,iC;Q,c,G;Q,S,K;Y,I,C,W,G;Q;Q,E,S,G,M,I,G,O,M,C,K,C,G,S,G,E,S,E,I,I,A,C;I;A;AAEA,IAAA,wBAAA,WAAA,GAAA,SAAA,MAAA,EAAA;IAAoD,UAAA,uBAAA;IAApD,SAAA,wBAAA;Q,O,W,I,I,O,K,C,I,E,c,I;IAEA;IAAA,OAAA;AAAA,EAFoD,CAAA,GAAA,wBAAgB,AAAhB;;;A;;A,oD;ACCpD;AACA;A,I,Y,a,U,S,I,A,W;I,I,gB,S,C,E,C,E;Q,gB,O,c,I,C;Y,W,E;Q,C,a,S,S,C,E,C,E;Y,E,S,G;Q,K,S,C,E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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-a5e75ab7956ef7b1.js","src/worker/main.ts","src/render/index.ts","src/render/vector/vec2.ts","src/render/vector/vec2Math.ts","src/render/vector/exceptions.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/render/vector/math.ts","src/render/scenes/all.ts","src/render/scenes/scene1.ts","src/render/scenes/baseScene.ts","src/render/generators/totalObjectsGenerator.js","src/render/generators/objectsGenerator.ts","src/render/items/circle.ts","src/render/items/item.ts","src/render/objects/ball.ts","src/render/vector/vec2Line.ts","src/render/objects/types.ts","src/render/objects/collisionModels.ts","src/render/objects/object.ts","src/render/renderableObjects/object.ts","src/render/objects/immovableBall.ts","src/render/renderableObjects/immovableLine.js","src/render/objects/immovableLine.ts","src/render/items/line.js","src/render/items/circleWithText.ts","src/render/items/utils/index2color.ts","src/render/constrains/viewport.js","src/render/constrains/constrain.ts","src/render/scenes/scene2.ts","src/render/constrains/circle.ts","src/render/scenes/scene3.ts","src/render/primitives/triangle.ts","src/render/objects/ImmovablePolygon.ts","src/render/objects/immovable.ts","src/render/items/polygonRainbow.ts","src/render/items/polygon.ts","src/render/stats.ts","src/render/solver/gridSolver.ts","src/render/solver/gridSolverSpace.ts","src/render/solver/baseSolverSpace.ts","src/render/solver/baseSolver.ts","src/host/messages.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"a8fb9c35fdafe466\";module.bundle.HMR_BUNDLE_ID = \"c2528bfa8e789c37\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { Render } from \"../render\";\nimport { MessageType } from \"../host/messages\";\n\nlet render;\n\nonmessage = function (event ) {\n    switch (event.data.type) {\n        case MessageType.MessageInit:\n            render = new Render(event.data.canvas);\n            render.start();\n            break;\n        case MessageType.MessageUserInput:\n            if (render) {\n                render.processUserInput(event.data.event);\n            }\n            break;\n        case MessageType.MessageEngineEvent:\n            if (render) {\n                render.processEngineEvent(event.data.event);\n            }\n            break;\n    }\n}","import {Vec2} from \"./vector/vec2\";\nimport {GridOptimizedSolver} from \"./solver/gridSolver\";\nimport {RenderableObject} from \"./renderableObjects/object\";\nimport {Frame} from \"./items/frame\";\nimport {Scene1} from \"./scenes/scene1\";\nimport {Constrain} from \"./constrains/constrain\";\nimport {BaseScene, SceneName} from \"./scenes/baseScene\";\nimport {AnyUIEvent, UIKeyboardEvent} from \"../host/input\";\nimport { Item } from \"./items/item\";\nimport {AnyEngineEvent, LoadSceneEngineEvent} from \"./events/engine\";\nimport {ENGINE_SCENES} from \"./scenes/all\";\nimport {Stats, StatsItem} from \"./stats\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {BaseSolver} from \"./solver/baseSolver\";\nimport {QuadTreeSolver} from \"./solver/quadTreeSolver\";\n\nexport class Render {\n    /**\n     * List of balls\n     * @type {RenderableObject[]}\n     */\n    objects: RenderableObject<BaseSolverObject, Item>[] = [];\n\n    /**\n     * @type {Constrain}\n     */\n    _constrains = null;\n\n    /**\n     * Solver for physics\n     * @type {BaseSolver}\n     */\n    solver:BaseSolver = null;\n\n    flagRenderGrid = false;\n    flagRenderPreviousPosition = false;\n\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n\n    timeRenderStart: number;\n    timeRenderEnd: number;\n    step: number;\n\n    items: Item[];\n\n    scene: BaseScene;\n    stats: Stats;\n\n    constructor(canvas) {\n        this.stats = new Stats();\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.timeRenderStart = performance.now();\n        this.timeRenderEnd = performance.now();\n        this.step = 0;\n\n        /**\n         * @type {RenderableObject[]}\n         */\n        this.objects = [];\n\n        this.items = [];\n\n        this.solver = null\n\n        this.configure();\n    }\n\n    reset() {\n        this.objects = [];\n        this.items = [];\n        this.solver.reset();\n    }\n\n    configure() {\n        this.solver = new GridOptimizedSolver(\n            new Vec2(\n                this.canvas.width,\n                this.canvas.height\n            ),\n            this.stats\n        );\n\n        this.context.font = '10px serif';\n\n        this.loadScene(\"scene1\");\n    }\n\n    processUserInput(event: AnyUIEvent) {\n        const keyboardEvent = event as UIKeyboardEvent;\n        if (keyboardEvent.keyPressed === 'g') {\n            this.flagRenderGrid = !this.flagRenderGrid;\n        }\n\n        if (keyboardEvent.keyPressed === 'p') {\n            this.flagRenderPreviousPosition = !this.flagRenderPreviousPosition;\n        }\n\n        this.scene.processUserInput(event);\n    }\n\n    processEngineEvent(event: AnyEngineEvent) {\n        const loadSceneEvent = event as LoadSceneEngineEvent;\n\n        if (loadSceneEvent.scene) {\n            this.loadScene(loadSceneEvent.scene);\n        }\n    }\n\n    loadScene(sceneName: SceneName) {\n        this.reset();\n\n        const Scene = ENGINE_SCENES[sceneName];\n        this.scene = new Scene(this);\n    }\n\n    /**\n     * @param {RenderableObject} obj\n     */\n    addObject(obj: RenderableObject<BaseSolverObject, Item>) {\n        this.objects.push(obj);\n        this.solver.addObject(obj.solverObject);\n    }\n\n    update(time) {\n        this.solver.update(time);\n    }\n\n    tick() {\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        const timePassed = this.step / 1000;\n\n        this.scene.tick(timePassed);\n        this.update(timePassed);\n\n        this.clear();\n        this.renderItems();\n\n        if (this.flagRenderGrid) {\n            this.renderGrid();\n        }\n\n        if (this.flagRenderPreviousPosition) {\n            this.renderPreviousPosition();\n        }\n\n        this.printFPS();\n        this.stats.resetTick();\n\n        Vec2.lengthCallsCount = 0;\n        Vec2.length2CallsCount = 0;\n    }\n\n    nextFrame = (time) => {\n        this.step = time - this.timeRenderEnd;\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = time;\n        self.requestAnimationFrame(this.nextFrame);\n    }\n\n    nextInterval = () => {\n        this.timeRenderStart = performance.now()\n        this.step = this.timeRenderStart - this.timeRenderEnd;\n\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = performance.now();\n    }\n\n    renderItems() {\n        this.items.forEach(item => item.render());\n        this.objects.forEach((obj) => obj.render());\n    }\n\n    printText(text, x, y) {\n        this.context.fillStyle = \"#ffffff\";\n        this.context.textAlign = \"start\";\n        this.context.fillText(text, x, y);\n    }\n\n    printFPS() {\n        this.context.fillStyle = 'rgba(0,0,0,0.1)';\n        this.context.fillRect(0, 0, 100, 60);\n        this.printText(`${Math.round(this.step)} ms / ${Math.round(1000/this.step)} FPS`, 0, 10);\n        this.printText(`Length calls: ${Vec2.lengthCallsCount}`, 0 , 20);\n        this.printText(`Lenght2 calls: ${Vec2.length2CallsCount}`, 0 , 30);\n        this.printText(`Objects: ${this.objects.length}`, 0, 40);\n        this.printText(`Compares per object: ${Math.round(Vec2.lengthCallsCount / this.objects.length)}`, 0, 50);\n\n        const stats = this.stats.getTickData();\n        stats.forEach((item: StatsItem, index: number) => {\n           this.printText(`${item.key}: ${item.value}`, 0, index * 10 + 60);\n        });\n    }\n\n    clear() {\n        this.context.fillStyle = \"rgba(0, 0, 0, 0.9)\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    }\n\n    start() {\n        if (self.requestAnimationFrame) {\n            self.requestAnimationFrame(this.nextFrame);\n        } else {\n            setInterval(this.nextInterval, 16)\n        }\n    }\n\n    renderGrid() {\n        this.solver.debugRender(this.context);\n        this.solver.objects.forEach(object => object.debugRender(this.context));\n    }\n\n    renderPreviousPosition() {\n        this.objects.forEach((renderableObject) => {\n            const position = renderableObject.solverObject.previousPosition;\n            this.context.fillStyle = 'rgba(0, 0, 255, 0.5)';\n            this.context.beginPath()\n            this.context.arc(\n                position.x,\n                position.y,\n                10,\n                0,\n                2 * Math.PI\n            )\n            this.context.fill();\n        })\n    }\n\n    set constrain(constrain: Constrain) {\n        this._constrains = constrain;\n        this.solver.constrains = this._constrains;\n    }\n\n    get constrain(): Constrain {\n        return this._constrains;\n    }\n}","import { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR2, NullableNumber } from \"./math\";\nimport { Vec2ExceptionNoPerpendicularVectorToZeroVector } from \"./exceptions\";\n\nexport class Vec2 {\n    private _x: number = 0;\n    private _y: number = 0;\n    private _length: NullableNumber = null;\n    private _length2: NullableNumber = null;\n\n    static lengthCallsCount = 0;\n    static length2CallsCount = 0;\n\n    constructor(x: number, y: number, l?: number) {\n        this._x = x;\n        this._y = y;\n\n        if (l) {\n            this._length = l;\n            this._length2 = l * l;\n        }\n    }\n\n    get x(): number {\n        return this._x;\n    }\n\n    get y(): number {\n        return this._y;\n    }\n\n    set x(x: number) {\n        this._x = x;\n        this._length = null;\n    }\n\n    set y(y:number) {\n        this._y = y;\n        this._length = null;\n    }\n\n    get length(): number {\n        if (this._length === null) {\n            this._length = Math.sqrt(this.x*this.x + this.y*this.y);\n            Vec2.lengthCallsCount++;\n        }\n\n        return this._length;\n    }\n\n    /**\n     * Returns length^2\n     */\n    get length2(): number {\n        if (this._length2 === null) {\n            this._length2 = this._x*this._x + this._y*this._y;\n            Vec2.length2CallsCount++;\n        }\n\n        return this._length2;\n    }\n\n    /**\n     * Adds vec2 to current vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    addSelf(vec2: Vec2): Vec2 {\n        this._x += vec2.x;\n        this._y += vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Subtract from current vector given vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    subSelf(vec2: Vec2): Vec2 {\n        this._x -= vec2.x;\n        this._y -= vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Flips along X axis\n     * @returns {Vec2}\n     */\n    flipYSelf(): Vec2 {\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Flips along Y axis\n     * @returns {Vec2}\n     */\n    flipXSelf(): Vec2 {\n        this._x = -this._x;\n        return this;\n    }\n\n    flipSelf(): Vec2 {\n        this._x = -this._x;\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Checks if this vector equals given vector using global MATH_ERROR const\n     * @param vec2\n     */\n    equals(vec2) {\n        return Vec2Math.distance2(this, vec2) < MATH_ERROR2;\n    }\n\n    /**\n     * Sums current vector and given vector and returns new vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sum(vec2: Vec2): Vec2 {\n        return new Vec2(this.x + vec2.x, this.y + vec2.y);\n    }\n\n    /**\n     * Calculate difference between current vector and given vector and returns\n     * new vector\n     *\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    diff(vec2: Vec2) {\n        return new Vec2(this.x - vec2.x, this.y - vec2.y);\n    }\n\n    /**\n     * Multiplicates vector by number\n     * @param {number} value\n     * @returns {Vec2}\n     */\n    mul(value: number) {\n        return new Vec2(this.x * value, this.y * value);\n    }\n\n    copy() {\n        return new Vec2(this.x, this.y);\n    }\n\n     applySelf(callback): Vec2 {\n        this.x = callback(this.x);\n        this.y = callback(this.y);\n        return this;\n    }\n\n    /**\n     * Checks if this vector inside rect created by 2 other vectors.\n     * @param vec1\n     * @param vec2\n     */\n    isInsideRect(vec1: Vec2, vec2: Vec2) {\n        const leftTopX = Math.min(vec1.x, vec2.x);\n        const leftTopY = Math.min(vec1.y, vec2.y);\n        const rightBottomX = Math.max(vec1.x, vec2.x);\n        const rightBottomY = Math.max(vec1.y, vec2.y);\n\n        return this._x >= leftTopX && this._x <= rightBottomX && this._y >= leftTopY && this._y <= rightBottomY;\n    }\n\n    /**\n     * Returns normalized vector\n     * @returns {Vec2}\n     */\n    get ort() {\n        const l = this.length;\n        return new Vec2(this.x / l, this.y / l, 1);\n    }\n\n    get perpendicular() {\n        if (this.x === 0) {\n            // Vertical\n            if (this.y > 0) {\n                return Vec2.Horizontal().ort\n            } else if (this.y < 0) {\n                return Vec2.Horizontal().ort.flipSelf();\n            } else {\n                throw new Vec2ExceptionNoPerpendicularVectorToZeroVector();\n            }\n        } else if (this.y === 0) {\n            // Horizontal\n            if (this.x > 0) {\n                return Vec2.Vertical().ort\n            } else if (this.x < 0) {\n                return Vec2.Vertical().ort.flipSelf();\n            }\n        }\n\n        return new Vec2(\n            -this.y / this.x,\n            1\n        ).ort;\n    }\n\n    static Zero() {\n        return new Vec2(0, 0);\n    }\n\n    static Horizontal() {\n        return new Vec2(1, 0);\n    }\n\n    static Vertical() {\n        return new Vec2(0, 1);\n    }\n\n    static Down(y) {\n        return new Vec2(0, y);\n    }\n\n    static Right(x) {\n        return new Vec2(x, 0);\n    }\n}\n\n\n\n\n\n\n\n\n","import { Vec2 } from \"./vec2\";\nimport { Vec2ExceptionParallel } from \"./exceptions\";\nimport { Vec2Line } from \"./vec2Line\";\n\nexport class Vec2Math {\n    static diff(vec1: Vec2, vec2: Vec2): Vec2 {\n        return new Vec2(vec1.x - vec2.x, vec1.y - vec2.y);\n    }\n\n    static mul(vec1: Vec2, scalar: number): Vec2 {\n        return new Vec2(vec1.x * scalar, vec1.y * scalar);\n    }\n\n    /**\n     * Calculates distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length;\n    }\n\n    /**\n     * Calculates square of distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance2(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length2;\n    }\n\n    /**\n     * Finds intersection between 2 lines\n     * @param {Vec2Line} line1\n     * @param {Vec2Line} line2\n     * @returns {Vec2}\n     */\n    static intersect(line1, line2) {\n        if (line1.K === line2.K) {\n            throw new Vec2ExceptionParallel()\n        }\n\n        if (isNaN(line1.K) || isNaN(line2.K)) {\n            // One of two lines is vertical\n            if (isNaN(line1.K)) {\n                return line2.makeVec2FromX(line1._vec1.x);\n            } else {\n                return line1.makeVec2FromX(line2._vec1.x);\n            }\n        } else {\n            const x = (line1.B - line2.B) / (line2.K - line1.K);\n            return line1.makeVec2FromX(x);\n        }\n    }\n\n    /**\n     * Dot product of 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static dot(vec1: Vec2, vec2: Vec2): number {\n        return vec1.x * vec2.x + vec1.y * vec2.y;\n    }\n\n    /**\n     *\n     * @param {Vec2} vec\n     * @param {Vec2Line} line\n     * @returns {Vec2}\n     */\n    static mirror(vec: Vec2, line: Vec2Line) {\n        const normal = line.direction.perpendicular;\n        return vec.diff(\n            normal.mul(2 * Vec2Math.dot(vec, normal))\n        );\n    }\n\n    static scale(vec1: Vec2, vec2: Vec2) {\n        return new Vec2(\n            vec1.x / vec2.x,\n            vec1.y / vec2.y\n        )\n    }\n}\n","export class Vec2Exception extends Error {}\n\nexport class Vec2ExceptionParallel extends Vec2Exception {}\nexport class Vec2ExceptionNoPerpendicularVectorToZeroVector extends Vec2Exception {}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","export const MATH_ERROR = 0.000001;\nexport const MATH_ERROR2 = MATH_ERROR * MATH_ERROR;\nexport const SQRT2 = Math.sqrt(2);\n\n/**\n * Checks if a equals b with given error\n * @param {number} a\n * @param {number} b\n * @param {number} error\n * @returns {boolean}\n */\nexport function isEqual(a, b, error) {\n    return Math.abs(a - b) < error;\n}\n\nexport type NullableNumber = number | null;\n","import {Scene1} from \"./scene1\";\nimport {Scene2} from \"./scene2\";\nimport {Scene3} from \"./scene3\";\n\nexport const ENGINE_SCENES = {\n    \"scene1\": Scene1,\n    \"scene2\": Scene2,\n    \"scene3\": Scene3\n}","import {BaseScene} from \"./baseScene\";\nimport {CombineGenerator} from \"../generators/combineGenerator\";\nimport { TotalObjectsGenerator } from \"../generators/totalObjectsGenerator\";\nimport { Render} from \"../index\";\nimport {Circle} from \"../items/circle\";\nimport {Vec2} from \"../vector/vec2\";\nimport {Vec2Math} from \"../vector/vec2Math\";\nimport {BallsObject} from \"../objects/ball\";\nimport {RenderableObject} from \"../renderableObjects/object\";\nimport {ImmovableBallsObject} from \"../objects/immovableBall\";\nimport {ImmovableLineRenderableObject} from \"../renderableObjects/immovableLine\";\nimport {ImmovableLineObject} from \"../objects/immovableLine\";\nimport {Line} from \"../items/line\";\nimport {CircleWithText} from \"../items/circleWithText\";\nimport { index2color } from \"../items/utils/index2color\";\nimport { ViewportConstrain } from \"../constrains/viewport\";\nimport {AnyUIEvent, UIMouseEvent} from \"../../host/input\";\n\nconst milkShakePoints = [\n    new Vec2(0, 0),\n    new Vec2(70, 380),\n    new Vec2(270, 380),\n    new Vec2(340, 0)\n]\n\nconst milkShakeLines = [\n    [milkShakePoints[0], Vec2Math.diff(milkShakePoints[0], milkShakePoints[1]).flipSelf()],\n    [milkShakePoints[1], Vec2Math.diff(milkShakePoints[1], milkShakePoints[2]).flipSelf()],\n    [milkShakePoints[2], Vec2Math.diff(milkShakePoints[2], milkShakePoints[3]).flipSelf()]\n]\n\nconst ballsColors = {\n    57: '#ffffff',\n    78: '#ffffff',\n    71: '#ffffff',\n    86: '#ffffff',\n    200: '#ffffff',\n    202: '#ffffff',\n    218: '#ffffff',\n}\n\nexport class Scene1 extends BaseScene {\n    canMoveRedObject: boolean = false;\n\n    constructor(engine: Render) {\n        super(engine)\n\n        const canvasCenter = new Vec2(\n            this.engine.canvas.width / 2,\n            this.engine.canvas.height / 2\n        );\n\n        this.generator =\n            this.createBallsGenerator(\n                canvasCenter,\n                new Vec2(\n                    300, 300\n                ),\n                new Vec2(2, -2)\n            );\n\n\n        this.createBottomBouncyLine();\n        this.createMilkShake(canvasCenter);\n        this.createActor();\n        this.initConstrain();\n    }\n\n    createBallsGenerator(canvasCenter, pointDelta, baseBallVelocity) {\n        const ballGeneratorPoint = canvasCenter.diff(pointDelta);\n        const ballVelocity = baseBallVelocity.mul(1/this.engine.solver.subSteps);\n\n        return new TotalObjectsGenerator(\n            this.engine.solver,\n            1700,\n            7,\n            (index) => {\n                const obj = new RenderableObject<BallsObject, CircleWithText>(\n                    (new BallsObject(\n                        ballGeneratorPoint,\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.engine.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index+200),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj2 = new RenderableObject<BallsObject, CircleWithText>(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.engine.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index+100),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj3 = new RenderableObject<BallsObject, CircleWithText>(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(-20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.engine.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj4 = new RenderableObject<BallsObject, CircleWithText>(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Right(-40)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.engine.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index-100),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                return [obj,obj2, obj3, obj4];\n            }\n        )\n    }\n\n    createBottomBouncyLine() {\n        // Bottom bouncy line\n        const bottomLine = new ImmovableLineObject(\n            new Vec2(\n                0, this.engine.canvas.height - 10\n            ),\n            new Vec2(\n                this.engine.canvas.width, 0\n            )\n        )\n\n        bottomLine.bounceValue = 1.5;\n\n        this.engine.addObject(\n            new ImmovableLineRenderableObject(\n                bottomLine,\n                new Line(\n                    this.engine.context,\n                    Vec2.Zero(),\n                    Vec2.Zero(),\n                    '#ff0000'\n                )\n            )\n        )\n    }\n\n    createMilkShake(canvasCenter) {\n        milkShakeLines.forEach(line => {\n            this.engine.addObject(new ImmovableLineRenderableObject(\n                new ImmovableLineObject(\n                    line[0].sum(\n                        canvasCenter.diff(new Vec2(340/2, 380/2))\n                    ),\n                    line[1]\n                ),\n                new Line(\n                    this.engine.context,\n                    Vec2.Zero(),\n                    Vec2.Zero(),\n                    '#ffffff'\n                )\n            ));\n        });\n    }\n\n    initConstrain() {\n        this.engine.constrain = new ViewportConstrain(this.engine.canvas.width, this.engine.canvas.height)\n    }\n\n    createActor() {\n        this.actor = new RenderableObject<ImmovableBallsObject, Circle>(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.engine.context, Vec2.Zero(), 30, '#ff0000')\n        );\n        this.engine.addObject(this.actor);\n    }\n\n    getActor() {\n        return this.actor;\n    }\n\n    tick(timePassed: number) {\n        const newBalls = this.generator.getNextObjects(timePassed);\n        if (newBalls) {\n            newBalls.forEach(ball => this.engine.addObject(ball));\n        }\n    }\n\n    processUserInput(event: AnyUIEvent) {\n        const mouseEvent = event as UIMouseEvent;\n\n        if (mouseEvent.leftButtonDown) {\n            if (this.actor.solverObject.isPointInsideObject(\n                new Vec2(\n                    mouseEvent.screenX,\n                    mouseEvent.screenY\n                )\n            )) {\n                this.canMoveRedObject = true;\n            }\n\n            if (this.canMoveRedObject) {\n                this.actor.solverObject.moveBy(\n                    new Vec2(\n                        mouseEvent.dx,\n                        mouseEvent.dy\n                    )\n                )\n            }\n        } else {\n            this.canMoveRedObject = false;\n        }\n    }\n}","import { ObjectsGenerator } from \"../generators/objectsGenerator\";\nimport { RenderableObject } from \"../renderableObjects/object\";\nimport { Render} from \"../index\";\nimport {UIEvent} from \"../../host/input\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {Item} from \"../items/item\";\n\nexport type SceneName = string;\n\nexport abstract class BaseScene {\n    engine: Render;\n    generator: ObjectsGenerator;\n    actor: RenderableObject<BaseSolverObject, Item>;\n\n    protected constructor(engine: Render) {\n        this.engine = engine;\n    }\n\n    abstract tick(timePassed: number): void;\n    abstract processUserInput(event: UIEvent): void;\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\nexport class TotalObjectsGenerator extends ObjectsGenerator {\n    constructor(solver, count, delay, createCallback) {\n        super(solver);\n        this.limit = count;\n        this.total = 0;\n\n        this.delay = delay;\n        this.create = createCallback;\n        this.lastCreateTime = 0;\n    }\n\n    getNextObjects(step) {\n        if (this.total > this.limit) {\n            return [];\n        }\n\n        this.lastCreateTime += 1;\n        if (this.lastCreateTime > this.delay) {\n            const newItems = this.create(this.total);\n            this.lastCreateTime = 0;\n            this.total+= newItems.length;\n\n            return newItems;\n        }\n\n        return []\n    }\n}","export class ObjectsGenerator {\n    solver = null;\n    constructor(solver) {\n        this.solver = solver;\n    }\n\n    // TODO Make me iterator\n    getNextObjects(step) {\n        return [];\n    }\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Circle extends Item {\n    r = 0;\n    color = '#00ff00';\n\n    constructor(context: CanvasRenderingContext2D, position: Vec2, r: number, color: string) {\n        super(context, position);\n\n        if (r) {\n            this.r = r;\n        }\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.beginPath()\n        this.context.arc(\n            this.position.x,\n            this.position.y,\n            this.r,\n            0,\n            2 * Math.PI\n        )\n\n        this.context.fillStyle = this.color;\n        this.context.fill();\n    }\n}","import {Vec2} from \"../vector/vec2\";\n\nexport class Item {\n    context: CanvasRenderingContext2D;\n    position: Vec2 = Vec2.Zero();\n\n    constructor(context: CanvasRenderingContext2D, position: Vec2) {\n        this.context = context;\n        this.position = position;\n    }\n\n    /**\n     * Method immediately renders object on context\n     */\n    render() {\n\n    }\n\n    /**\n     * Method tries to put object in render block\n     */\n    queue() {\n\n    }\n}","import { Vec2 } from \"../vector/vec2\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport { Vec2Math } from \"../vector/vec2Math\";\nimport {SolverObjectTypes} from \"./types\";\nimport { collide } from \"./collisionModels\";\nimport {BaseSolverObject} from \"./object\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\n\nconst MAX_VELOCITY = 10;\nconst MAX_VELOCITY2 = MAX_VELOCITY ** 2;\n\nexport class BallsObject extends BaseSolverObject {\n    acc = Vec2.Zero();\n\n    radius = 10;\n    bounceValue = 1.1;\n    motionReduce = 0.999;\n\n    type = SolverObjectTypes.TypeBall;\n    immovable = false;\n\n    private _radius2;\n\n    /**\n     * Creates balls object\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super();\n        this.previousPosition = position.copy();\n        this.currentPosition = position.copy();\n        if (radius !== undefined) {\n            this.radius = radius\n        }\n\n        this._radius2 = this.radius * this.radius;\n    }\n\n    /**\n     * Updates state of object\n     * @param {number} step\n     */\n    update(step) {\n        let velocity = this.velocity.mul(this.motionReduce);\n        if (velocity.length2 > MAX_VELOCITY2) {\n            velocity = velocity.ort.mul(MAX_VELOCITY);\n        }\n        this.previousPosition = this.currentPosition.copy();\n        this.currentPosition.addSelf(\n            velocity.addSelf(\n                this.acc.mul(step * step)\n            )\n        )\n        this.acc = Vec2.Zero();\n    }\n\n    accelerate(acc) {\n        this.acc.addSelf(acc);\n        return this;\n    }\n\n    setVelocity(vel) {\n        this.velocity = vel;\n        return this;\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    collide(obj) {\n        collide(this, obj)\n    }\n\n    addToSpace(collisionGrid: BaseSolverSpace) {\n        collisionGrid.addPointObject(\n            Math.floor(this.currentPosition.x),\n            Math.floor(this.currentPosition.y),\n            this\n        )\n    }\n\n    moveBy(delta: Vec2) {\n        this.currentPosition.addSelf(delta);\n    }\n\n    moveTo(position: Vec2) {\n        this.currentPosition = position.copy();\n    }\n\n    isPointInsideObject(point: Vec2): boolean {\n        return Vec2Math.distance(this.currentPosition, point) < this.radius;\n    }\n\n    get velocity(): Vec2 {\n        return Vec2Math.diff(\n            this.currentPosition,\n            this.previousPosition\n        );\n    }\n\n    set velocity(v) {\n        this.previousPosition = Vec2Math.diff(this.currentPosition,v);\n    }\n\n    /**\n     *\n     * @returns {Vec2Line}\n     */\n    get movementVector() {\n        return new Vec2Line(this.previousPosition, this.currentPosition);\n    }\n\n    get radius2() {\n        return this._radius2;\n    }\n}","import { Vec2 } from \"./vec2\";\nimport { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR, isEqual } from \"./math\";\n\nexport class Vec2Line {\n    private _vec1: Vec2 = Vec2.Zero();\n    private _vec2: Vec2 = Vec2.Zero();\n\n    private _direction: Vec2;\n    private _ort: Vec2;\n\n    private _length: number;\n    private _length2: number;\n\n    /**\n     * Y = K*X + B\n     * @type {number}\n     */\n    private _k: number = 0;\n    private _b: number = 0;\n\n    constructor(vec1: Vec2, vec2: Vec2) {\n        this._vec1 = vec1;\n        this._vec2 = vec2;\n\n        this._direction = Vec2Math.diff(this._vec1, this._vec2);\n        this._length = this._direction.length;\n        this._length2 = this._direction.length2;\n        this._ort = this._direction.ort;\n\n        this.calculateKB();\n    }\n\n    /**\n     * Determines if given point lays on the line\n     * @param vec\n     * @returns {boolean}\n     */\n    inBetween(vec) {\n        const l1 = Vec2Math.diff(vec, this._vec1).length;\n        const l2 = Vec2Math.diff(this._vec2, vec).length;\n        const sum = l1 + l2;\n\n\n\n        return isEqual(this._length, sum, MATH_ERROR);\n    }\n\n    /**\n     * Checks if vector which lies on this line is in between vec1 and vec2\n     * @param vec\n     */\n    inBetweenFast(vec: Vec2) {\n        return vec.isInsideRect(this._vec1, this._vec2);\n    }\n\n    calculateKB() {\n        if (this._vec1.y === this._vec2.y) {\n            // Horizontal line\n            this._b = this._vec1.y;\n            this._k = 0;\n        } else if (this._vec1.x === this._vec2.x) {\n            // Vertical line\n            this._b = NaN;\n            this._k = NaN;\n        } else {\n            this._b = (this._vec1.x * this._vec2.y - this._vec1.y * this._vec2.x) / (this._vec1.x - this._vec2.x)\n            this._k = (this._vec1.y - this._vec2.y) / (this._vec1.x - this._vec2.x);\n        }\n    }\n\n    makeVec2FromX(x) {\n        return new Vec2(x, this._k * x + this._b);\n    }\n\n    copy() {\n        return new Vec2Line(\n            this._vec1,\n            this._vec2\n        )\n    }\n\n    moveBy(vec) {\n        this._vec1.addSelf(vec);\n        this._vec2.addSelf(vec);\n        this.calculateKB();\n    }\n\n    getPointProjection(vec) {\n        const a = this.direction;\n        const b = Vec2Math.diff(vec, this._vec1);\n        const cosabD = Vec2Math.dot(a, b) / (this.length);\n\n        return this._vec1.sum(\n            this.ort.mul(cosabD)\n        );\n    }\n\n    get B() {\n        return this._b;\n    }\n\n    get K() {\n        return this._k;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    get direction() {\n        return this._direction;\n    }\n\n    get ort() {\n        return this._ort;\n    }\n\n    get vec1() {\n        return this._vec1;\n    }\n\n    get vec2() {\n        return this._vec2;\n    }\n\n    static Vertical(x) {\n        return new Vec2Line(\n            new Vec2(x, 0),\n            new Vec2(x, Number.MAX_SAFE_INTEGER)\n        )\n    }\n\n    static Horizontal(y) {\n        return new Vec2Line(\n            new Vec2(0, y),\n            new Vec2(Number.MAX_SAFE_INTEGER, y)\n        )\n    }\n}","export enum SolverObjectTypes {\n    TypeNull = 0,\n    TypeBall = 1,\n    TypeImmovableBall = 2,\n    TypeImmovableLine = 3,\n    TypeImmovablePolygon = 4\n}\n","import {Vec2Math} from \"../vector/vec2Math\";\nimport {BallsObject} from \"./ball\";\nimport {SolverObjectTypes} from \"./types\";\nimport {ImmovableLineObject} from \"./immovableLine\";\nimport {ImmovablePolygon} from \"./ImmovablePolygon\";\nimport {Vec2Line} from \"../vector/vec2Line\";\n\n/**\n * Collision between 2 balls objects\n * @param {BallsObject} obj1\n * @param {BallsObject} obj2\n */\nexport function collideBallAndBall(obj1: BallsObject, obj2: BallsObject) {\n    const between = Vec2Math.diff(obj1.currentPosition, obj2.currentPosition);\n    const distance = between.length;\n    const requiredDistance = obj1.radius + obj2.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        obj1.currentPosition.addSelf(\n            Vec2Math.mul(normalized, obj1.radius / requiredDistance * delta * obj1.bounceValue)\n        );\n        obj2.currentPosition.subSelf(\n            Vec2Math.mul(normalized, obj2.radius / requiredDistance * delta * obj2.bounceValue)\n        );\n    }\n}\n\n/**\n * Collision between ball and immovable ball\n * @param {BallsObject} ball\n * @param {ImmovableBallsObject} immovable\n */\nexport function collideBallAndImmovableBall(ball, immovable) {\n    const between = Vec2Math.diff(\n        ball.currentPosition,\n        immovable.currentPosition\n    );\n\n    const distance = between.length;\n    const requiredDistance = ball.radius + immovable.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        ball.currentPosition.addSelf(\n            Vec2Math.mul(normalized, ball.radius / requiredDistance * delta * ball.bounceValue * immovable.bounceValue)\n        );\n    }\n}\n\nfunction _collideBallAndLine(ball: BallsObject, line: Vec2Line, lineBounce: number) {\n    try {\n        const projectionPoint = line.getPointProjection(ball.currentPosition);\n\n        // We definitely know that projection point is on the line, so we just need to check if it's\n        // between the ends.\n        if (line.inBetweenFast(projectionPoint)) {\n\n            const between = Vec2Math.diff(\n                projectionPoint,\n                ball.currentPosition\n            )\n\n            if (between.length2 < ball.radius2) {\n                const normalized = between.ort;\n\n                const delta = ball.radius - between.length;\n\n                ball.currentPosition.subSelf(\n                    Vec2Math.mul(normalized, delta * ball.bounceValue * lineBounce)\n                )\n            }\n        }\n    } catch (e) {\n    }\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovableLineObject} line\n */\nexport function collideBallAndImmovableLine(ball: BallsObject, line: ImmovableLineObject) {\n    _collideBallAndLine(ball, line._line, line.bounceValue);\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovablePolygon} polygon\n */\nexport function collideBallAndImmovablePolygon(ball: BallsObject, polygon: ImmovablePolygon) {\n    polygon.lines.forEach(line => _collideBallAndLine(ball, line._line, line.bounceValue))\n}\n\nfunction flipObjects(obj1, obj2) {\n    return {\n        a: obj2,\n        b: obj1\n    }\n}\n\nexport function collide(a, b) {\n    let obj1 = a;\n    let obj2 = b;\n    if (obj1.type > obj2.type) {\n        const flipped = flipObjects(obj1, obj2);\n        obj1 = flipped.a;\n        obj2 = flipped.b\n    }\n\n    switch (true) {\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeBall:\n            return collideBallAndBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableBall:\n            return collideBallAndImmovableBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableLine:\n            return collideBallAndImmovableLine(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovablePolygon:\n            return collideBallAndImmovablePolygon(obj1, obj2);\n        default:\n            return;\n    }\n}","import {SolverObjectTypes} from \"./types\";\nimport {Vec2} from \"../vector/vec2\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {Vec2Rect} from \"../vector/vec2Rect\";\n\nexport abstract class BaseSolverObject {\n    readonly type: SolverObjectTypes = SolverObjectTypes.TypeNull;\n    readonly index: number;\n    readonly immovable: boolean;\n\n    previousPosition = Vec2.Zero();\n    currentPosition = Vec2.Zero();\n\n    constructor() {\n        BaseSolverObject.index += 1;\n        this.index = BaseSolverObject.index;\n    }\n\n    update(step) {\n\n    }\n\n    accelerate(acc) {\n\n    }\n\n    collide(obj) {\n\n    }\n\n    inside(boundary: Vec2Rect):boolean {\n        return this.currentPosition.x >= boundary.left &&\n            this.currentPosition.x <= boundary.right &&\n            this.currentPosition.y >= boundary.top &&\n            this.currentPosition.y <= boundary.bottom;\n    }\n\n    abstract addToSpace(solverSpace: BaseSolverSpace);\n\n    debugRender(context: CanvasRenderingContext2D) {\n\n    }\n\n    toString() {\n        return 'BaseSolverObject';\n    }\n\n    abstract moveBy(delta: Vec2);\n    abstract moveTo(position: Vec2);\n\n    abstract isPointInsideObject(point: Vec2): boolean;\n\n    static index = 0;\n}\n","import {Item} from \"../items/item\";\nimport {BaseSolverObject} from \"../objects/object\";\n\nexport class RenderableObject<SolverObject extends BaseSolverObject, DrawItem extends Item> {\n    solverObject: SolverObject = null;\n    renderItem: DrawItem = null;\n\n    constructor(solverObject: SolverObject, renderItem: DrawItem) {\n        this.solverObject = solverObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        this.renderItem.position = this.solverObject.currentPosition;\n    }\n\n    render() {\n        this.update();\n        this.renderItem.render();\n    }\n}","import {BallsObject} from \"./ball\";\nimport {SolverObjectTypes} from \"./types\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {SQRT2} from \"../vector/math\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class ImmovableBallsObject extends BallsObject {\n    type = SolverObjectTypes.TypeImmovableBall;\n    immovable = true;\n    bounceValue = 0.5;\n\n    /**\n     * @type {Vec2}\n     * @private\n     */\n    _fixedPosition = null;\n\n    /**\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super(position, radius);\n        this._fixedPosition = position.copy();\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n    }\n\n    addToSpace(solverSpace: BaseSolverSpace) {\n        const vec = new Vec2(\n            this.radius * SQRT2,\n            this.radius * SQRT2\n        )\n\n        const leftTop = this.currentPosition.sum(vec);\n        const rightBottom = this.currentPosition.diff(vec);\n\n        solverSpace.addRectangularObject(\n            leftTop,\n            rightBottom,\n            this\n        );\n    }\n\n    moveTo(position: Vec2) {\n        this.currentPosition = position.copy();\n        this.previousPosition = position.copy();\n        this._fixedPosition = position.copy();\n    }\n}","import {RenderableObject} from \"./object\";\n\nexport class ImmovableLineRenderableObject extends RenderableObject {\n    /**\n     * @type {ImmovableLineObject}\n     */\n    solverObject = null;\n\n    constructor(ballsObject, renderItem) {\n        super(ballsObject);\n        this.solverObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        super.update();\n        this.renderItem.direction = this.solverObject._direction;\n    }\n}","import { BallsObject } from \"./ball\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport {SolverObjectTypes} from \"./types\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {Vec2} from \"../vector/vec2\";\nimport {Vec2Math} from \"../vector/vec2Math\";\n\nexport class ImmovableLineObject extends BallsObject {\n    _direction;\n    _line: Vec2Line;\n\n    type = SolverObjectTypes.TypeImmovableLine;\n    immovable = true;\n\n    bounceValue = 1;\n\n    constructor(position, direction) {\n        super(position, 0);\n        this._direction = direction;\n\n        this._line = new Vec2Line(\n            this.currentPosition.copy(),\n            this.currentPosition.copy().sum(this._direction)\n        )\n    }\n\n    update(step) {\n        this.currentPosition = this._line.vec1;\n        this.previousPosition = this._line.vec2;\n    }\n\n    addToSpace(solverSpace: BaseSolverSpace) {\n        solverSpace.addRectangularObject(\n            this._line.vec1,\n            this._line.vec2,\n            this\n        );\n    }\n\n    moveBy(delta: Vec2) {\n        this.currentPosition.addSelf(delta);\n        this.previousPosition.addSelf(delta);\n        this._line.moveBy(delta)\n    }\n\n    moveTo(position: Vec2) {\n        const delta = Vec2Math.diff(position, this._line.vec1);\n        this.moveBy(delta);\n    }\n\n    debugRender(context: CanvasRenderingContext2D) {\n        context.strokeStyle = '#00FF00';\n        context.beginPath(); // Start a new path\n        context.moveTo(this._line.vec1.x, this._line.vec1.y);\n        context.lineTo(this._line.vec2.x, this._line.vec2.y);\n        context.stroke(); // Render the path\n\n        context.fillStyle = '#000000';\n        context.fillRect(\n            this._line.vec1.x, this._line.vec1.y+5,\n            10,\n            -16\n        )\n        context.fillStyle = \"#ffffff\";\n        context.textAlign = \"start\";\n        context.fillText(`${this.index}`, this._line.vec1.x, this._line.vec1.y);\n    }\n\n    toString() {\n        return 'ImmovableLine';\n    }\n}\n\nexport function createImmovableLine(position: Vec2, direction: Vec2): ImmovableLineObject {\n    return new ImmovableLineObject(position, direction);\n}\n\nexport function createImmovableLineFrom2Points(point1: Vec2, point2: Vec2): ImmovableLineObject {\n    return new ImmovableLineObject(point1, Vec2Math.diff(point2, point1));\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Line extends Item {\n    direction = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, direction, color) {\n        super(context, position);\n\n        this.direction = direction;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.beginPath(); // Start a new path\n        this.context.moveTo(this.position.x, this.position.y);\n        this.context.lineTo(\n            this.position.x + this.direction.x,\n            this.position.y + this.direction.y\n        );\n        this.context.stroke(); // Render the path\n    }\n}","import {Circle} from \"./circle\";\n\nexport class CircleWithText extends Circle {\n    text:string = '';\n    textColor: string = '#ffffff';\n\n    constructor(context, position,r, color, text, textColor) {\n        super(context, position, r, color);\n        this.text = text;\n        if (textColor) {\n            this.textColor = textColor;\n        }\n    }\n\n    render() {\n        super.render();\n        this.context.fillStyle = this.textColor;\n        this.context.textBaseline = \"middle\";\n        this.context.textAlign = \"center\";\n        this.context.fillText(this.text, this.position.x, this.position.y);\n    }\n}","export function index2color(index) {\n    const frequency=5/1000;\n    const r = Math.floor(Math.sin(frequency*index + 0) * (127) + 128);\n    const g = Math.floor(Math.sin(frequency*index + 2) * (127) + 128);\n    const b = Math.floor(Math.sin(frequency*index + 4) * (127) + 128);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n}","import { Constrain } from \"./constrain\";\n\nexport class ViewportConstrain extends Constrain {\n    _width = 0;\n    _height = 0;\n\n    constructor(width, height) {\n        super()\n        this.width = width;\n        this.height = height;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    set width(width) {\n        this._width = width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    set height(height) {\n        this._height = height;\n    }\n\n    applyConstrain(obj) {\n        if (obj.currentPosition.x - obj.radius < 0) {\n            obj.currentPosition.x = obj.radius;\n        }\n\n        if (obj.currentPosition.x + obj.radius > this._width) {\n            obj.currentPosition.x = this._width - obj.radius;\n        }\n\n        if (obj.currentPosition.y - obj.radius < 0) {\n            obj.currentPosition.y = obj.radius;\n        }\n\n        if (obj.currentPosition.y + obj.radius > this._height) {\n            obj.currentPosition.y = this._height - obj.radius;\n        }\n    }\n}","import {BaseSolverObject} from \"../objects/object\";\n\nexport abstract class Constrain {\n    protected constructor() {}\n\n    /**\n     *\n     * @param {BaseSolverObject} obj\n     */\n    abstract applyConstrain(obj: BaseSolverObject): void;\n}","import {BaseScene} from \"./baseScene\";\nimport { Render} from \"../index\";\nimport {Circle} from \"../items/circle\";\nimport { CircleWithText } from \"../items/circleWithText\";\nimport {Vec2} from \"../vector/vec2\";\nimport {RenderableObject} from \"../renderableObjects/object\";\nimport {ImmovableBallsObject} from \"../objects/immovableBall\";\nimport { CircleConstrain } from \"../constrains/circle\";\nimport {ObjectsGenerator} from \"../generators/objectsGenerator\";\nimport {AnyUIEvent, UIMouseEvent} from \"../../host/input\";\nimport {BallsObject} from \"../objects/ball\";\nimport {index2color} from \"../items/utils/index2color\";\n\nexport class Scene2 extends BaseScene {\n    _canMoveRedObject: boolean = false;\n    timePassedSinceLastBallCreated: number = 0;\n    ballIndex: number = 0;\n    center: Vec2;\n    radius: number;\n\n    constructor(engine: Render) {\n        super(engine)\n\n        this.center = new Vec2(\n            this.engine.canvas.width / 2,\n            this.engine.canvas.height / 2\n        );\n\n        this.radius = Math.min(this.center.x, this.center.y);\n\n        this.generator = new ObjectsGenerator(this.engine.solver);\n        this.createActor();\n        this.initConstrain();\n    }\n\n    createBall() {\n        const baseBallVelocity = new Vec2(0, 0);\n        const ballGeneratorPoint = this.actor.solverObject.currentPosition;\n        const toCenter = ballGeneratorPoint.diff(this.center);\n        const n = toCenter.ort;\n\n        const ballVelocity = n.mul(-1);\n        const obj = new RenderableObject<BallsObject, CircleWithText>(\n            (new BallsObject(\n                ballGeneratorPoint.diff(n.mul(40)),\n                5\n            )).setVelocity(ballVelocity),\n            new CircleWithText(\n                this.engine.context,\n                Vec2.Zero(),\n                7,\n                index2color(this.ballIndex+200),\n                '',\n                '#000000'\n            )\n        )\n\n        this.engine.addObject(obj);\n        this.ballIndex++;\n    }\n\n    createActor() {\n        this.actor = new RenderableObject<ImmovableBallsObject, Circle>(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.engine.context, Vec2.Zero(), 30, '#ff0000')\n        );\n        this.engine.addObject(this.actor);\n    }\n\n    initConstrain() {\n        this.engine.constrain = new CircleConstrain(\n            this.center,\n            this.radius\n        )\n\n        this.engine.items.push(\n            new Circle(\n                this.engine.context,\n                this.center,\n                this.radius,\n                '#ffffff'\n            )\n        );\n    }\n\n    getActor() {\n        return this.actor;\n    }\n\n    tick(timePassed: number) {\n        if (this.canMoveRedObject) {\n            this.timePassedSinceLastBallCreated += timePassed;\n\n            if(this.timePassedSinceLastBallCreated > 0.05) {\n                this.timePassedSinceLastBallCreated = 0;\n                this.createBall();\n            }\n        }\n    }\n\n    processUserInput(event: AnyUIEvent) {\n        const mouseEvent = event as UIMouseEvent;\n\n        if (mouseEvent.leftButtonDown) {\n            if (this.actor.solverObject.isPointInsideObject(\n                new Vec2(\n                    mouseEvent.screenX,\n                    mouseEvent.screenY\n                )\n            )) {\n                this.canMoveRedObject = true;\n            }\n\n            if (this.canMoveRedObject) {\n\n            }\n        } else {\n            this.canMoveRedObject = false;\n        }\n\n        if (mouseEvent.screenX || mouseEvent.screenY) {\n            this.actor.solverObject.moveTo(\n                new Vec2(\n                    mouseEvent.screenX,\n                    mouseEvent.screenY\n                )\n            )\n        }\n    }\n\n    set canMoveRedObject(can: boolean) {\n        this._canMoveRedObject = can;\n        if (can) {\n            this.actor.renderItem.color = '#00ff00';\n        } else {\n            this.actor.renderItem.color = '#ff0000';\n        }\n    }\n\n    get canMoveRedObject(): boolean {\n        return this._canMoveRedObject;\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class CircleConstrain extends Constrain {\n    /**\n     *\n     * @type {Vec2}\n     */\n    center = Vec2.Zero();\n\n    radius = 0;\n\n    constructor(center, radius) {\n        super();\n\n        this.center = center;\n        this.radius = radius;\n    }\n\n    applyConstrain(obj) {\n        const toCenter = obj.currentPosition.diff(this.center);\n        const distance = toCenter.length;\n        const r = obj.radius || 0;\n\n        if (distance > (this.radius - r)) {\n            const n = toCenter.ort;\n            obj.moveTo(this.center.sum(n.mul(this.radius - r)));\n        }\n    }\n\n}","import {BaseScene} from \"./baseScene\";\nimport { Render} from \"../index\";\nimport {Circle} from \"../items/circle\";\nimport { CircleWithText } from \"../items/circleWithText\";\nimport {Vec2} from \"../vector/vec2\";\nimport {RenderableObject} from \"../renderableObjects/object\";\nimport { CircleConstrain } from \"../constrains/circle\";\nimport {ObjectsGenerator} from \"../generators/objectsGenerator\";\nimport {AnyUIEvent, UIMouseEvent} from \"../../host/input\";\nimport {BallsObject} from \"../objects/ball\";\nimport {index2color} from \"../items/utils/index2color\";\nimport {createTriangle} from \"../primitives/triangle\";\nimport {ImmovablePolygon} from \"../objects/ImmovablePolygon\";\nimport {Polygon} from \"../items/polygon\";\nimport {PolygonRainbow} from \"../items/polygonRainbow\";\n\ntype Scene3Actor = RenderableObject<ImmovablePolygon, Polygon>;\n\nexport class Scene3 extends BaseScene {\n    _createBalls: boolean = false;\n    timePassedSinceLastBallCreated: number = 0;\n    ballIndex: number = 0;\n    center: Vec2;\n    radius: number;\n    ballsViews: CircleWithText[] = [];\n\n    actor: Scene3Actor;\n\n    nextTickActorPosition: Vec2;\n\n    constructor(engine: Render) {\n        super(engine)\n\n        this.center = new Vec2(\n            this.engine.canvas.width / 2,\n            this.engine.canvas.height / 2\n        );\n\n        this.radius = Math.min(this.center.x, this.center.y);\n\n        this.generator = new ObjectsGenerator(this.engine.solver);\n        this.createActor();\n        this.initConstrain();\n    }\n\n    createBall() {\n        const baseBallVelocity = new Vec2(0, 0);\n        const ballGeneratorPoint = this.actor.solverObject.currentPosition;\n        const toCenter = ballGeneratorPoint.diff(this.center);\n        const n = toCenter.ort;\n\n        const ballVelocity = n.mul(-1);\n\n        const ballView =  new CircleWithText(\n            this.engine.context,\n            Vec2.Zero(),\n            7,\n            index2color(this.ballIndex+200),\n            '',\n            '#000000'\n        );\n\n        this.ballsViews.push(ballView);\n\n        const obj = new RenderableObject<BallsObject, CircleWithText>(\n            (new BallsObject(\n                ballGeneratorPoint.diff(n.mul(40)),\n                5\n            )).setVelocity(ballVelocity),\n            ballView\n        )\n\n        this.engine.addObject(obj);\n        this.ballIndex++;\n    }\n\n    createActor() {\n        const trianglePoints = createTriangle(60);\n\n        this.nextTickActorPosition = this.center;\n\n        const polygonObject = new ImmovablePolygon(\n            this.center,\n            trianglePoints\n        )\n\n        const polygonView = new PolygonRainbow(\n            this.engine.context,\n            Vec2.Zero(),\n            trianglePoints,\n            '#ff0000'\n        )\n\n        this.actor = new RenderableObject<ImmovablePolygon, Polygon>(\n            polygonObject,\n            polygonView\n        );\n\n        this.engine.addObject(this.actor);\n    }\n\n    initConstrain() {\n        this.engine.constrain = new CircleConstrain(\n            this.center,\n            this.radius\n        )\n\n        this.engine.items.push(\n            new Circle(\n                this.engine.context,\n                this.center,\n                this.radius,\n                '#ffffff'\n            )\n        );\n    }\n\n    getActor() {\n        return this.actor;\n    }\n\n    tick(timePassed: number) {\n        this.actor.solverObject.moveTo(\n            this.nextTickActorPosition\n        );\n\n        if (this.createBalls) {\n            this.timePassedSinceLastBallCreated += timePassed;\n\n            if(this.timePassedSinceLastBallCreated > 0.05) {\n                this.timePassedSinceLastBallCreated = 0;\n                this.createBall();\n            }\n        }\n\n        this.ballsViews.forEach((ballView: CircleWithText) => {\n            ballView.color = index2color(ballView.position.y)\n        });\n    }\n\n    processUserInput(event: AnyUIEvent) {\n        const mouseEvent = event as UIMouseEvent;\n\n        if (mouseEvent.leftButtonDown) {\n            if (this.actor.solverObject.isPointInsideObject(\n                new Vec2(\n                    mouseEvent.screenX,\n                    mouseEvent.screenY\n                )\n            )) {\n                this.createBalls = true;\n            }\n\n        } else {\n            this.createBalls = false;\n        }\n\n        if (mouseEvent.screenX || mouseEvent.screenY) {\n            this.nextTickActorPosition = new Vec2(\n                mouseEvent.screenX,\n                mouseEvent.screenY\n            )\n        }\n    }\n\n    set createBalls(can: boolean) {\n        this._createBalls = can;\n        if (can) {\n            this.actor.renderItem.color = '#00ff00';\n        } else {\n            this.actor.renderItem.color = '#ff0000';\n        }\n    }\n\n    get createBalls(): boolean {\n        return this._createBalls;\n    }\n}","import {Vec2} from \"../vector/vec2\";\n\nexport function createTriangle(size: number): Vec2[] {\n    const height = size * Math.sqrt(3) / 2;\n    const center = new Vec2(\n        size / 2,\n        size / 2 * (1 / Math.sqrt(3))\n    )\n    return [\n        new Vec2(-center.x, -center.y),\n        new Vec2(0, height - center.y),\n        new Vec2(center.x, -center.y)\n    ]\n}\n","import {ImmovableSolverObject} from \"./immovable\";\nimport {SolverObjectTypes} from \"./types\";\nimport {Vec2Line} from \"../vector/vec2Line\";\nimport {BaseSolverSpace} from \"../solver/baseSolverSpace\";\nimport {Vec2} from \"../vector/vec2\";\nimport {createImmovableLineFrom2Points, ImmovableLineObject} from \"./immovableLine\";\nimport {Vec2Math} from \"../vector/vec2Math\";\n\nexport class ImmovablePolygon extends ImmovableSolverObject {\n    _localPoints: Vec2[] = [];\n    _lines: ImmovableLineObject[] = [];\n    _fixedPosition: Vec2;\n\n    type = SolverObjectTypes.TypeImmovablePolygon;\n    immovable = true;\n\n    bounceValue = 1;\n\n    constructor(position: Vec2, points: Vec2[]) {\n        super();\n\n        this.currentPosition = position.copy();\n        this.previousPosition = position.copy();\n\n        this._fixedPosition = position.copy();\n\n        points.forEach(point => {\n            this._localPoints.push(point.copy());\n        });\n        this._recreateLines();\n    }\n\n    private _recreateLines() {\n        const pointsToProcess = [...this._localPoints];\n        let firstPoint: Vec2 = pointsToProcess.shift();\n        let secondPoint: Vec2;\n        let lastPoint: Vec2 = firstPoint;\n\n        this._lines.splice(0, this._lines.length);\n\n        while (secondPoint = pointsToProcess.shift()) {\n            const line = createImmovableLineFrom2Points(\n                this._fixedPosition.sum(lastPoint),\n                this._fixedPosition.sum(secondPoint)\n            );\n\n            this._lines.push(line);\n\n            lastPoint = secondPoint;\n        }\n\n        const line = createImmovableLineFrom2Points(\n            this._fixedPosition.sum(lastPoint),\n            this._fixedPosition.sum(firstPoint)\n        )\n\n        this._lines.push(line);\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n    }\n\n    addToSpace(solverSpace: BaseSolverSpace) {\n        try {\n            this._lines.forEach((line: ImmovableLineObject) => line.addToSpace(solverSpace));\n        } catch (e) {\n            debugger\n            console.log(e, this._lines);\n        }\n    }\n\n    isPointInsideObject(point: Vec2): boolean {\n        return true;\n    }\n\n    moveBy(delta: Vec2) {\n        this._fixedPosition.addSelf(delta);\n        this._lines.forEach((line: ImmovableLineObject) => line.moveBy(delta));\n    }\n\n    moveTo(position: Vec2) {\n        const delta = Vec2Math.diff(position, this._fixedPosition);\n        this.moveBy(delta);\n    }\n\n    toString() {\n        return 'ImmovablePolygon';\n    }\n\n    debugRender(context: CanvasRenderingContext2D) {\n        context.strokeStyle = '#00FF00';\n        this._lines.forEach(line => line.debugRender(context));\n    }\n\n    get lines(): ImmovableLineObject[] {\n        return this._lines;\n    }\n}","import {BaseSolverObject} from \"./object\";\n\nexport abstract class ImmovableSolverObject extends BaseSolverObject {\n\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\nimport {Vec2Line} from \"../vector/vec2Line\";\nimport {Polygon} from \"./polygon\";\nimport {index2color} from \"./utils/index2color\";\n\nexport class PolygonRainbow extends Polygon {\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.beginPath(); // Start a new path\n\n        let index = 0;\n        let currentPointWorld: Vec2;\n        const firstPointWorld = this.points[index].sum(this.position);\n\n        this.context.moveTo(\n            firstPointWorld.x,\n            firstPointWorld.y\n        )\n\n        index+=1;\n\n        while (index < this.points.length) {\n            currentPointWorld = this.points[index].sum(this.position);\n\n            this.context.strokeStyle = index2color(index * 100);\n            this.context.lineTo(\n                currentPointWorld.x,\n                currentPointWorld.y\n            );\n            this.context.stroke();\n\n            index+=1;\n        }\n\n        this.context.strokeStyle = index2color(index * 100);\n        this.context.lineTo(\n            firstPointWorld.x,\n            firstPointWorld.y\n        )\n        this.context.stroke();\n    }\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\nimport {Vec2Line} from \"../vector/vec2Line\";\n\nexport class Polygon extends Item {\n    direction = Vec2.Zero();\n    points: Vec2[];\n    color = '#00ff00';\n\n    constructor(context: CanvasRenderingContext2D, position: Vec2, points: Vec2[], color) {\n        super(context, position);\n\n        this.points = points;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.beginPath(); // Start a new path\n\n        let index = 0;\n        let currentPointWorld: Vec2;\n        const firstPointWorld = this.points[index].sum(this.position);\n\n        this.context.moveTo(\n            firstPointWorld.x,\n            firstPointWorld.y\n        )\n\n        index+=1;\n\n        while (index < this.points.length) {\n            currentPointWorld = this.points[index].sum(this.position);\n            this.context.lineTo(\n                currentPointWorld.x,\n                currentPointWorld.y\n            );\n\n            index+=1;\n        }\n\n        this.context.lineTo(\n            firstPointWorld.x,\n            firstPointWorld.y\n        )\n\n        this.context.stroke(); // Render the path\n    }\n}","export interface StatsItem {\n    key: string;\n    value: number;\n}\n\nexport interface StatsKeyData {\n    key: string;\n    total: number;\n    tick: number;\n}\n\nexport class Stats {\n    tickData: number[] = [];\n    totalData: number[] = [];\n    keys: Record<any, any>;\n\n    constructor() {\n        this.keys = new Map();\n    }\n\n    resetTick() {\n        this.tickData.forEach((value, index) => this.tickData[index] = 0);\n    }\n\n    writeStats(key, value) {\n        const index = this.registerKey(key);\n        this.tickData[index] = value;\n        this.totalData[index] = value;\n    }\n\n    addStats(key, value = 1) {\n        const index = this.registerKey(key);\n        this.tickData[index] += value;\n        this.totalData[index] += value;\n    }\n\n    registerKey(key) {\n        if (this.keys.has(key)) {\n            return this.keys.get(key)\n        }\n\n        this.tickData.push(0);\n        this.totalData.push(0);\n        this.keys.set(key, this.tickData.length - 1);\n        return this.tickData.length - 1;\n    }\n\n    getStats(key: string): StatsKeyData {\n        if (!this.keys.has(key)) {\n            return {\n                key,\n                total: 0,\n                tick: 0\n            }\n        }\n\n        const index = this.keys.get(key);\n\n        return {\n            key,\n            total: this.totalData[index],\n            tick: this.tickData[index]\n        }\n    }\n\n    getTickData(): StatsItem[] {\n        const result: StatsItem[] = [];\n\n        this.keys.forEach((index, key) => {\n            result.push({\n                key,\n                value: this.tickData[index]\n            })\n        })\n\n        return result;\n    }\n}","import {Vec2} from \"../vector/vec2\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {CollisionCell, GridSolverSpace} from \"./gridSolverSpace\";\nimport {BaseSolver} from \"./baseSolver\";\nimport {Vec2Math} from \"../vector/vec2Math\";\n\nexport class GridOptimizedSolver extends BaseSolver {\n    gravity: Vec2 = Vec2.Zero();\n    gravityCenter: Vec2 = Vec2.Zero();\n    collisionGrid: GridSolverSpace;\n\n    cellSize: Vec2;\n\n    constructor(worldSize, stats) {\n        super(worldSize, stats);\n        this.configure();\n    }\n\n    reset() {\n        super.reset();\n        this.collisionGrid.clear();\n    }\n\n    configure() {\n        super.configure();\n        this.gravity = new Vec2(0, 100);\n        this.gravityCenter = new Vec2(this.worldSize.x / 2, this.worldSize.y / 2);\n\n        const cellSize = 16;\n\n        const gridX = Math.round(this.worldSize.x / cellSize);\n        const gridY = Math.round(this.worldSize.y / cellSize);\n\n        this.cellSize = new Vec2(\n            this.worldSize.x / gridX,\n            this.worldSize.y / gridY\n        );\n\n        this.collisionGrid = new GridSolverSpace(\n            gridX, gridY,\n            this.cellSize\n        )\n    }\n\n    processOptimizations() {\n        this.collisionGrid.clear();\n        this.objects.forEach((obj, index) => {\n            obj.addToSpace(this.collisionGrid);\n            this.stats.addStats(`Solver object: ${obj.toString()}`)\n        });\n    }\n\n    applyForces() {\n        this.objects.forEach(obj => {\n            const direction = Vec2Math.diff(obj.currentPosition, this.gravityCenter);\n            obj.accelerate(direction.ort.mul(-100));\n            //obj.accelerate(this.gravity)\n        })\n    }\n\n    processCollisionsInCell(objA: BaseSolverObject, cell: CollisionCell) {\n        this.stats.addStats('processCollisionsInCell.calls');\n\n        cell.objects.forEach(objB => {\n            if (objA === objB) {\n                return;\n            }\n\n            if (objA.immovable && objB.immovable) {\n                return;\n            }\n\n            objA.collide(objB);\n        })\n    }\n\n    processCell(index: number) {\n        this.stats.addStats('processCell.calls', 1);\n\n        const currentCell = this.collisionGrid.cells[index];\n        currentCell.objects.forEach(objA => {\n            this.collisionGrid.adjacentCells[index].forEach(cell => {\n                if (cell === currentCell && cell.objects.length === 1) {\n                    return; // We don't need to check collisions if I'm only object in cell\n                }\n\n                this.processCollisionsInCell(objA, cell);\n            })\n        })\n    }\n\n    processCollisions() {\n        for (let index = 0; index < this.collisionGrid.size; index++) {\n            this.processCell(index);\n        }\n    }\n\n    debugRender(context: CanvasRenderingContext2D) {\n        this.collisionGrid.debugRender(context);\n    }\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","import { Vec2 } from \"../vector/vec2\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {Vec2Math} from \"../vector/vec2Math\";\nimport {BaseSolverSpace} from \"./baseSolverSpace\";\n\nexport class CollisionCell {\n    objects: BaseSolverObject[] = [];\n    highlight: boolean = false;\n\n    static MAX_OBJECT_IN_CELL = 100;\n\n    addObject(obj) {\n        if (this.objects.length >= CollisionCell.MAX_OBJECT_IN_CELL) {\n            return\n        }\n\n        this.objects.push(obj);\n    }\n\n    clear() {\n        this.objects = [];\n        this.highlight = false;\n    }\n\n    remove(index) {\n        const objectIndex = this.objects.findIndex(obj => obj.index === index);\n        if (objectIndex !== -1) {\n            this.objects.splice(objectIndex, 1);\n        }\n    }\n\n    get count() {\n        return this.objects.length;\n    }\n}\n\ntype CollisionGridForEachCallback = (column: number, row: number, cell: CollisionCell, index?: number) => void;\ntype CollisionCellArray = CollisionCell[];\n\ntype GridIndex = number;\n\nexport class GridSolverSpace extends BaseSolverSpace {\n    cells: CollisionCell[] = [];\n    _width: number;\n    _height: number;\n    _size: number;\n    cellSize: Vec2;\n    index2xy: Vec2[] = [];\n    adjacentCells: CollisionCellArray[] = []\n\n    constructor(width, height, cellSize: Vec2) {\n        super();\n        this._width = width;\n        this._height = height;\n\n        this.cellSize = cellSize;\n\n        this.resize();\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    set width(w: number) {\n        this._width = w;\n        this.resize();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    set height(h: number) {\n        this._height = h;\n        this.resize();\n    }\n\n    recalculateIndex2xy() {\n        this.index2xy = [];\n        for (let i = 0; i < this._size; i++) {\n            this.index2xy.push(this.makeVecFromIndex(i))\n        }\n    }\n\n    /**\n     * Calculate cache of collision cells\n     */\n    recalculateCollisionCells() {\n        this.adjacentCells = [];\n        this.cells.forEach((cell, index) => {\n            const pos = this.getVecFromIndex(index);\n            const cells = [];\n            cells.push(cell); // Add self\n\n            if (pos.y > 0) {\n                cells.push(this.cells[this.makeIndexFromCoord(pos.x, pos.y - 1)]); //TOP\n            }\n\n            if (pos.y + 1 < this._height) {\n                cells.push(this.cells[this.makeIndexFromCoord(pos.x, pos.y + 1)]); //BOTTOM\n            }\n\n            if (pos.x > 0) {\n                if (pos.y > 0) {\n                    cells.push(this.cells[this.makeIndexFromCoord(pos.x - 1, pos.y - 1)]); //LEFT TOP\n                }\n\n                cells.push(this.cells[this.makeIndexFromCoord(pos.x - 1, pos.y)]); //LEFT\n\n                if (pos.y + 1 < this._height) {\n                    cells.push(this.cells[this.makeIndexFromCoord(pos.x - 1, pos.y + 1)]); //LEFT BOTTOM\n                }\n            }\n\n            if (pos.x + 1 < this._width) {\n                if (pos.y > 0) {\n                    cells.push(this.cells[this.makeIndexFromCoord(pos.x + 1, pos.y - 1)]); //RIGHT TOP\n                }\n\n                cells.push(this.cells[this.makeIndexFromCoord(pos.x + 1, pos.y)]); //RIGHT\n\n                if (pos.y + 1 < this._height) {\n                    cells.push(this.cells[this.makeIndexFromCoord(pos.x + 1, pos.y + 1)]); //RIGHT BOTTOM\n                }\n            }\n\n            this.adjacentCells[index] = cells;\n        })\n    }\n\n    getVecFromIndex(index) {\n        return this.index2xy[index];\n    }\n\n    resize() {\n        this.cells = [];\n        this._size = this._width * this._height;\n        for (let i = 0; i < this._size; i++) {\n            this.cells.push(new CollisionCell());\n        }\n\n        this.recalculateIndex2xy();\n        this.recalculateCollisionCells();\n    }\n\n    addObject(obj: BaseSolverObject) {\n        this.addObjectByIndex(0, obj);\n    }\n\n    addPointObject(worldX, worldY, obj) {\n        const x = Math.trunc(worldX / this.cellSize.x);\n        const y = Math.trunc(worldY / this.cellSize.y);\n\n        const index: GridIndex = this.makeIndexFromCoord(x, y);\n        this.addObjectByIndex(index, obj);\n    }\n\n    addObjectByIndex(index: GridIndex, obj: BaseSolverObject) {\n        if (!isNaN(index) && index>=0 && index<this.size) {\n            this.cells[index].addObject(obj);\n        }\n    }\n\n    makeIndexFromVec(vec: Vec2): number {\n        return vec.x * this._height + vec.y;\n    }\n\n    makeIndexFromCoord(x: number, y: number): number {\n        return x * this._height + y;\n    }\n\n    makeVecFromIndex(index: GridIndex): Vec2 {\n        const x = Math.trunc(index / this._height);\n        const y = index - x * this._height;\n        return new Vec2(x, y);\n    }\n\n    /**\n     * Adds object to all cells between given coords\n     * @param worldLeftTop\n     * @param worldRightBottom\n     * @param obj\n     */\n    addRectangularObject(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject) {\n        const point1 = Vec2Math.scale(worldLeftTop, this.cellSize).applySelf(Math.trunc);\n        const point2 = Vec2Math.scale(worldRightBottom, this.cellSize).applySelf(Math.trunc);\n\n        let left = Math.max(Math.min(point1.x, point2.x), 0);\n        let top = Math.max(Math.min(point1.y, point2.y), 0);\n        let right = Math.min(Math.max(point1.x, point2.x), this._width - 1);\n        let bottom = Math.min(Math.max(point1.y, point2.y), this._height - 1);\n\n        const index1 = this.makeIndexFromCoord(left, top);\n        const index2 = this.makeIndexFromCoord(right, bottom);\n\n        if (right >= this._width || left < 0 || top < 0 || bottom >= this._height) {\n            return\n        }\n\n        if (point1.x === point2.x) {\n            // Vertical\n            for (let cellIndex = index1; cellIndex <= index2; cellIndex++) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else if (point1.y === point2.y) {\n            // Horizontal\n            for (let cellIndex = index1; cellIndex <= index2; cellIndex+=this.height) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else {\n            let height = bottom - top;\n            let startFrom = this.makeIndexFromCoord(left, top);\n\n            for (let x = 0; x <= right-left; x++) {\n                for (let y = 0; y <= height; y++) {\n                    const cellIndex = startFrom + this.makeIndexFromCoord(x, y);\n                    this.addObjectByIndex(cellIndex, obj);\n                }\n            }\n        }\n    }\n\n    clear() {\n        this.cells.forEach(cell => cell.clear())\n    }\n\n    forEach(callback: CollisionGridForEachCallback) {\n        this.cells.forEach((cell, index) => {\n            const pos = this.getVecFromIndex(index);\n            callback(pos.x, pos.y, cell, index);\n        })\n    }\n\n    hasCell(index: number, dt: number) {\n        if (index < 0 || index >= this.size) {\n            return false;\n        }\n\n        const pos = this.getVecFromIndex(index);\n\n        const x = pos.x;\n        const y = pos.y;\n\n        if (y <= 0 && dt < 0) {\n            // TOP CELL\n            return false;\n        }\n\n        if (y === this.height - 1 && dt > 0) {\n            // Bottom cell\n            return  false;\n        }\n\n        if (x === 0 && dt < 0) {\n            // left cell\n            return false;\n        }\n\n        if (x >= this.width - 1 && dt > 0) {\n            // right cell;\n            return false;\n        }\n\n        return true;\n    }\n\n    debugRender(context: CanvasRenderingContext2D) {\n        this.forEach((column, row, cell, index) => {\n            const cellPosition = new Vec2(\n                column * this.cellSize.x,\n                row * this.cellSize.y,\n            );\n\n            context.strokeStyle = cell.count > 0 ? '#ff0000' : '#00ff00';\n            context.lineWidth = cell.highlight ? 10 : 1;\n\n            context.strokeRect(\n                cellPosition.x,\n                cellPosition.y,\n                this.cellSize.x-1,\n                this.cellSize.y-1\n            )\n\n\n\n            context.fillStyle = \"#ffffff\";\n            context.textAlign = \"start\";\n            context.fillText(\n                `${index}`,\n                cellPosition.x + this.cellSize.x / 2,\n                cellPosition.y + this.cellSize.y / 2\n            );\n        });\n    }\n}\n","import {BaseSolverObject} from \"../objects/object\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport abstract class BaseSolverSpace {\n    abstract clear();\n    abstract addObject(obj: BaseSolverObject);\n\n    abstract addPointObject(worldX, worldY, obj: BaseSolverObject);\n\n    abstract addRectangularObject(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject);\n    abstract debugRender(contenxt: CanvasRenderingContext2D);\n}\n","import {Vec2} from \"../vector/vec2\";\nimport {BaseSolverObject} from \"../objects/object\";\nimport {Constrain} from \"../constrains/constrain\";\nimport {Stats} from \"../stats\";\n\nexport abstract class BaseSolver {\n    stats: Stats;\n    objects: BaseSolverObject[] = []\n    constrains: Constrain = null;\n    subSteps: number = 4;\n    useFixedTime: boolean = true;\n    step: number;\n\n    worldSize: Vec2;\n\n    constructor(worldSize, stats) {\n        this.stats = stats;\n        this.objects = [];\n        this.worldSize = worldSize.copy();\n\n        this.configure();\n    }\n\n    reset() {\n        this.objects = [];\n    }\n\n    configure() {\n        this.useFixedTime = true;\n        this.step = 0.017 / this.subSteps;\n    }\n\n    addObject(obj: BaseSolverObject) {\n        this.objects.push(obj);\n    }\n\n    /**\n     * Update the simulation by given step.\n     * @param {number} time amount of seconds passed since last update.\n     */\n    update(time: number) {\n        const subTime = this.useFixedTime ? this.step : time / this.subSteps;\n        for (let i = 0; i < this.subSteps; i++) {\n            this.processOptimizations();\n            this.processCollisions();\n            this.applyForces();\n            this.updateObjects(subTime);\n            this.applyConstrains();\n        }\n    }\n\n    abstract processOptimizations();\n\n    /**\n     * Update objects state\n     * @param {number} time amount of seconds passed since last update\n     */\n    updateObjects(time) {\n        this.objects.forEach(obj => obj.update(time))\n    }\n\n    abstract applyForces();\n\n    applyConstrains() {\n        this.objects.forEach(obj => this.constrains.applyConstrain(obj))\n    }\n\n    abstract processCollisions();\n    abstract debugRender(context: CanvasRenderingContext2D);\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","export enum MessageType {\n    MessageNone = 0,\n    MessageInit = 1,\n    MessageUserInput = 2,\n    MessageEngineEvent = 3\n}\n\nexport class MessageEvent {\n    type = MessageType.MessageNone;\n}\n\nexport class MessageInit extends MessageEvent {\n    type = MessageType.MessageInit;\n    canvas;\n\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n    }\n}\n\nexport class MessageUserInput extends MessageEvent {\n    type = MessageType.MessageUserInput;\n    event;\n\n    constructor(event) {\n        super();\n        this.event = event;\n    }\n}\n\nexport class MessageEngineEvent extends MessageEvent {\n    type = MessageType.MessageEngineEvent;\n    event;\n\n    constructor(event) {\n        super();\n        this.event = event;\n    }\n}\n"],"names":[],"version":3,"file":"main.8e789c37.js.map","sourceRoot":"/__parcel_source_root/"}