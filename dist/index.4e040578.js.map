{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e7b254456f726793.js","src/utils/onReady.js","src/utils/getElement.js","src/host/input.ts","src/host/messages.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-cc22e6566845f08f.js","src/host/worker.ts","src/host/workerWorkaround.js","node_modules/@swc/helpers/src/_define_property.mjs","src/render/vector/exceptions.ts","src/render/vector/vec2Math.ts","src/render/vector/math.ts","src/render/vector/vec2.ts","src/render/items/item.js","src/render/items/circle.js","src/render/vector/vec2Line.ts","src/render/objects/types.ts","src/render/objects/collisionModels.js","src/render/objects/object.ts","src/render/objects/ball.ts","src/render/constrains/constrain.js","src/render/constrains/viewport.js","src/render/constrains/circle.js","src/render/objectsGenerator.js","src/render/mappedObjectsGenerator.js","src/render/totalObjectsGenerator.js","src/render/grid.ts","src/render/solver.ts","src/render/items/rect.js","src/render/renderableObjects/object.js","src/render/objects/immovableBall.ts","src/render/renderableObjects/immovableLine.js","src/render/objects/immovableLine.ts","src/render/items/line.js","src/render/items/circleWithText.js","src/render/items/frame.js","src/render/index.js","src/host/direct.ts","src/host/main.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5d7Nu\\\":\\\"index.4e040578.js\\\",\\\"bG1Fz\\\":\\\"main.6f291b2b.js\\\"}\"));","const DOCUMENT_STATE_LOADING = \"loading\";\n\n/**\n * Calls function when webpage is ready\n * @param {function} callback\n */\nexport function onReady(callback) {\n    if (document.readyState !== DOCUMENT_STATE_LOADING) {\n        callback();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    }\n}\n","export class ElementNotFound extends Error {}\n\nexport function getElement(selector) {\n    const element = document.querySelector(selector);\n    if (!element) {\n        throw new ElementNotFound(selector);\n    }\n\n    return element;\n}","export interface UIEvent {}\n\nexport interface UIMouseEvent {\n    screenX: number,\n    screenY: number,\n    dx: number,\n    dy: number,\n    leftButtonDown: boolean\n}\n\nexport type UserInputHandler = (event: UIEvent) => void;\n\nexport class UserInput {\n    _canvas: HTMLCanvasElement;\n    _handlers: Set<UserInputHandler>;\n\n    _oldX: number;\n    _oldY: number;\n\n    _leftButtonDown: boolean;\n\n    constructor(canvas: HTMLCanvasElement) {\n        this._canvas = canvas;\n        this._handlers = new Set();\n\n        this._leftButtonDown = false;\n\n        this.addHandlers();\n    }\n\n    private addHandlers() {\n        this._canvas.addEventListener('mouseenter', this.mouseEnter);\n        this._canvas.addEventListener('mouseleave', this.mouseLeave);\n        this._canvas.addEventListener('mousemove', this.mouseMove);\n        this._canvas.addEventListener('mousedown', this.mouseDown);\n        this._canvas.addEventListener('mouseup', this.mouseUp);\n        this._canvas.addEventListener('click', this.click);\n    }\n\n    private removeHandlers() {\n\n    }\n\n    private processEvent(event) {\n        this._handlers.forEach((callback: UserInputHandler) => {\n            callback(event);\n        })\n    }\n\n    addHandler(callback: UserInputHandler) {\n        this._handlers.add(callback);\n    }\n\n    removeHandler(callback: UserInputHandler) {\n        if (this._handlers.has(callback)) {\n            this._handlers.delete(callback);\n        }\n    }\n\n    createMouseEvent(browserEvent: MouseEvent): UIMouseEvent {\n        return {\n            screenX: browserEvent.offsetX,\n            screenY: browserEvent.offsetY,\n            dx: -this._oldX + browserEvent.offsetX,\n            dy: -this._oldY + browserEvent.offsetY,\n            leftButtonDown: this._leftButtonDown\n        }\n    }\n\n    mouseEnter = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseLeave = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseMove = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseDown = (browserEvent: MouseEvent) => {\n        this._leftButtonDown = true;\n\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    mouseUp = (browserEvent: MouseEvent) => {\n        this._leftButtonDown = false;\n\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n\n    click = (browserEvent: MouseEvent) => {\n        const event = this.createMouseEvent(browserEvent);\n        this.processEvent(event);\n\n        this._oldX = event.screenX;\n        this._oldY = event.screenY;\n    }\n}","export enum MessageType {\n    MessageNone = 0,\n    MessageInit = 1,\n    MessageUserInput = 2\n}\n\nexport class MessageEvent {\n    type = MessageType.MessageNone;\n}\n\nexport class MessageInit extends MessageEvent {\n    type = MessageType.MessageInit;\n    canvas;\n\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n    }\n}\n\nexport class MessageUserInput extends MessageEvent {\n    type = MessageType.MessageUserInput;\n    event;\n\n    constructor(event) {\n        super();\n        this.event = event;\n    }\n}\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('5d7Nu') + require('./helpers/bundle-manifest').resolve(\"bG1Fz\");module.exports = workerURL(url, bundleURL.getOrigin(url), false);","import {UserInput, UIEvent} from \"./input\";\nimport {MessageUserInput, MessageInit} from \"./messages\";\nimport {createWorker} from \"./workerWorkaround.js\";\n\nexport class WorkerApplication {\n    worker;\n    userInput;\n\n    constructor(canvas) {\n        this.worker = createWorker();\n        const offscreen = canvas.transferControlToOffscreen();\n\n        this.worker.postMessage(\n            new MessageInit(offscreen),\n            [offscreen]\n        );\n\n        this.userInput = new UserInput(canvas);\n        this.userInput.addHandler(this.sendUserInputEvent);\n    }\n\n    sendUserInputEvent = (event: UIEvent) => {\n        this.worker.postMessage(\n            new MessageUserInput(event)\n        )\n    }\n\n    initUserInput() {\n\n    }\n}","export function createWorker() {\n    return new Worker(new URL('../worker/main.ts', import.meta.url), {type: 'module'});\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export class Vec2Exception extends Error {}\n\nexport class Vec2ExceptionParallel extends Vec2Exception {}\nexport class Vec2ExceptionNoPerpendicularVectorToZeroVector extends Vec2Exception {}","import { Vec2 } from \"./vec2\";\nimport { Vec2ExceptionParallel } from \"./exceptions\";\nimport { Vec2Line } from \"./vec2Line\";\n\nexport class Vec2Math {\n    static diff(vec1: Vec2, vec2: Vec2): Vec2 {\n        return new Vec2(vec1.x - vec2.x, vec1.y - vec2.y);\n    }\n\n    static mul(vec1: Vec2, scalar: number): Vec2 {\n        return new Vec2(vec1.x * scalar, vec1.y * scalar);\n    }\n\n    /**\n     * Calculates distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length;\n    }\n\n    /**\n     * Calculates square of distance between 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static distance2(vec1: Vec2, vec2: Vec2): number {\n        return Vec2Math.diff(vec1, vec2).length2;\n    }\n\n    /**\n     * Finds intersection between 2 lines\n     * @param {Vec2Line} line1\n     * @param {Vec2Line} line2\n     * @returns {Vec2}\n     */\n    static intersect(line1, line2) {\n        if (line1.K === line2.K) {\n            throw new Vec2ExceptionParallel()\n        }\n\n        if (isNaN(line1.K) || isNaN(line2.K)) {\n            // One of two lines is vertical\n            if (isNaN(line1.K)) {\n                return line2.makeVec2FromX(line1._vec1.x);\n            } else {\n                return line1.makeVec2FromX(line2._vec1.x);\n            }\n        } else {\n            const x = (line1.B - line2.B) / (line2.K - line1.K);\n            return line1.makeVec2FromX(x);\n        }\n    }\n\n    /**\n     * Dot product of 2 vectors\n     * @param {Vec2} vec1\n     * @param {Vec2} vec2\n     * @returns {number}\n     */\n    static dot(vec1: Vec2, vec2: Vec2): number {\n        return vec1.x * vec2.x + vec1.y * vec2.y;\n    }\n\n    /**\n     *\n     * @param {Vec2} vec\n     * @param {Vec2Line} line\n     * @returns {Vec2}\n     */\n    static mirror(vec: Vec2, line: Vec2Line) {\n        const normal = line.direction.perpendicular;\n        return vec.diff(\n            normal.mul(2 * Vec2Math.dot(vec, normal))\n        );\n    }\n\n    static scale(vec1: Vec2, vec2: Vec2) {\n        return new Vec2(\n            vec1.x / vec2.x,\n            vec1.y / vec2.y\n        )\n    }\n}\n","export const MATH_ERROR = 0.000001;\nexport const MATH_ERROR2 = MATH_ERROR * MATH_ERROR;\nexport const SQRT2 = Math.sqrt(2);\n\n/**\n * Checks if a equals b with given error\n * @param {number} a\n * @param {number} b\n * @param {number} error\n * @returns {boolean}\n */\nexport function isEqual(a, b, error) {\n    return Math.abs(a - b) < error;\n}\n\nexport type NullableNumber = number | null;\n","import { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR2, NullableNumber } from \"./math\";\nimport { Vec2ExceptionNoPerpendicularVectorToZeroVector } from \"./exceptions\";\n\nexport class Vec2 {\n    private _x: number = 0;\n    private _y: number = 0;\n    private _length: NullableNumber = null;\n    private _length2: NullableNumber = null;\n\n    static lengthCallsCount = 0;\n    static length2CallsCount = 0;\n\n    constructor(x: number, y: number, l?: number) {\n        this._x = x;\n        this._y = y;\n\n        if (l) {\n            this._length = l;\n            this._length2 = l * l;\n        }\n    }\n\n    get x(): number {\n        return this._x;\n    }\n\n    get y(): number {\n        return this._y;\n    }\n\n    set x(x: number) {\n        this._x = x;\n        this._length = null;\n    }\n\n    set y(y:number) {\n        this._y = y;\n        this._length = null;\n    }\n\n    get length(): number {\n        if (this._length === null) {\n            this._length = Math.sqrt(this.x*this.x + this.y*this.y);\n            Vec2.lengthCallsCount++;\n        }\n\n        return this._length;\n    }\n\n    /**\n     * Returns length^2\n     */\n    get length2(): number {\n        if (this._length2 === null) {\n            this._length2 = this._x*this._x + this._y*this._y;\n            Vec2.length2CallsCount++;\n        }\n\n        return this._length2;\n    }\n\n    /**\n     * Adds vec2 to current vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    addSelf(vec2: Vec2): Vec2 {\n        this._x += vec2.x;\n        this._y += vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Subtract from current vector given vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    subSelf(vec2: Vec2): Vec2 {\n        this._x -= vec2.x;\n        this._y -= vec2.y;\n        this._length = null;\n        return this;\n    }\n\n    /**\n     * Flips along X axis\n     * @returns {Vec2}\n     */\n    flipYSelf(): Vec2 {\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Flips along Y axis\n     * @returns {Vec2}\n     */\n    flipXSelf(): Vec2 {\n        this._x = -this._x;\n        return this;\n    }\n\n    flipSelf(): Vec2 {\n        this._x = -this._x;\n        this._y = -this._y;\n        return this;\n    }\n\n    /**\n     * Checks if this vector equals given vector using global MATH_ERROR const\n     * @param vec2\n     */\n    equals(vec2) {\n        return Vec2Math.distance2(this, vec2) < MATH_ERROR2;\n    }\n\n    /**\n     * Sums current vector and given vector and returns new vector\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    sum(vec2: Vec2): Vec2 {\n        return new Vec2(this.x + vec2.x, this.y + vec2.y);\n    }\n\n    /**\n     * Calculate difference between current vector and given vector and returns\n     * new vector\n     *\n     * @param {Vec2} vec2\n     * @returns {Vec2}\n     */\n    diff(vec2: Vec2) {\n        return new Vec2(this.x - vec2.x, this.y - vec2.y);\n    }\n\n    /**\n     * Multiplicates vector by number\n     * @param {number} value\n     * @returns {Vec2}\n     */\n    mul(value: number) {\n        return new Vec2(this.x * value, this.y * value);\n    }\n\n    copy() {\n        return new Vec2(this.x, this.y);\n    }\n\n    applySelf(callback): Vec2 {\n        this.x = callback(this.x);\n        this.y = callback(this.y);\n        return this;\n    }\n\n    /**\n     * Returns normalized vector\n     * @returns {Vec2}\n     */\n    get ort() {\n        const l = this.length;\n        return new Vec2(this.x / l, this.y / l, 1);\n    }\n\n    get perpendicular() {\n        if (this.x === 0) {\n            // Vertical\n            if (this.y > 0) {\n                return Vec2.Horizontal().ort\n            } else if (this.y < 0) {\n                return Vec2.Horizontal().ort.flipSelf();\n            } else {\n                throw new Vec2ExceptionNoPerpendicularVectorToZeroVector();\n            }\n        } else if (this.y === 0) {\n            // Horizontal\n            if (this.x > 0) {\n                return Vec2.Vertical().ort\n            } else if (this.x < 0) {\n                return Vec2.Vertical().ort.flipSelf();\n            }\n        }\n\n        return new Vec2(\n            -this.y / this.x,\n            1\n        ).ort;\n    }\n\n    static Zero() {\n        return new Vec2(0, 0);\n    }\n\n    static Horizontal() {\n        return new Vec2(1, 0);\n    }\n\n    static Vertical() {\n        return new Vec2(0, 1);\n    }\n\n    static Down(y) {\n        return new Vec2(0, y);\n    }\n\n    static Right(x) {\n        return new Vec2(x, 0);\n    }\n}\n\n\n\n\n\n\n\n\n","import {Vec2} from \"../vector/vec2\";\n\nexport class Item {\n    position = Vec2.Zero();\n\n    /**\n     *\n     * @param {CanvasRenderingContext2D} context\n     */\n    constructor(context, position) {\n        this.context = context;\n        this.position = position;\n    }\n\n    /**\n     * Method immediately renders object on context\n     */\n    render() {\n\n    }\n\n    /**\n     * Method tries to put object in render block\n     */\n    queue() {\n\n    }\n}","import {Item} from \"./item\";\n\nexport class Circle extends Item {\n    r = 0;\n    color = '#00ff00';\n\n    constructor(context, position, r, color) {\n        super(context, position);\n\n        if (r) {\n            this.r = r;\n        }\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.beginPath()\n        this.context.arc(\n            this.position.x,\n            this.position.y,\n            this.r,\n            0,\n            2 * Math.PI\n        )\n\n        this.context.fillStyle = this.color;\n        this.context.fill();\n    }\n}","import { Vec2 } from \"./vec2\";\nimport { Vec2Math } from \"./vec2Math\";\nimport { MATH_ERROR, isEqual } from \"./math\";\n\nexport class Vec2Line {\n    private _vec1: Vec2 = Vec2.Zero();\n    private _vec2: Vec2 = Vec2.Zero();\n\n    private _direction: Vec2;\n    private _ort: Vec2;\n\n    private _length: number;\n    private _length2: number;\n\n    /**\n     * Y = K*X + B\n     * @type {number}\n     */\n    private _k: number = 0;\n    private _b: number = 0;\n\n    constructor(vec1, vec2) {\n        this._vec1 = vec1;\n        this._vec2 = vec2;\n\n        this._direction = Vec2Math.diff(this._vec1, this._vec2);\n        this._length = this._direction.length;\n        this._length2 = this._direction.length2;\n        this._ort = this._direction.ort;\n\n        this.calculateKB();\n    }\n\n    /**\n     * Determines if given point lays on the line\n     * @param vec\n     * @returns {boolean}\n     */\n    inBetween(vec) {\n        const l1 = Vec2Math.diff(vec, this._vec1).length;\n        const l2 = Vec2Math.diff(this._vec2, vec).length;\n        const sum = l1 + l2;\n\n\n\n\n\n        return isEqual(this._length, sum, MATH_ERROR);\n    }\n\n    calculateKB() {\n        if (this._vec1.y === this._vec2.y) {\n            // Horizontal line\n            this._b = this._vec1.y;\n            this._k = 0;\n        } else if (this._vec1.x === this._vec2.x) {\n            // Vertical line\n            this._b = NaN;\n            this._k = NaN;\n        } else {\n            this._b = (this._vec1.x * this._vec2.y - this._vec1.y * this._vec2.x) / (this._vec1.x - this._vec2.x)\n            this._k = (this._vec1.y - this._vec2.y) / (this._vec1.x - this._vec2.x);\n        }\n    }\n\n    makeVec2FromX(x) {\n        return new Vec2(x, this._k * x + this._b);\n    }\n\n    copy() {\n        return new Vec2Line(\n            this._vec1,\n            this._vec2\n        )\n    }\n\n    moveBy(vec) {\n        this._vec1.addSelf(vec);\n        this._vec2.addSelf(vec);\n        this.calculateKB();\n    }\n\n    getPointProjection(vec) {\n        const a = this.direction;\n        const b = Vec2Math.diff(vec, this._vec1);\n        const cosabD = Vec2Math.dot(a, b) / (this.length);\n\n        return this._vec1.sum(\n            this.ort.mul(cosabD)\n        );\n    }\n\n    get B() {\n        return this._b;\n    }\n\n    get K() {\n        return this._k;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    get direction() {\n        return this._direction;\n    }\n\n    get ort() {\n        return this._ort;\n    }\n\n    get vec1() {\n        return this._vec1;\n    }\n\n    get vec2() {\n        return this._vec2;\n    }\n\n    static Vertical(x) {\n        return new Vec2Line(\n            new Vec2(x, 0),\n            new Vec2(x, Number.MAX_SAFE_INTEGER)\n        )\n    }\n\n    static Horizontal(y) {\n        return new Vec2Line(\n            new Vec2(0, y),\n            new Vec2(Number.MAX_SAFE_INTEGER, y)\n        )\n    }\n}","export enum SolverObjectTypes {\n    TypeNull = 0,\n    TypeBall = 1,\n    TypeImmovableBall = 2,\n    TypeImmovableLine = 3\n}\n","import {Vec2Math} from \"../vector/vec2Math\";\nimport {BallsObject} from \"./ball\";\nimport {SolverObjectTypes, TYPE_BALL, TYPE_IMMOVABLE_BALL, TYPE_IMMOVABLE_LINE} from \"./types\";\n\n/**\n * Collision between 2 balls objects\n * @param {BallsObject} obj1\n * @param {BallsObject} obj2\n */\nexport function collideBallAndBall(obj1, obj2) {\n    const between = Vec2Math.diff(obj1.currentPosition, obj2.currentPosition);\n    const distance = between.length;\n    const requiredDistance = obj1.radius + obj2.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        obj1.currentPosition.addSelf(Vec2Math.mul(normalized, obj1.radius / requiredDistance * delta * obj1.bounceValue));\n        obj2.currentPosition.subSelf(Vec2Math.mul(normalized, obj2.radius / requiredDistance * delta * obj2.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable ball\n * @param {BallsObject} ball\n * @param {ImmovableBallsObject} immovable\n */\nexport function collideBallAndImmovableBall(ball, immovable) {\n    const between = Vec2Math.diff(\n        ball.currentPosition,\n        immovable.currentPosition\n    );\n\n    const distance = between.length;\n    const requiredDistance = ball.radius + immovable.radius;\n\n    if (distance < requiredDistance) {\n        const normalized = between.ort;\n        const delta = requiredDistance - distance;\n        ball.currentPosition.addSelf(Vec2Math.mul(normalized, ball.radius / requiredDistance * delta * ball.bounceValue));\n    }\n}\n\n/**\n * Collision between ball and immovable line\n * @param {BallsObject} ball\n * @param {ImmovableLineObject} line\n */\nexport function collideBallAndImmovableLine(ball, line) {\n    try {\n        const projectionPoint = line._line.getPointProjection(ball.currentPosition);\n\n        if (line._line.inBetween(projectionPoint)) {\n            const between = Vec2Math.diff(\n                projectionPoint,\n                ball.currentPosition\n            )\n\n            if (between.length < ball.radius) {\n                const normalized = between.ort;\n\n                const delta = ball.radius - between.length;\n\n                ball.currentPosition.subSelf(\n                    Vec2Math.mul(normalized, delta * ball.bounceValue)\n                )\n            }\n        }\n    } catch (e) {\n    }\n}\n\nfunction flipObjects(obj1, obj2) {\n    return {\n        a: obj2,\n        b: obj1\n    }\n}\n\nexport function collide(a, b) {\n    let obj1 = a;\n    let obj2 = b;\n    if (obj1.type > obj2.type) {\n        const flipped = flipObjects(obj1, obj2);\n        obj1 = flipped.a;\n        obj2 = flipped.b\n    }\n\n    switch (true) {\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeBall:\n            return collideBallAndBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableBall:\n            return collideBallAndImmovableBall(obj1, obj2);\n        case obj1.type === SolverObjectTypes.TypeBall && obj2.type === SolverObjectTypes.TypeImmovableLine:\n            return collideBallAndImmovableLine(obj1, obj2);\n        default:\n            return;\n    }\n}","import {SolverObjectTypes} from \"./types\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport abstract class BaseSolverObject {\n    readonly type: SolverObjectTypes = SolverObjectTypes.TypeNull;\n    readonly index: number;\n    readonly immovable: boolean;\n\n    previousPosition = Vec2.Zero();\n    currentPosition = Vec2.Zero();\n\n    constructor() {\n        this.index = BaseSolverObject.index++;\n    }\n\n    update(step) {\n\n    }\n\n    accelerate(acc) {\n\n    }\n\n    collide(obj) {\n\n    }\n\n    addToGrid(collisionGrid) {\n\n    }\n\n    abstract moveBy(delta: Vec2);\n\n    abstract isPointInsideObject(point: Vec2): boolean;\n\n    static index = 0;\n}\n","import { Vec2 } from \"../vector/vec2\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport { Vec2Math } from \"../vector/vec2Math\";\nimport {SolverObjectTypes} from \"./types\";\nimport { collide } from \"./collisionModels\";\nimport {BaseSolverObject} from \"./object\";\nimport {CollisionGrid} from \"../grid\";\n\nexport class BallsObject extends BaseSolverObject {\n    acc = Vec2.Zero();\n\n    radius = 10;\n    bounceValue = 1.1;\n\n    type = SolverObjectTypes.TypeBall;\n    immovable = false;\n\n    /**\n     * Creates balls object\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super();\n        this.previousPosition = position.copy();\n        this.currentPosition = position.copy();\n        if (radius !== undefined) {\n            this.radius = radius\n        }\n    }\n\n    /**\n     * Updates state of object\n     * @param {number} step\n     */\n    update(step) {\n        const velocity = this.velocity;\n        this.previousPosition = this.currentPosition.copy();\n        this.currentPosition.addSelf(\n            velocity.addSelf(\n                this.acc.mul(step * step)\n            )\n        )\n        this.acc = Vec2.Zero();\n    }\n\n    accelerate(acc) {\n        this.acc.addSelf(acc);\n        return this;\n    }\n\n    setVelocity(vel) {\n        this.velocity = vel;\n        return this;\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    collide(obj) {\n        collide(this, obj)\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        collisionGrid.addObject(\n            Math.floor(this.currentPosition.x),\n            Math.floor(this.currentPosition.y),\n            this\n        )\n    }\n\n    moveBy(delta: Vec2) {\n        this.currentPosition.addSelf(delta);\n    }\n\n    isPointInsideObject(point: Vec2): boolean {\n        return Vec2Math.distance(this.currentPosition, point) < this.radius;\n    }\n\n    get velocity() {\n        return Vec2Math.diff(\n            this.currentPosition,\n            this.previousPosition\n        );\n    }\n\n    set velocity(v) {\n        this.previousPosition = Vec2Math.diff(this.currentPosition,v);\n    }\n\n    /**\n     *\n     * @returns {Vec2Line}\n     */\n    get movementVector() {\n        return new Vec2Line(this.previousPosition, this.currentPosition);\n    }\n}","export class Constrain {\n    constructor() {\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    applyConstrain(obj) {\n\n    }\n}","import { Constrain } from \"./constrain\";\n\nexport class ViewportConstrain extends Constrain {\n    _width = 0;\n    _height = 0;\n\n    constructor(width, height) {\n        super()\n        this.width = width;\n        this.height = height;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    set width(width) {\n        this._width = width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    set height(height) {\n        this._height = height;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        if (obj.currentPosition.x - obj.radius < 0) {\n            obj.currentPosition.x = obj.radius;\n        }\n\n        if (obj.currentPosition.x + obj.radius > this._width) {\n            obj.currentPosition.x = this._width - obj.radius;\n        }\n\n        if (obj.currentPosition.y - obj.radius < 0) {\n            obj.currentPosition.y = obj.radius;\n        }\n\n        if (obj.currentPosition.y + obj.radius > this._height) {\n            obj.currentPosition.y = this._height - obj.radius;\n        }\n    }\n}","import {Constrain} from \"./constrain\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class CircleConstrain extends Constrain {\n    /**\n     *\n     * @type {Vec2}\n     */\n    center = Vec2.Zero();\n\n    radius = 0;\n\n    constructor(center, radius) {\n        super();\n\n        this.center = center;\n        this.radius = radius;\n    }\n\n    applyConstrain(obj) {\n        super.applyConstrain(obj);\n\n        const toCenter = obj.currentPosition.diff(this.center);\n        const distance = toCenter.length;\n        const r = obj.radius;\n\n        if (distance > (this.radius - r)) {\n            const n = toCenter.ort;\n            obj.currentPosition = this.center.sum(\n                n.mul(this.radius - r)\n            );\n        }\n    }\n\n}","export class ObjectsGenerator {\n    solver = null;\n    constructor(solver) {\n        this.solver = solver;\n    }\n\n    // TODO Make me iterator\n    getNextObject(step) {\n        return [];\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\n\nexport class MappedObjectGeneratorItem {\n    /**\n     * Delay before object appear\n     * @type {number}\n     */\n    timeout;\n\n    /**\n     * Object configuration\n     * @type {BallsObject}\n     */\n    object;\n\n    constructor(timeout, object) {\n        this.timeout = timeout;\n        this.object = object;\n    }\n\n}\n\nexport class MappedObjectsGenerator extends ObjectsGenerator {\n    /**\n     * @param {MappedObjectGeneratorItem[]} map\n     */\n    constructor(solver, map) {\n        super(solver);\n\n        this.items = map;\n        this.currentTime = 0;\n    }\n\n    getNextObject(step) {\n        this.currentTime += step;\n\n        console.log(this.currentTime)\n\n        const index = this.items.findIndex((item) => item.timeout < this.currentTime);\n        if (index > -1) {\n            return [this.items.splice(index, 1)[0].object];\n        }\n    }\n}","import {ObjectsGenerator} from \"./objectsGenerator\";\n\nexport class TotalObjectsGenerator extends ObjectsGenerator {\n    constructor(solver, count, delay, createCallback) {\n        super(solver);\n        this.limit = count;\n        this.total = 0;\n\n        this.delay = delay;\n        this.create = createCallback;\n        this.lastCreateTime = 0;\n    }\n\n    getNextObject(step) {\n        if (this.total > this.limit) {\n            return [];\n        }\n\n        this.lastCreateTime += 1;\n        if (this.lastCreateTime > this.delay) {\n            const newItems = this.create(this.total);\n            this.lastCreateTime = 0;\n            this.total+= newItems.length;\n\n            return newItems;\n        }\n    }\n}","import { Vec2 } from \"./vector/vec2\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {Vec2Math} from \"./vector/vec2Math\";\n\nexport class CollisionCell {\n    objects: BaseSolverObject[] = [];\n    highlight: boolean = false;\n\n    static MAX_OBJECT_IN_CELL = 10;\n\n    addObject(obj) {\n        if (this.objects.length >= CollisionCell.MAX_OBJECT_IN_CELL) {\n            return\n        }\n\n        this.objects.push(obj);\n    }\n\n    clear() {\n        this.objects = [];\n        this.highlight = false;\n    }\n\n    remove(index) {\n        const objectIndex = this.objects.findIndex(obj => obj.index === index);\n        if (objectIndex !== -1) {\n            this.objects.splice(objectIndex, 1);\n        }\n    }\n\n    get count() {\n        return this.objects.length;\n    }\n}\n\ntype CollisionGridForEachCallback = (column: number, row: number, cell: CollisionCell, index?: number) => void;\n\nexport class CollisionGrid {\n    cells: CollisionCell[] = [];\n    _width: number;\n    _height: number;\n    _size: number;\n    cellSize: Vec2;\n\n    constructor(width, height, cellSize: Vec2) {\n        this._width = width;\n        this._height = height;\n\n        this.cellSize = cellSize;\n\n        this.resize();\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    set width(w: number) {\n        this._width = w;\n        this.resize();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    set height(h: number) {\n        this._height = h;\n        this.resize();\n    }\n\n    resize() {\n        this.cells = [];\n        this._size = this._width * this._height;\n        for (let i = 0; i < this._size; i++) {\n            this.cells.push(new CollisionCell());\n        }\n    }\n\n    addObject(worldX, worldY, obj) {\n        const x = Math.floor(worldX / this.cellSize.x);\n        const y = Math.floor(worldY / this.cellSize.y);\n\n        const index = x * this._height + y;\n        this.addObjectByIndex(index, obj);\n    }\n\n    addObjectByIndex(index, obj) {\n        if (!isNaN(index) && index>=0 && index<this.size) {\n            this.cells[index].addObject(obj);\n        }\n    }\n\n    makeIndexFromVec(vec) {\n        return vec.x * this._height + vec.y;\n    }\n\n    makeIndexFromCoord(x, y) {\n        return x * this._height + y;\n    }\n\n    makeVecFromIndex(index): Vec2 {\n        const x = Math.floor(index / this._height);\n        const y = index - x * this._height;\n        return new Vec2(x, y);\n    }\n\n    /**\n     * Adds object to all cells between given coords\n     * @param worldLeftTop\n     * @param worldRightBottom\n     * @param obj\n     */\n    addObjectToCells(worldLeftTop: Vec2, worldRightBottom: Vec2, obj: BaseSolverObject) {\n        const point1 = Vec2Math.scale(worldLeftTop, this.cellSize).applySelf(Math.floor);\n        const point2 = Vec2Math.scale(worldRightBottom, this.cellSize).applySelf(Math.floor);\n\n        const index1 = this.makeIndexFromVec(point1);\n        const index2 = this.makeIndexFromVec(point2);\n\n        if (point1.x === point2.x) {\n            // Vertical\n            for (let cellIndex = index1; cellIndex < index2; cellIndex++) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else if (point1.y === point2.y) {\n            // Horizontal\n            for (let cellIndex = index1; cellIndex < index2; cellIndex+=this.height) {\n                this.cells[cellIndex].addObject(obj);\n            }\n        } else {\n            let left = Math.min(point1.x, point2.x);\n            let top = Math.min(point1.y, point2.y);\n            let right = Math.max(point1.x, point2.x);\n            let bottom = Math.max(point1.y, point2.y);\n            let height = bottom - top;\n            let startFrom = this.makeIndexFromCoord(left, top);\n\n            for (let x = 0; x <= right-left; x++) {\n                for (let y = 0; y <= height; y++) {\n                    const cellIndex= startFrom + x * this.height + y;\n                    this.addObjectByIndex(cellIndex, obj);\n                }\n            }\n        }\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            this.cells[i].clear();\n        }\n    }\n\n    forEach(callback: CollisionGridForEachCallback) {\n        this.cells.forEach((cell, index) => {\n            const pos = this.makeVecFromIndex(index);\n            callback(pos.x, pos.y, cell, index);\n        })\n    }\n\n    hasCell(index, dt) {\n        if (index < 0 || index >= this.size) {\n            return false;\n        }\n\n        const pos = this.makeVecFromIndex(index);\n\n        const x = pos.x;\n        const y = pos.y;\n\n        if (y <= 0 && dt < 0) {\n            // TOP CELL\n            return false;\n        }\n\n        if (y === this.height - 1 && dt > 0) {\n            // Bottom cell\n            return  false;\n        }\n\n        if (x === 0 && dt < 0) {\n            // left cell\n            return false;\n        }\n\n        if (x >= this.width - 1 && dt > 0) {\n            // right cell;\n            return false;\n        }\n\n        return true;\n    }\n}\n","import {Vec2} from \"./vector/vec2\";\nimport {BallsObject} from \"./objects/ball\";\nimport {BaseSolverObject} from \"./objects/object\";\nimport {Constrain} from \"./constrains/constrain\";\nimport {CollisionCell, CollisionGrid} from \"./grid\";\n\nexport class Solver {\n    objects: BaseSolverObject[] = []\n    constrains: Constrain = null;\n    gravity: Vec2 = Vec2.Zero();\n    subSteps: number = 4;\n    useFixedTime: boolean = true;\n    step: number;\n    collisionGrid: CollisionGrid;\n    worldSize: Vec2;\n\n    cellSize: Vec2;\n\n    constructor(worldSize) {\n        this.objects = [];\n        this.worldSize = worldSize.copy();\n\n        this.configure();\n    }\n\n    configure() {\n        this.gravity = new Vec2(0, 100);\n\n        this.useFixedTime = true;\n        this.step = 0.017 / this.subSteps;\n\n        const cellSize = 16;\n\n        const gridX = Math.round(this.worldSize.x / cellSize);\n        const gridY = Math.round(this.worldSize.y / cellSize);\n\n        this.cellSize = new Vec2(\n            this.worldSize.x / gridX,\n            this.worldSize.y / gridY\n        );\n\n        this.collisionGrid = new CollisionGrid(\n            gridX, gridY,\n            this.cellSize\n        )\n    }\n\n    /**\n     *\n     * @param {BallsObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n    }\n\n    /**\n     * Update the simulation by given step.\n     * @param {number} time amount of seconds passed since last update.\n     */\n    update(time) {\n        const subTime = this.useFixedTime ? this.step : time / this.subSteps;\n        for (let i = 0; i < this.subSteps; i++) {\n            this.addObjectsToGrid();\n            this.processCollisions();\n            this.applyGravity();\n            this.updateObjects(subTime);\n            this.applyConstrains();\n        }\n    }\n\n    addObjectsToGrid() {\n        this.collisionGrid.clear();\n        this.objects.forEach((obj, index) => {\n            obj.addToGrid(this.collisionGrid);\n        });\n    }\n\n    /**\n     * Update objects state\n     * @param {number} time amount of seconds passed since last update\n     */\n    updateObjects(time) {\n        this.objects.forEach(obj => obj.update(time))\n    }\n\n    applyGravity() {\n        this.objects.forEach(obj => obj.accelerate(this.gravity))\n    }\n\n    applyConstrains() {\n        this.objects.forEach(obj => this.constrains.applyConstrain(obj))\n    }\n\n    processCollisionsInCell(objA: BaseSolverObject, cell: CollisionCell) {\n        cell.objects.forEach(objB => {\n            if (objA === objB) {\n                return;\n            }\n\n            if (objA.immovable && objB.immovable) {\n                return;\n            }\n\n            objA.collide(objB);\n        })\n    }\n\n    processCell(index: number) {\n        this.collisionGrid.cells[index].objects.forEach(objA => {\n            this.processCollisionsInCell(objA, this.collisionGrid.cells[index]); // SELF\n\n            if (this.collisionGrid.hasCell(index, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - 1]); // TOP\n            }\n\n            if (this.collisionGrid.hasCell(index, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + 1]); // BOTTOM\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height - 1]); // RIGHT TOP\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, 0)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height]); // RIGHT\n            }\n\n            if (this.collisionGrid.hasCell(index + this.collisionGrid.height, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index + this.collisionGrid.height + 1]); // RIGHT BOTTOM\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, -1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height - 1]); // LEFT TOP\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, 0)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height]); // LEFT\n            }\n\n            if (this.collisionGrid.hasCell(index - this.collisionGrid.height, 1)) {\n                this.processCollisionsInCell(objA, this.collisionGrid.cells[index - this.collisionGrid.height + 1]); // LEFT BOTTOM\n            }\n        })\n    }\n\n    processCollisions() {\n        for (let index = 0; index < this.collisionGrid.size; index++) {\n            this.processCell(index);\n        }\n    }\n}\n\nfunction makeKey(obj1, obj2) {\n    return [obj1.index, obj2.index].sort().join('-');\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Rect extends Item {\n    size = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, size, color) {\n        super(context, position);\n\n        this.size = size;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.fillStyle = this.color;\n        this.context.fillRect(\n            this.position.x,\n            this.position.y,\n            this.position.x + this.size.x,\n            this.position.y + this.size.y\n        )\n    }\n}","export class RenderableObject {\n    /**\n     * @type {BallsObject}\n     */\n    ballsObject = null;\n\n    /**\n     * @type {Item}\n     */\n    renderItem = null;\n\n    constructor(ballsObject, renderItem) {\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        this.renderItem.position = this.ballsObject.currentPosition;\n    }\n\n    render() {\n        this.update();\n        this.renderItem.render();\n    }\n}","import {BallsObject} from \"./ball\";\nimport {SolverObjectTypes} from \"./types\";\nimport {CollisionGrid} from \"../grid\";\nimport {SQRT2} from \"../vector/math\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class ImmovableBallsObject extends BallsObject {\n    type = SolverObjectTypes.TypeImmovableBall;\n    immovable = true;\n    bounceValue = 0.5;\n\n    /**\n     * @type {Vec2}\n     * @private\n     */\n    _fixedPosition = null;\n\n    /**\n     * @param {Vec2} position\n     * @param {number} [radius]\n     */\n    constructor(position, radius) {\n        super(position, radius);\n        this._fixedPosition = position.copy();\n    }\n\n    update(step) {\n        this.currentPosition = this._fixedPosition;\n        this.previousPosition = this._fixedPosition;\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        const vec = new Vec2(\n            this.radius * SQRT2,\n            this.radius * SQRT2\n        )\n\n        const leftTop = this.currentPosition.sum(vec);\n        const rightBottom = this.currentPosition.diff(vec);\n\n        collisionGrid.addObjectToCells(\n            leftTop,\n            rightBottom,\n            this\n        );\n    }\n}","import {RenderableObject} from \"./object\";\n\nexport class ImmovableLineRenderableObject extends RenderableObject {\n    /**\n     * @type {ImmovableLineObject}\n     */\n    ballsObject = null;\n\n    constructor(ballsObject, renderItem) {\n        super(ballsObject);\n        this.ballsObject = ballsObject;\n        this.renderItem = renderItem;\n    }\n\n    update() {\n        super.update();\n        this.renderItem.direction = this.ballsObject._direction;\n    }\n}","import { BallsObject } from \"./ball\";\nimport { Vec2Line } from \"../vector/vec2Line\";\nimport {SolverObjectTypes} from \"./types\";\nimport {CollisionGrid} from \"../grid\";\n\nexport class ImmovableLineObject extends BallsObject {\n    _direction;\n    _line;\n\n    type = SolverObjectTypes.TypeImmovableLine;\n    immovable = true;\n\n    constructor(position, direction) {\n        super(position, 0);\n        this._direction = direction;\n\n        this._line = new Vec2Line(\n            this.currentPosition.copy(),\n            this.currentPosition.copy().sum(this._direction)\n        )\n    }\n\n    update(step) {\n        this.currentPosition = this._line._vec1;\n        this.previousPosition = this._line._vec2;\n    }\n\n    addToGrid(collisionGrid: CollisionGrid) {\n        collisionGrid.addObjectToCells(\n            this._line._vec1,\n            this._line._vec2,\n            this\n        );\n    }\n\n}","import {Item} from \"./item\";\nimport {Vec2} from \"../vector/vec2\";\n\nexport class Line extends Item {\n    direction = Vec2.Zero();\n    color = '#00ff00';\n\n    constructor(context, position, direction, color) {\n        super(context, position);\n\n        this.direction = direction;\n\n        if (color) {\n            this.color = color;\n        }\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.beginPath(); // Start a new path\n        this.context.moveTo(this.position.x, this.position.y);\n        this.context.lineTo(\n            this.position.x + this.direction.x,\n            this.position.y + this.direction.y\n        );\n        this.context.stroke(); // Render the path\n    }\n}","import {Circle} from \"./circle\";\n\nexport class CircleWithText extends Circle {\n    text = '';\n    textColor = '#ffffff';\n\n    constructor(context, position,r, color, text, textColor) {\n        super(context, position, r, color);\n        this.text = text;\n        if (textColor) {\n            this.textColor = textColor;\n        }\n    }\n\n    render() {\n        super.render();\n        this.context.fillStyle = this.textColor;\n        this.context.textBaseline = \"middle\";\n        this.context.textAlign = \"center\";\n        this.context.fillText(this.text, this.position.x, this.position.y);\n    }\n}","import {Rect} from \"./rect\";\n\nexport class Frame extends Rect {\n    constructor(context, position, size, color) {\n        super(context, position, size, color);\n    }\n\n    render() {\n        this.context.strokeStyle = this.color;\n        this.context.strokeRect(\n            this.position.x,\n            this.position.y,\n            this.size.x,\n            this.size.y\n        )\n    }\n\n    queue() {\n\n    }\n}","import {Circle} from \"./items/circle\";\nimport {Vec2} from \"./vector/vec2\";\nimport {Vec2Math} from \"./vector/vec2Math\";\nimport {BallsObject} from \"./objects/ball\";\nimport {ViewportConstrain} from \"./constrains/viewport\";\nimport {CircleConstrain} from \"./constrains/circle\";\nimport {MappedObjectGeneratorItem, MappedObjectsGenerator} from \"./mappedObjectsGenerator\";\nimport {TotalObjectsGenerator} from \"./totalObjectsGenerator\";\nimport {Solver} from \"./solver\";\nimport {Rect} from \"./items/rect\";\nimport {RenderableObject} from \"./renderableObjects/object\";\nimport {ImmovableBallsObject} from \"./objects/immovableBall\";\nimport {ImmovableLineRenderableObject} from \"./renderableObjects/immovableLine\";\nimport {ImmovableLineObject} from \"./objects/immovableLine\";\nimport {Line} from \"./items/line\";\nimport {CircleWithText} from \"./items/circleWithText\";\nimport {Frame} from \"./items/frame\";\n\nconst balls = [\n    new MappedObjectGeneratorItem(\n        1,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        2,\n        new BallsObject(new Vec2(10, 10))\n    ),\n    new MappedObjectGeneratorItem(\n        3,\n        new BallsObject(new Vec2(10, 10))\n    ),\n]\n\nconst milkShakePoints = [\n    new Vec2(0, 0),\n    new Vec2(70, 380),\n    new Vec2(270, 380),\n    new Vec2(340, 0)\n]\n\nconst milkShakeLines = [\n    [milkShakePoints[0], Vec2Math.diff(milkShakePoints[0], milkShakePoints[1]).flipSelf()],\n    [milkShakePoints[1], Vec2Math.diff(milkShakePoints[1], milkShakePoints[2]).flipSelf()],\n    [milkShakePoints[2], Vec2Math.diff(milkShakePoints[2], milkShakePoints[3]).flipSelf()]\n]\n\nconst ballsColors = {\n    57: '#ffffff',\n    78: '#ffffff',\n    71: '#ffffff',\n    86: '#ffffff',\n    200: '#ffffff',\n    202: '#ffffff',\n    218: '#ffffff',\n}\n\nfunction index2color(index) {\n    const frequency=5/1000;\n    const r = Math.floor(Math.sin(frequency*index + 0) * (127) + 128);\n    const g = Math.floor(Math.sin(frequency*index + 2) * (127) + 128);\n    const b = Math.floor(Math.sin(frequency*index + 4) * (127) + 128);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n}\n\nexport class Render {\n    /**\n     * List of balls\n     * @type {RenderableObject[]}\n     */\n    objects = []\n\n    /**\n     * @type {Constrain}\n     */\n    constrains = null;\n\n    /**\n     * Solver for physics\n     * @type {Solver}\n     */\n    solver = null;\n\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.timeRenderStart = performance.now();\n        this.timeRenderEnd = performance.now();\n        this.step = 0;\n\n        /**\n         * @type {RenderableObject[]}\n         */\n        this.objects = [];\n\n        this.items = [];\n\n        this.generator = null;\n        this.solver = null\n\n        this.redBall = null;\n\n        this.configure();\n    }\n\n    configure() {\n        this.solver = new Solver(\n            new Vec2(\n                this.canvas.width,\n                this.canvas.height\n            )\n        );\n\n        this.context.font = '10px serif';\n\n        //this.switchToCircleConstrain();\n        this.switchToViewportConstrain();\n        this.solver.constrains = this.constrains;\n\n        const canvasCenter = new Vec2(\n            this.canvas.width / 2,\n            this.canvas.height / 2\n        );\n\n        const ballGeneratorPoint = canvasCenter.diff(\n            new Vec2(\n                300,\n                300\n            )\n        )\n        const ballVelocity = new Vec2(\n            2, -2\n        ).mul(1/this.solver.subSteps);\n\n        this.generator = new TotalObjectsGenerator(\n            this.solver,\n            1000,\n            7,\n            (index) => {\n                const obj = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint,\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index+200),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj2 = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index+100),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                const obj3 = new RenderableObject(\n                    (new BallsObject(\n                        ballGeneratorPoint.sum(\n                            Vec2.Down(-20)\n                        ),\n                        5\n                    )).setVelocity(ballVelocity),\n                    new CircleWithText(\n                        this.context,\n                        Vec2.Zero(),\n                        7,\n                        index2color(index),\n                        '',\n                        '#000000'\n                    )\n                )\n\n                return [obj,obj2, obj3];\n            }\n        );\n\n        this.redBall = new RenderableObject(\n            new ImmovableBallsObject(new Vec2(230, 50), 30),\n            new Circle(this.context, Vec2.Zero(), 30, '#ff0000')\n        );\n\n        this.addObject(this.redBall);\n\n        milkShakeLines.forEach(line => {\n            this.addObject(new ImmovableLineRenderableObject(\n                new ImmovableLineObject(\n                    line[0].sum(\n                        canvasCenter.diff(new Vec2(340/2, 380/2))\n                    ),\n                    line[1]\n                ),\n                new Line(\n                    this.context,\n                    Vec2.Zero(),\n                    Vec2.Zero(),\n                    '#ffffff'\n                )\n            ));\n        });\n    }\n\n    processUserInput(event) {\n        if (event.leftButtonDown) {\n            if (this.redBall.ballsObject.isPointInsideObject(\n                new Vec2(\n                    event.screenX,\n                    event.screenY\n                )\n            )) {\n                this.canMoveRedObject = true;\n            }\n\n            if (this.canMoveRedObject) {\n                this.redBall.ballsObject.moveBy(\n                    new Vec2(\n                        event.dx,\n                        event.dy\n                    )\n                )\n            }\n        } else {\n            this.canMoveRedObject = false;\n        }\n    }\n\n    /**\n     * @param {RenderableObject} obj\n     */\n    addObject(obj) {\n        this.objects.push(obj);\n        this.solver.addObject(obj.ballsObject);\n    }\n\n    update(time) {\n        this.solver.update(time);\n    }\n\n    generatorsTick(time) {\n        const newBalls = this.generator.getNextObject(time);\n        if (newBalls) {\n            newBalls.forEach(ball => this.addObject(ball));\n        }\n    }\n\n    tick() {\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.generatorsTick(this.step / 1000);\n        this.update(this.step / 1000);\n\n        this.clear();\n        this.renderItems();\n        //this.renderGrid();\n\n        this.printFPS();\n\n        Vec2.lengthCallsCount = 0;\n    }\n\n    nextFrame = (time) => {\n        this.step = time - this.timeRenderEnd;\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = time;\n        self.requestAnimationFrame(this.nextFrame);\n    }\n\n    nextInterval = () => {\n        this.timeRenderStart = performance.now()\n        this.step = this.timeRenderStart - this.timeRenderEnd;\n\n        if (this.step < 0) {\n            this.step = 0;\n        }\n\n        this.tick();\n\n        this.timeRenderEnd = performance.now();\n    }\n\n    renderItems() {\n        this.items.forEach(item => item.render());\n        this.objects.forEach(obj => obj.render());\n    }\n\n    printText(text, x, y) {\n        this.context.fillStyle = \"#ffffff\";\n        this.context.textAlign = \"start\";\n        this.context.fillText(text, x, y);\n    }\n\n    printFPS() {\n        this.context.fillStyle = 'rgba(0,0,0,0.1)';\n        this.context.fillRect(0, 0, 100, 60);\n        this.printText(`${Math.round(this.step)} ms / ${Math.round(1000/this.step)} FPS`, 0, 10);\n        this.printText(`Length calls: ${Vec2.lengthCallsCount}`, 0 , 20);\n        this.printText(`Lenght2 calls: ${Vec2.length2CallsCount}`, 0 , 30);\n        this.printText(`Objects: ${this.objects.length}`, 0, 40);\n        this.printText(`Compares per object: ${Math.round(Vec2.lengthCallsCount / this.objects.length)}`, 0, 50);\n    }\n\n    clear() {\n        this.context.fillStyle = \"rgba(0, 0, 0, 0.9)\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    }\n\n    start() {\n        if (self.requestAnimationFrame) {\n            self.requestAnimationFrame(this.nextFrame);\n        } else {\n            setInterval(this.nextInterval, 16)\n        }\n    }\n\n    renderGrid() {\n        this.solver.collisionGrid.forEach((column, row, cell, index) => {\n            const cellPosition = new Vec2(\n                column * this.solver.cellSize.x,\n                row * this.solver.cellSize.y,\n            );\n            const rect = new Frame(\n                this.context,\n                cellPosition,\n                this.solver.cellSize.diff(new Vec2(5, 5)),\n                cell.count > 0 ? '#ff0000' : '#00ff00'\n            )\n\n            if (cell.highlight) {\n                this.context.lineWidth = 10;\n            }\n\n            rect.render();\n\n            this.context.lineWidth = 1;\n            this.printText(\n                index,\n                cellPosition.x + this.solver.cellSize.x / 2,\n                cellPosition.y + this.solver.cellSize.y / 2\n            )\n        })\n    }\n\n    switchToCircleConstrain() {\n        this.constrains = new CircleConstrain(\n            new Vec2(this.canvas.width / 2, this.canvas.height / 2),\n            this.canvas.height / 2\n        )\n\n        this.items.push(\n            new Circle(\n                this.context,\n                this.canvas.width / 2,\n                this.canvas.height / 2,\n                this.canvas.height / 2,\n                '#000000'\n            )\n        );\n    }\n\n    switchToViewportConstrain() {\n        this.constrains = new ViewportConstrain(this.canvas.width, this.canvas.height)\n        // this.items.push(\n        //     new Rect(\n        //         this.context,\n        //         Vec2.Zero(),\n        //         new Vec2(\n        //             this.canvas.width,\n        //             this.canvas.height\n        //         ),\n        //         '#000000'\n        //     )\n        // );\n    }\n}","import {Render} from \"../render\";\nimport {UIEvent, UserInput} from \"./input\";\n\nexport class DirectApplication {\n    render;\n    userInput;\n\n    constructor(canvas) {\n        this.render = new Render(canvas);\n        this.render.start();\n\n        this.userInput = new UserInput(canvas);\n        this.userInput.addHandler(this.sendUserInputEvent);\n    }\n\n    sendUserInputEvent = (event) => {\n        this.render.processUserInput(event)\n    }\n}","import { onReady }  from \"../utils/onReady\";\nimport { getElement } from \"../utils/getElement\";\n\nimport {WorkerApplication} from \"./worker\";\nimport {DirectApplication} from \"./direct\";\n\nfunction initApplication() {\n    console.log('Init application');\n    /**\n     * @var {HTMLCanvasElement}\n     */\n    const canvas = getElement(\"#image_canvas\");\n    const container = getElement('#container');\n    canvas.width = container.offsetWidth;\n    canvas.height = container.offsetHeight;\n\n    if (canvas.transferControlToOffscreen) {\n        console.log('Render in worker');\n        const application = new WorkerApplication(canvas);\n    } else {\n        // There is no support for offscreen render\n        console.log('Render in main thread');\n        const application = new DirectApplication(canvas);\n    }\n}\n\nonReady(initApplication);"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$58eda289ea048412$var$DOCUMENT_STATE_LOADING","$eac4a1d0ec467e0d$export$9a8db54f22040fa8","$eac4a1d0ec467e0d$export$d16800b7e59a8051","selector","element","document","querySelector","$ca7d6e5ec5c2de91$export$3ac5e585cf392ee0","UserInput","canvas","_this","this","mouseEnter","browserEvent","event","createMouseEvent","processEvent","_oldX","screenX","_oldY","screenY","mouseLeave","mouseMove","mouseDown","_leftButtonDown","mouseUp","click","_canvas","_handlers","Set","addHandlers","prototype","addEventListener","removeHandlers","forEach","callback","addHandler","add","removeHandler","has","delete","offsetX","offsetY","dx","dy","leftButtonDown","$0947efbae938b3e7$export$80edbf15fa61a4db","MessageType","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$export$5a759dc7a1cfb72a","$0947efbae938b3e7$export$fbae1a0d0e7e2437","type","MessageNone","$0947efbae938b3e7$export$fd1648b71482b662","_super","MessageInit","call","$0947efbae938b3e7$var$__extends","$0947efbae938b3e7$export$45b98a991719aa36","MessageUserInput","$902f5cabe5153acc$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$1f09cc003f0b4477$var$url","resolve","$1f09cc003f0b4477$exports","$e6feaf16c3bc6e03$export$6bb4378561ad428b","WorkerApplication","sendUserInputEvent","worker","postMessage","$0947efbae938b3e7$exports","Worker","offscreen","transferControlToOffscreen","userInput","initUserInput","$9139f4380ced0e7c$export$2e2bcd8739ae039","obj","key","defineProperty","enumerable","configurable","writable","$40d8c204eca13666$export$79992de41895b472","Vec2Exception","$40d8c204eca13666$var$__extends","$40d8c204eca13666$export$98e05f023e6bbbeb","Vec2ExceptionParallel","$40d8c204eca13666$export$cc5bbfba1d12de75","Vec2ExceptionNoPerpendicularVectorToZeroVector","$e5de9eabbeda23c2$export$92b0492af2e4b152","Vec2Math","diff","vec1","vec2","$49cc11f80f30d315$export$ac4bca90992eed1","x","y","mul","scalar","distance","distance2","length2","intersect","line1","line2","K","$40d8c204eca13666$exports","isNaN","makeVec2FromX","_vec1","B","dot","mirror","vec","line","normal","direction","perpendicular","scale","$c7b6624e166bd908$export$9201df218db36553","$c7b6624e166bd908$export$3681641e15b6e2c3","Math","sqrt","Vec2","l","_x","_y","_length","_length2","get","set","lengthCallsCount","length2CallsCount","addSelf","subSelf","flipYSelf","flipXSelf","flipSelf","equals","sum","copy","applySelf","Horizontal","ort","Vertical","Zero","Down","Right","$f063daebf0665eed$export$6d08773d2e66f8f2","render","queue","constructor","context","position","$ed739c01afcc0f09$export$c89a927ffc67e6fa","beginPath","arc","r","PI","fillStyle","color","fill","super","$ddc17c0135a22855$export$a59432db1b5f15cd","SolverObjectTypes","$2a2e3eda438ab4d8$export$769818a274da100a","Vec2Line","_vec2","_k","_b","_direction","_ort","calculateKB","inBetween","a","b","error","abs","NaN","moveBy","getPointProjection","cosabD","Number","MAX_SAFE_INTEGER","$f25c327de554914b$export$98e6d07575f46913","obj1","obj2","flipped","$f25c327de554914b$var$flipObjects","TypeBall","between","currentPosition","requiredDistance","radius","normalized","delta","bounceValue","$f25c327de554914b$export$23e74c69ee7b6dae","TypeImmovableBall","ball","immovable","$f25c327de554914b$export$6d6f4258faab0992","TypeImmovableLine","projectionPoint","_line","e","$f25c327de554914b$export$4d790f09e0e06cd9","$2f55dc95961edca2$export$8387ea1f2c3d2dbf","BaseSolverObject","TypeNull","previousPosition","index","update","step","accelerate","acc","collide","addToGrid","collisionGrid","$80d0760ac39122b7$export$e4134913c977dac4","BallsObject","undefined","$80d0760ac39122b7$var$__extends","velocity","setVelocity","vel","addObject","floor","isPointInsideObject","point","v","$e18f36a0ab1ee1a3$export$504c072c1a75a697","applyConstrain","$2ba0d4f1a77121a6$export$29fb847bec292dd0","width","_width","height","_height","$e1a9354934259beb$export$4384cf344d141b50","toCenter","center","n","$77242e0c215628b5$export$780b62e628ec518f","getNextObject","solver","$8f759762936427f5$export$cf86583e2e1a386b","timeout","object","$0b9f7d857f4d9b8d$export$a16316d22a718d27","total","limit","lastCreateTime","delay","newItems","create","count","createCallback","$ff5dee84c455e107$export$e172ac46f8971d96","CollisionCell","objects","highlight","MAX_OBJECT_IN_CELL","push","clear","remove","objectIndex","findIndex","splice","$ff5dee84c455e107$export$82d945040ef2d6e1","CollisionGrid","cellSize","cells","resize","_size","w","h","worldX","worldY","addObjectByIndex","size","makeIndexFromVec","makeIndexFromCoord","makeVecFromIndex","addObjectToCells","worldLeftTop","worldRightBottom","point1","point2","index1","index2","cellIndex","left","min","top","right","max","startFrom","cell","pos","hasCell","dt","$377e69a362c127bb$export$cca492cadf45c096","Solver","worldSize","constrains","gravity","subSteps","useFixedTime","configure","gridX","round","gridY","time","subTime","addObjectsToGrid","processCollisions","applyGravity","updateObjects","applyConstrains","processCollisionsInCell","objA","objB","processCell","$fd183cca0536a075$export$c79fc6492f3af13d","fillRect","$0e0cb4043c08d089$export$c682e94218fd2425","renderItem","ballsObject","$f7c14a2437505727$export$231acc6c5e36d927","ImmovableBallsObject","_fixedPosition","$f7c14a2437505727$var$__extends","leftTop","rightBottom","$80d0760ac39122b7$exports","$4ea50bfaede81891$export$d17c9f1e24f0afb0","$fed0099072574bc6$export$35284351ee95db01","ImmovableLineObject","$fed0099072574bc6$var$__extends","$7c9a976f6dfa6a2e$export$17d680238e50603e","strokeStyle","moveTo","lineTo","stroke","$c1ea9936536a0c7f$export$d56a2681f508d897","textColor","textBaseline","textAlign","fillText","text","$eb06ec93f255e5c2$export$b89a827e9254211a","strokeRect","$b87dd7b3c2f70655$var$milkShakePoints","$b87dd7b3c2f70655$var$milkShakeLines","$b87dd7b3c2f70655$var$index2color","frequency","sin","$b87dd7b3c2f70655$export$160ae30d75f98247","font","switchToViewportConstrain","canvasCenter","ballGeneratorPoint","ballVelocity","generator","redBall","$f7c14a2437505727$exports","$fed0099072574bc6$exports","processUserInput","canMoveRedObject","generatorsTick","newBalls","tick","renderItems","printFPS","items","item","printText","start","requestAnimationFrame","nextFrame","setInterval","nextInterval","renderGrid","column","row","cellPosition","rect","lineWidth","switchToCircleConstrain","timeRenderEnd","timeRenderStart","performance","now","getContext","$6a5f1c8f4f31fd5e$export$a712f6800434119d","console","log","container","offsetWidth","offsetHeight","readyState"],"version":3,"file":"index.4e040578.js.map"}